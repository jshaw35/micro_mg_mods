406,416c406
<      errstring,                                                  & 
< !AL right names?
<      nnuccctot, nnuccttot, npsacwstot, nsubctot, npratot,       &
<      nprc1tot, ncsedtentot, nisedtentot, nmelttot, nhomotot,    &
<      nimelttot, nihomotot, nsacwitot, nsubitot, nprcitot,       &
<      npraitot, nnudeptot, npccntot, nnuccdtot, mnudeptot,       &
<      frzr,nfrzr, nnuccritot, mnuccritot,                        &
< !
<      nctnszmx,nctnszmn, nctnncld, nitncons, nitnszmx,nitnszmn, nitnncld, &
< !AL
<   ! Below arguments are "optional" (pass null pointers to omit).
---
>      errstring, & ! Below arguments are "optional" (pass null pointers to omit).
597,634d586
< !AL change these to tot? output is now called tot and packed in interface?
<  real(r8), intent(out) :: nnuccctot(mgncol,nlev)   ! immersion freezing
<  real(r8), intent(out) :: nnuccttot(mgncol,nlev)   ! contact freezing
<  real(r8), intent(out) :: npsacwstot(mgncol,nlev)  ! accr. snow
<  real(r8), intent(out) :: nsubctot(mgncol,nlev)    ! evaporation of droplet 
<  real(r8), intent(out) :: npratot(mgncol,nlev)     ! accretion
<  real(r8), intent(out) :: nprc1tot(mgncol,nlev)    ! autoconversion
<  real(r8), intent(out) :: ncsedtentot(mgncol,nlev) ! nqc sedimentation tendency
<  real(r8), intent(out) :: nisedtentot(mgncol,nlev) ! nqi sedimentation tendency
<  real(r8), intent(out) :: nmelttot(mgncol,nlev)    ! nc melting of cloud ice
<  real(r8), intent(out) :: nhomotot(mgncol,nlev)    ! nc homogeneos freezign cloud water
<  real(r8), intent(out) :: nimelttot(mgncol,nlev)   ! ni melting of cloud ice
<  real(r8), intent(out) :: nihomotot(mgncol,nlev)   ! ni homogeneos freezign cloud water
<  real(r8), intent(out) :: nsacwitot(mgncol,nlev)   ! numb conc tend due to HM ice multiplication
<  real(r8), intent(out) :: nsubitot(mgncol,nlev)    ! evaporation of cloud ice number (sublimation?)
<  real(r8), intent(out) :: nprcitot(mgncol,nlev)    ! numb conc tend due to auto of cloud ice to snow
<  real(r8), intent(out) :: npraitot(mgncol,nlev)    ! numb conc tend due to accr of cloud ice by snow
<  real(r8), intent(out) :: nnudeptot(mgncol,nlev)   ! deposition?
<  real(r8), intent(out) :: npccntot(mgncol,nlev)    ! droplet activation
<  real(r8), intent(out) :: nnuccdtot(mgncol,nlev)   ! ni nucleation
<  real(r8), intent(out) :: mnudeptot(mgncol,nlev)   ! deposition (mass) 
< !
<  real(r8), intent(out) :: nctnszmx(mgncol,nlev)  ! nc tuning: maximum slope (reduction of number)
<  real(r8), intent(out) :: nctnszmn(mgncol,nlev)  ! nc tuning: minimum slope (increase of numer)
<  real(r8), intent(out) :: nctnncld(mgncol,nlev)  ! nc tuning: removal of nc when qc is zero after mg
<  real(r8), intent(out) :: nitncons(mgncol,nlev)  ! ni tuning to conserve numberi in substeps
<  real(r8), intent(out) :: nitnszmx(mgncol,nlev)  ! ni tuning: maximum slope
<  real(r8), intent(out) :: nitnszmn(mgncol,nlev)  ! ni tuning: minimum minimum slope
<  real(r8), intent(out) :: nitnncld(mgncol,nlev)  ! ni tuning: removal of ni when qi is zero after mg
<  real(r8), intent(out) :: mnuccritot(mgncol,nlev)! mixing ratio tendency due to heterogeneous freezing of rain to snow (1/s)
<  real(r8), intent(out) :: nnuccritot(mgncol,nlev)! mixing ratio tendency due to heterogeneous freezing of rain to snow (1/s)
<  real(r8), intent(out) :: frzr(mgncol,nlev)! mixing ratio tendency due to heterogeneous freezing of rain to ice (1/s)
<  real(r8), intent(out) :: nfrzr(mgncol,nlev)! ni tendency due to heterogeneous freezing of rain to ice (1/s)
< !AL
< 
< 
< 
< 
1020,1056d971
< !AL this is correct since output now is tot? add new term!
<   nnuccctot=0._r8
<   nnuccttot=0._r8
<   npsacwstot=0._r8
<   nsubctot=0._r8
<   npratot=0._r8
<   nprc1tot=0._r8
<   ncsedtentot=0._r8
<   nisedtentot=0._r8
<   nmelttot=0._r8
<   nhomotot=0._r8
<   nimelttot=0._r8
<   nihomotot=0._r8
<   nsacwitot=0._r8
<   nsubitot=0._r8
<   nprcitot=0._r8
<   npraitot=0._r8
<   nnudeptot=0._r8
<   npccntot=0._r8
<   nnuccdtot=0._r8
<   mnudeptot=0._r8 
<   mnuccritot=0._r8
<   nnuccritot=0._r8
< 
<   nctnszmx=0._r8
<   nctnszmn=0._r8
<   nctnncld=0._r8
<   nitncons=0._r8
<   nitnszmx=0._r8
<   nitnszmn=0._r8
<   nitnncld=0._r8
< 
<   frzr=0._r8
<   nfrzr=0._r8
< 
< !AL
< 
1773,1775d1687
<           !dum = pre(i,k)*deltat/qr(i,k)
<           !dum = max(-1._r8,dum)
<           !nsubr(i,k) = dum*nr(i,k)/deltat
2033,2055d1944
< !AL
<         mnuccritot(i,k) = mnuccri(i,k)*precip_frac(i,k)
<         mnudeptot(i,k)=mnudep(i,k)*lcldm(i,k)
< 
<            ! microphysics output for number concentration tendencies
<            ! for liq.
<         nnuccctot(i,k)=nnuccc(i,k)*lcldm(i,k)
<         nnuccttot(i,k)=nnucct(i,k)*lcldm(i,k)
<         npsacwstot(i,k)=npsacws(i,k)*lcldm(i,k)
<         nsubctot(i,k)=nsubc(i,k)*lcldm(i,k)
<         npratot(i,k)=npra(i,k)*lcldm(i,k)
<         nprc1tot(i,k)=nprc1(i,k)*lcldm(i,k)
< 
<            ! for ice
<         nsacwitot(i,k)=nsacwi(i,k)*lcldm(i,k)
<         nsubitot(i,k)=nsubi(i,k)*icldm(i,k)
<         nprcitot(i,k)=nprci(i,k)*icldm(i,k)
<         npraitot(i,k)=nprai(i,k)*icldm(i,k)
<         nnudeptot(i,k)=nnudep(i,k)*lcldm(i,k)
<         nnuccdtot(i,k)=nnuccd(i,k)
<         nnuccritot(i,k) = nnuccri(i,k)*precip_frac(i,k)
< 
< !AL
2086d1974
<           nitncons(i,k) = nitncons(i,k) + nitend(i,k)-max(0._r8,(nimax(i,k)-ni(i,k))/deltat) !AL
2135,2137d2022
< !AL
<   npccntot = npccn
< !AL
2378,2380c2263
< !AL
<         nisedtentot(i,k)=nisedtentot(i,k)-faltndni/nstep
< !AL
---
> 
2406,2408c2289
< !AL
<         nisedtentot(i,k)=nisedtentot(i,k)-faltndni/nstep
< !AL
---
> 
2462,2464c2343
< !AL
<         ncsedtentot(i,k)=ncsedtentot(i,k)-faltndnc/nstep
< !AL
---
> 
2482,2484c2361
< !AL
<         ncsedtentot(i,k)=ncsedtentot(i,k)-faltndnc/nstep
< !AL
---
> 
2727,2730d2603
< !AL
<                  frzr(i,k)=frzr(i,k)+dum*dumr(i,k)/deltat
<                  nfrzr(i,k)=nfrzr(i,k)+dum*dumnr(i,k)/deltat
< !AL
2772,2778d2644
< !AL
<                ! for output
<                  nmelttot(i,k)=3._r8*dum*dumi(i,k)/deltat/ &
<                       (4._r8*pi*5.12e-16_r8*rhow)
<                  nimelttot(i,k)=nitend(i,k)-((1._r8-dum)*dumni(i,k)-ni(i,k))/deltat
< !AL
< 
2815,2820d2680
< 
< !AL
<                  nhomotot(i,k)=nctend(i,k)-((1._r8-dum)*dumnc(i,k)-nc(i,k))/deltat
<                  nihomotot(i,k)=dum*3._r8*dumc(i,k)/(4._r8*3.14_r8*1.563e-14_r8* &
<                       500._r8)/deltat
< !AL
2923,2928d2782
<                  if (dumni(i,k)<dum_2D(i,k)) then
<                     nitnszmx(i,k)=nitnszmx(i,k) + nitend(i,k)-(dumni(i,k)*icldm(i,k)-ni(i,k))/deltat !AL
<                  else
<                     nitnszmn(i,k)=nitnszmn(i,k) + nitend(i,k)-(dumni(i,k)*icldm(i,k)-ni(i,k))/deltat !AL
<                  endif
< 
2981,2985d2834
<               if (dumnc(i,k)<dum) then
<                  nctnszmx(i,k)=nctnszmx(i,k) + nctend(i,k)-(dumnc(i,k)*lcldm(i,k)-nc(i,k))/deltat !AL
<               else
<                  nctnszmn(i,k)=nctnszmn(i,k) + nctend(i,k)-(dumnc(i,k)*lcldm(i,k)-nc(i,k))/deltat !AL
<               endif
3064,3071c2913,2914
<         if (qc(i,k)+qctend(i,k)*deltat.lt.qsmall)  then !AL
<            nctnncld(i,k) = nctnncld(i,k) + nctend(i,k) +nc(i,k)/deltat !AL
<            nctend(i,k)=-nc(i,k)/deltat
<         endif
<         if (do_cldice .and. qi(i,k)+qitend(i,k)*deltat.lt.qsmall)then !AL
<             nitnncld(i,k) = nitnncld(i,k) + nitend(i,k) +ni(i,k)/deltat
<             nitend(i,k)=-ni(i,k)/deltat
<         endif
---
>         if (qc(i,k)+qctend(i,k)*deltat.lt.qsmall) nctend(i,k)=-nc(i,k)/deltat
>         if (do_cldice .and. qi(i,k)+qitend(i,k)*deltat.lt.qsmall) nitend(i,k)=-ni(i,k)/deltat
