90,91d89
< use cam_history_support, only: add_hist_coord !zsm
< 
144,157d141
< ! SLF output - new dimensions !zsm
< integer, parameter :: nisotherms_mpc = 9
< real(r8), target :: isotherms_mpc_midpoints(nisotherms_mpc)
< real(r8), target :: isotherms_mpc_bounds(2,nisotherms_mpc)
< 
< integer, parameter :: nslfbins = 11
< real(r8), target :: slfbins_midpoints(nslfbins)
< real(r8), target :: slfbins_bounds(2,nslfbins)
< 
< integer, parameter :: nprecipbins = 32
< real(r8), target :: precipbins_midpoints(nprecipbins)
< real(r8), target :: precipbins_bounds(2,nprecipbins)
< !--- !zsm
< 
177d160
<    sadliq_idx,         & !zsm
251,252d233
<    prec_dp_idx = -1,        & !zsm
<    prec_sh_idx = -1,        & !zsm
472d452
<    call pbuf_add_field('SADLIQ',     'physpkg',dtype_r8,(/pcols,pver/), sadliq_idx) !zsm
551d530
<       call pbuf_register_subcol('SADLIQ',      'micro_mg_cam_register', sadliq_idx) !zsm
684,686d662
<    integer :: t, s, pr             ! loop through bins of temperature, slf,
<                                    ! and precip  !zsm
< 
786,863d761
<    ! SLF OUTPUT !zsm
<    !
<    ! WARNING: Must divide each in-cloud var by corresponding CLD_ISOTM var
<    !          to adjust for raw SLF vars
<    !          being monthly averages that include zeros at times/locations where
<    !          no cloud detected on isotherm
<    !          i.e. SLF_ISOTM = SLFXCLD_ISOTM / CLD_ISOTM
< 
<    ! Fill in info on new dimensions
< 
<    do t=1,nisotherms_mpc
<       isotherms_mpc_midpoints(t)=273.15_r8-5._r8*(nisotherms_mpc-t)
<       isotherms_mpc_bounds(1,t)=isotherms_mpc_midpoints(t)-1.0_r8
<       isotherms_mpc_bounds(2,t)=isotherms_mpc_midpoints(t)+1.0_r8
<    end do
< 
<    call add_hist_coord('isotherms_mpc', nisotherms_mpc, 'mixed-phase cloud isotherms (data within 1.0C)',  &
<            'C', isotherms_mpc_midpoints, bounds_name='isotherms_mpc_bounds', bounds=isotherms_mpc_bounds)
< 
<    slfbins_midpoints   = (/ 5.e-31_r8, .00005_r8, .00055_r8, .0055_r8, .055_r8, .5_r8, &
<                             .945_r8, .9945_r8, .99945_r8, .99995_r8,       1._r8-5.e-31 /)
<    slfbins_bounds(1,:) = (/ 0._r8,     1.e-30_r8, .0001_r8,  .001_r8,  .01_r8, .1_r8,  &
<                             .9_r8,   .99_r8,   .999_r8,   .9999_r8,        1._r8-1.e-30_r8 /)
<    slfbins_bounds(2,:) = (/ 1.e-30_r8, .0001_r8,  .001_r8,   .01_r8,   .1_r8, .9_r8,   &
<                             .99_r8,  .999_r8,  .9999_r8,  1._r8-1.e-30_r8, 1._r8 /)
< 
<    call add_hist_coord('slfbins', nslfbins, 'supercooled liquid fraction bins',  &
<            'C', slfbins_midpoints, bounds_name='slfbins_bounds', bounds=slfbins_bounds)
< 
<    precipbins_bounds(1,1) = 0._r8
<    precipbins_bounds(2,1) = 1.e-3_r8
<    precipbins_midpoints(1) = 5.e-4_r8
<    do pr=2,nprecipbins
<       precipbins_bounds(1,pr)= precipbins_bounds(2,pr-1)
<       if (pr.ne.nprecipbins) then
<          precipbins_bounds(2,pr)=precipbins_bounds(1,pr) * 10._r8**(5._r8/(nprecipbins-2._r8))
<       else
<          precipbins_bounds(2,pr)=precipbins_bounds(1,pr)*1.e10_r8
<       end if
<       precipbins_midpoints(pr)=(precipbins_bounds(1,pr)+precipbins_bounds(2,pr))/2._r8
<    end do
< 
<    call add_hist_coord('precipbins', nprecipbins, 'precipitation rate bins', &
<            'C', precipbins_midpoints, bounds_name='precipbins_bounds', bounds=precipbins_bounds)
< 
<    ! Define new variables
< 
<    call addfld ('SLFXCLD_ISOTM',        (/'isotherms_mpc'/), 'A', ' ', 'Mean supercooled liquid fraction near isotherm * CLD_ISOTM (discard below thick cloud)' )
<    call addfld ('SADLIQXCLD_ISOTM',     (/'isotherms_mpc'/), 'A', ' ', 'Mean droplet surface area density near isotherm * CLD_ISOTM (discard below thick cloud)')
<    call addfld ('SADICEXCLD_ISOTM',     (/'isotherms_mpc'/), 'A', ' ', 'Mean ice surface area density near isotherm * CLD_ISOTM (discard below thick cloud)'    )
<    call addfld ('BERGOXCLD_ISOTM',      (/'isotherms_mpc'/), 'A', ' ', 'Mean BERGO near isotherm * CLD_ISOTM (discard below thick cloud)'                       )
<    call addfld ('BERGSOXCLD_ISOTM',     (/'isotherms_mpc'/), 'A', ' ', 'Mean BERGSO near isotherm * CLD_ISOTM (discard below thick cloud)'                      )
<    call addfld ('CLD_ISOTM' ,           (/'isotherms_mpc'/), 'A', ' ', 'Total cloud fraction near isotherm (discard below thick cloud)'                         )
< 
<    call addfld ('SLFXCLD_ISOTM_NONSIM',        (/'isotherms_mpc'/), 'A', ' ', 'Mean supercooled liquid fraction near isotherm * CLD_ISOTM_NONSIM' )
<    call addfld ('SADLIQXCLD_ISOTM_NONSIM',     (/'isotherms_mpc'/), 'A', ' ', 'Mean droplet surface area density near isotherm * CLD_ISOTM_NONSIM')
<    call addfld ('SADICEXCLD_ISOTM_NONSIM',     (/'isotherms_mpc'/), 'A', ' ', 'Mean ice surface area density near isotherm * CLD_ISOTM_NONSIM'    )
<    call addfld ('BERGOXCLD_ISOTM_NONSIM',      (/'isotherms_mpc'/), 'A', ' ', 'Mean BERGO near isotherm * CLD_ISOTM_NONSIM'                       )
<    call addfld ('BERGSOXCLD_ISOTM_NONSIM',     (/'isotherms_mpc'/), 'A', ' ', 'Mean BERGSO near isotherm * CLD_ISOTM_NONSIM'                      )
<    call addfld ('CLD_ISOTM_NONSIM' ,           (/'isotherms_mpc'/), 'A', ' ', 'Total cloud fraction near isotherm'                                )
< 
<    call addfld ('CLD_SLF',        (/'slfbins'/),                       'A', ' ', 'Total cloud fraction in SLF bin (discard below thick cloud)'              )
<    call addfld ('CLD_ISOTM_SLF',  (/'isotherms_mpc','slfbins'/),       'A', ' ', 'Total cloud fraction in SLF bin near isotherm (discard below thick cloud)')
< 
<    call addfld ('CLD_SLF_NONSIM',        (/'slfbins'/),                       'A', ' ', 'Total cloud fraction in SLF bin'              )
<    call addfld ('CLD_ISOTM_SLF_NONSIM',  (/'isotherms_mpc','slfbins'/),       'A', ' ', 'Total cloud fraction in SLF bin near isotherm')
< 
<    call addfld ('PRECIPBINOCC_CC',  (/'precipbins'/), 'A', ' ', 'Occurrence of convective precip bin'  )
<    call addfld ('PRECIPBINOCC_CL',  (/'precipbins'/), 'A', ' ', 'Occurrence of stratiform precip bin'  )
<    call addfld ('PRECIPBINOCC_CT',  (/'precipbins'/), 'A', ' ', 'Occurrence of total precip bin'       )
<    call addfld ('PRECIPBINRATE_CC', (/'precipbins'/), 'A', ' ', 'Precip rate in convective precip bin' )
<    call addfld ('PRECIPBINRATE_CL', (/'precipbins'/), 'A', ' ', 'Precip rate in stratiform precip bin' )
<    call addfld ('PRECIPBINRATE_CT', (/'precipbins'/), 'A', ' ', 'Precip rate in total precip bin'      )
< 
< 
<    call addfld ('CLDTAU',               (/ 'lev' /),         'A', ' ', 'Cloud optical thickness'                                    )
<    !--- !zsm
< 
897a796,833
> !AL MG microphysics diagnostics number tendencies
>    call addfld ('NNUCCCO  ',(/ 'lev' /), 'A', '1/kg/s  ', 'NC tendency immersion freezing'       ) 
>    call addfld ('NNUCCTO  ',(/ 'lev' /), 'A', '1/kg/s  ', 'NC tendency contact freezing'         )
>    call addfld ('NPSACWSO ',(/ 'lev' /), 'A', '1/kg/s  ', 'NC tendency accretion by snow'        )
>    call addfld ('NSUBCO   ',(/ 'lev' /), 'A', '1/kg/s  ', 'NC tendency evaporation of droplet'   )
>    call addfld ('NPRAO    ',(/ 'lev' /), 'A', '1/kg/s  ', 'NC tendency accretion'                )
>    call addfld ('NPRC1O   ',(/ 'lev' /), 'A', '1/kg/s  ', 'NC tendency autoconversion'           )
>    call addfld ('NQCSEDTEN',(/ 'lev' /), 'A', '1/kg/s  ', 'NC tendency sedimentation'            )
>    call addfld ('NQISEDTEN',(/ 'lev' /), 'A', '1/kg/s  ', 'NI tendency sedimentation'            )
>    call addfld ('NMELTO   ',(/ 'lev' /), 'A', '1/kg/s  ', 'NC tendency melting'                  )
>    call addfld ('NIMELTO  ',(/ 'lev' /), 'A', '1/kg/s  ', 'NI tendency melting'                  )
>    call addfld ('NHOMOO   ',(/ 'lev' /), 'A', '1/kg/s  ', 'NC tendency homogeneous freezing'     )
>    call addfld ('NIHOMOO  ',(/ 'lev' /), 'A', '1/kg/s  ', 'NI tendency homogeneous freezing'     )
>    call addfld ('NSACWIO  ',(/ 'lev' /), 'A', '1/kg/s  ', 'NI tendency from HM'                  )
>    call addfld ('NSUBIO   ',(/ 'lev' /), 'A', '1/kg/s  ', 'NI tendency evaporation'              )
>    call addfld ('NPRCIO   ',(/ 'lev' /), 'A', '1/kg/s  ', 'NI tendency autoconversion snow'      )
>    call addfld ('NPRAIO   ',(/ 'lev' /), 'A', '1/kg/s  ', 'NI tendency accretion snow'           )
>    call addfld ('NNUDEPO  ',(/ 'lev' /), 'A', '1/kg/s  ', 'NI deposition'                        )
>    call addfld ('NPCCNO   ',(/ 'lev' /), 'A', '1/kg/s  ', 'NC activation'                        )
>    call addfld ('NPCCNO2  ',(/ 'lev' /), 'A', '1/kg/s  ', 'NC activation'                        )
>    call addfld ('NNUCCDO  ',(/ 'lev' /), 'A', '1/kg/s  ', 'NI nuccleation'                       )
>    call addfld ('NCTNCONS ',(/ 'lev' /), 'A', '1/kg/s  ', 'NC tuning: conservation of nc '       )
>    call addfld ('NCTNNBMN ',(/ 'lev' /), 'A', '1/kg/s  ', 'NC tuning: minimum nc'                )
>    call addfld ('NCTNSZMN ',(/ 'lev' /), 'A', '1/kg/s  ', 'NC tuning: minimum slope parameter'   )
>    call addfld ('NCTNSZMX ',(/ 'lev' /), 'A', '1/kg/s  ', 'NC tuning: maximum slope parameter'   )
>    call addfld ('NCTNNCLD ',(/ 'lev' /), 'A', '1/kg/s  ', 'NC tuning: removal of nc for zero cloud water'  )
>    call addfld ('NITNCONS ',(/ 'lev' /), 'A', '1/kg/s  ', 'NI tuning: conservation of ni '                 )
>    call addfld ('NITNSZMN ',(/ 'lev' /), 'A', '1/kg/s  ', 'NI tuning: minimum slope parameter'             )
>    call addfld ('NITNSZMX ',(/ 'lev' /), 'A', '1/kg/s  ', 'NI tuning: maximum slope parameter'             )
>    call addfld ('NITNNCLD ',(/ 'lev' /), 'A', '1/kg/s  ', 'NI tuning: removal of nI for zero cloud ice'    )
>    call addfld ('MNUDEPO  ',(/ 'lev' /), 'A', 'kg/kg/s ', 'Mixing ratio deposition'                        )
>    call addfld ('MPDNLIQ  ',(/ 'lev' /), 'A', '1/kg/s  ', 'CLDLIQ number tendency - Morrison microphysics' )
>    call addfld ('MPDNICE  ',(/ 'lev' /), 'A', '1/kg/s  ', 'CLDICE number tendency - Morrison microphysics' )
>    call addfld ('FRZR     ',(/ 'lev' /), 'A', 'kg/kg/s  ', 'Mass freezing rain to snow'    )
>    call addfld ('NFRZR    ',(/ 'lev' /), 'A', '1/kg/s ', 'Number freezing rain to snow' )
>    call addfld ('MNUCCRI  ',(/ 'lev' /), 'A', 'kg/kg/s  ', 'Mass freezing rain to ice'  )
>    call addfld ('NNUCCRI  ',(/ 'lev' /), 'A', '1/kg/s  ', 'Number freezing rain to ice' )
> 
952a889,897
>    !++IH
>    !For comparing to Bernartz CDNC concentrations
> !akc6   call addfld ('ACTNL_B    ', horiz_only, 'A', 'Micron  ', 'Average Cloud Top droplet number (Bennartz)'                         )
>    call addfld ('ACTNL_B    ', horiz_only, 'A', 'm-3',  'Average Cloud Top   droplet number (Bennartz)'                       )
>    call addfld ('FCTL_B     ', horiz_only, 'A', 'fraction',  'Fractional occurrence of cloud top liquid (Bennartz)'           )
> !ak6+
>    call addfld ('CCN_B      ', horiz_only, 'A', 'm-3',  'Average Cloud Top liquid CCN (Bennartz)'                             )
> !ak6-
>    !--IH
972d916
<    call addfld ('MG_SADLIQ',   (/ 'lev' /),  'A', 'cm2/cm3',  'MG surface area density liq'                                       ) !zsm
1049a994,1008
>       !++IH (Bennartz CDNC comparison) and extra clouds diags
>       ! made default for NorESM
>       call add_default ('ACTNL     ', 1, ' ')
>       call add_default ('ACTREL     ', 1, ' ')
>       call add_default ('FCTL    ', 1, ' ')
>       call add_default ('ACTNI     ', 1, ' ')
>       call add_default ('ACTREI     ', 1, ' ')
>       call add_default ('FCTI    ', 1, ' ')
>       !These are for comparing to Bennartz
>       call add_default ('FCTL_B    ', 1, ' ')
>       call add_default ('ACTNL_B     ', 1, ' ')
>       !--IH
> !akc6+
>       call add_default ('CCN_B       ', 1, ' ')
> !akc6-
1057,1059d1015
<    call add_default ('MG_SADICE',        1, ' ') !zsm
<    call add_default ('MG_SADLIQ',        1, ' ') !zsm
< 
1100a1057,1099
> !AL
>       call add_default ('NNUCCCO  ', budget_histfile, ' ')
>       call add_default ('NNUCCTO  ', budget_histfile, ' ')
>       call add_default ('NPSACWSO ', budget_histfile, ' ')
>       call add_default ('NSUBCO   ', budget_histfile, ' ')
>       call add_default ('NPRAO    ', budget_histfile, ' ')
>       call add_default ('NPRC1O   ', budget_histfile, ' ')
>       call add_default ('NQCSEDTEN', budget_histfile, ' ')
>       call add_default ('NQISEDTEN', budget_histfile, ' ')
>       call add_default ('NMELTO   ', budget_histfile, ' ')
>       call add_default ('NIMELTO  ', budget_histfile, ' ')
>       call add_default ('NHOMOO   ', budget_histfile, ' ')
>       call add_default ('NIHOMOO  ', budget_histfile, ' ')
>       call add_default ('NSACWIO  ', budget_histfile, ' ')
>       call add_default ('NSUBIO   ', budget_histfile, ' ')
>       call add_default ('NPRCIO   ', budget_histfile, ' ')
>       call add_default ('NPRAIO   ', budget_histfile, ' ')
>       call add_default ('NNUDEPO  ', budget_histfile, ' ')
>       call add_default ('MNUDEPO  ', budget_histfile, ' ')
>       call add_default ('NPCCNO   ', budget_histfile, ' ')
>       call add_default ('NPCCNO2  ', budget_histfile, ' ')
>       call add_default ('NNUCCDO  ', budget_histfile, ' ')
> 
>       call add_default ('NCTNNCLD ', budget_histfile, ' ')
>       call add_default ('NITNCONS ', budget_histfile, ' ')
>       call add_default ('NITNNCLD ', budget_histfile, ' ')
>       call add_default ('NCTNSZMN ', budget_histfile,' ')
>       call add_default ('NCTNSZMX ', budget_histfile,' ')
>       call add_default ('NITNSZMN ', budget_histfile,' ')
>       call add_default ('NITNSZMX ', budget_histfile,' ')
>       select case (micro_mg_version)
>       case (1)
>          call add_default ('NCTNCONS ', budget_histfile, ' ')
>          call add_default ('NCTNNBMN ', budget_histfile, ' ')
>       case (2)
>          call add_default ('FRZR ', budget_histfile, ' ')
>          call add_default ('NFRZR ', budget_histfile, ' ')
>          call add_default ('MNUCCRI ', budget_histfile, ' ')
>          call add_default ('NNUCCRI ', budget_histfile, ' ')
>       end select
>       call add_default ('MPDNLIQ  ', budget_histfile, ' ')
>       call add_default ('MPDNICE  ', budget_histfile, ' ')
> !AL
1119,1149d1117
<    ! SLF OUTPUT !zsm
<    call add_default ('SLFXCLD_ISOTM',        1, ' ')
<    call add_default ('SADLIQXCLD_ISOTM',     1, ' ')
<    call add_default ('SADICEXCLD_ISOTM',     1, ' ')
<    call add_default ('BERGOXCLD_ISOTM',      1, ' ')
<    call add_default ('BERGSOXCLD_ISOTM',     1, ' ')
<    call add_default ('CLD_ISOTM',            1, ' ')
< 
<    call add_default ('SLFXCLD_ISOTM_NONSIM',        1, ' ')
<    call add_default ('SADLIQXCLD_ISOTM_NONSIM',     1, ' ')
<    call add_default ('SADICEXCLD_ISOTM_NONSIM',     1, ' ')
<    call add_default ('BERGOXCLD_ISOTM_NONSIM',      1, ' ')
<    call add_default ('BERGSOXCLD_ISOTM_NONSIM',     1, ' ')
<    call add_default ('CLD_ISOTM_NONSIM',            1, ' ')
< 
<    call add_default ('CLD_SLF',                      1, ' ')
<    call add_default ('CLD_ISOTM_SLF',                1, ' ')
< 
<    call add_default ('CLD_SLF_NONSIM',               1, ' ')
<    call add_default ('CLD_ISOTM_SLF_NONSIM',         1, ' ')
< 
<    call add_default ('PRECIPBINOCC_CC          ',1,' ')
<    call add_default ('PRECIPBINOCC_CL          ',1,' ')
<    call add_default ('PRECIPBINOCC_CT          ',1,' ')
<    call add_default ('PRECIPBINRATE_CC         ',1,' ')
<    call add_default ('PRECIPBINRATE_CL         ',1,' ')
<    call add_default ('PRECIPBINRATE_CT         ',1,' ')
< 
<    call add_default ('CLDTAU',               1, ' ')
<    !--- !zsm
< 
1167,1168d1134
<    prec_dp_idx  = pbuf_get_index('PREC_DP') !zsm
<    prec_sh_idx  = pbuf_get_index('PREC_SH') !zsm
1239,1242c1205
<    integer :: lchnk                  !zsm
<    integer, allocatable :: mgcols(:) ! column indices !zsm
<    real(r8), allocatable :: mgrlats(:) ! zsm
< 
---
>    integer, allocatable :: mgcols(:) ! Columns with microphysics performed
1247d1209
<    lchnk = state%lchnk               !zsm
1254c1216
<       call micro_mg_get_cols2_0(lchnk,ncol, nlev, top_lev, state%q(:,:,ixcldliq), & !zsm
---
>       call micro_mg_get_cols2_0(ncol, nlev, top_lev, state%q(:,:,ixcldliq), &
1256c1218
<            mgncol, mgcols, mgrlats) !zsm
---
>            mgncol, mgcols)
1259c1221
<    call micro_mg_cam_tend_pack(state, ptend, dtime, pbuf, mgncol, mgcols, mgrlats, nlev) !zsm
---
>    call micro_mg_cam_tend_pack(state, ptend, dtime, pbuf, mgncol, mgcols, nlev)
1263c1225
< subroutine micro_mg_cam_tend_pack(state, ptend, dtime, pbuf, mgncol, mgcols, mgrlats, nlev) !zsm
---
> subroutine micro_mg_cam_tend_pack(state, ptend, dtime, pbuf, mgncol, mgcols, nlev)
1287d1248
<    real(r8), intent(in) :: mgrlats(:)  !zsm
1293d1253
<    integer :: t, s, pr                 !zsm
1310,1313d1269
<    real(r8), pointer :: prec_dp(:)           ! total precipitation from ZM convection !zsm
<    real(r8), pointer :: prec_sh(:)           ! total precipitation from Hack convection !zsm
<    real(r8):: precc(pcols)                   ! convective precip rate !zsm
<    real(r8):: precl(pcols)                   ! stratiform precip rate !zsm
1330,1366d1285
<    ! SLF Calculation - define new variables, etc !zsm
<    real(r8) :: slfxcld_isotm(pcols,nisotherms_mpc)
<    real(r8) :: sadliqxcld_isotm(pcols,nisotherms_mpc)
<    real(r8) :: sadicexcld_isotm(pcols,nisotherms_mpc)
<    real(r8) :: bergoxcld_isotm(pcols,nisotherms_mpc)
<    real(r8) :: bergsoxcld_isotm(pcols,nisotherms_mpc)
<    real(r8) :: cld_isotm(pcols,nisotherms_mpc)
< 
<    real(r8) :: slfxcld_isotm_nonsim(pcols,nisotherms_mpc)
<    real(r8) :: sadliqxcld_isotm_nonsim(pcols,nisotherms_mpc)
<    real(r8) :: sadicexcld_isotm_nonsim(pcols,nisotherms_mpc)
<    real(r8) :: bergoxcld_isotm_nonsim(pcols,nisotherms_mpc)
<    real(r8) :: bergsoxcld_isotm_nonsim(pcols,nisotherms_mpc)
<    real(r8) :: cld_isotm_nonsim(pcols,nisotherms_mpc)
< 
<    real(r8) :: cld_slf(pcols,nslfbins)
<    real(r8) :: cld_isotm_slf(pcols,nisotherms_mpc,nslfbins)
< 
<    real(r8) :: cld_slf_nonsim(pcols,nslfbins)
<    real(r8) :: cld_isotm_slf_nonsim(pcols,nisotherms_mpc,nslfbins)
< 
<    real(r8) :: precipbinocc_cc(pcols,nprecipbins)
<    real(r8) :: precipbinocc_cl(pcols,nprecipbins)
<    real(r8) :: precipbinocc_ct(pcols,nprecipbins)
<    real(r8) :: precipbinrate_cc(pcols,nprecipbins)
<    real(r8) :: precipbinrate_cl(pcols,nprecipbins)
<    real(r8) :: precipbinrate_ct(pcols,nprecipbins)
< 
<    real(r8) :: cldtau(pcols,pver)
<    real(r8) :: wgt
<    logical :: calioptest(pcols)
<    real(r8), parameter :: abarl = 2.817e-02_r8 ! A coefficient for extinction optical depth
<    real(r8), parameter :: bbarl = 1.305_r8 ! b coefficient for extinction optical depth
<    real(r8), parameter :: abari = 3.448e-03_r8 ! A coefficient for extinction optical depth
<    real(r8), parameter :: bbari = 2.431_r8 ! b coefficient for extinction optical depth
<    !---!zsm/itan
< 
1407a1327
> 
1447a1368,1402
> !AL
>    real(r8), target :: nnuccco(state%psetcols,pver)   ! immersion freezing
>    real(r8), target :: nnuccto(state%psetcols,pver)   ! contact freezing
>    real(r8), target :: npsacwso(state%psetcols,pver)  ! accr. snow
>    real(r8), target :: nsubco(state%psetcols,pver)    ! evaporation of droplet 
>    real(r8), target :: nprao(state%psetcols,pver)     ! accretion
>    real(r8), target :: nprc1o(state%psetcols,pver)    ! autoconversion
>    real(r8), target :: nqcsedten(state%psetcols,pver) ! nqc sedimentation tendency
>    real(r8), target :: nqisedten(state%psetcols,pver) ! nqc sedimentation tendency
>    real(r8), target :: nmelto(state%psetcols,pver)    ! melting of cloud ice
>    real(r8), target :: nhomoo(state%psetcols,pver)    ! homogeneos freezign cloud water
>    real(r8), target :: nimelto(state%psetcols,pver)   ! melting of cloud ice
>    real(r8), target :: nihomoo(state%psetcols,pver)   ! homogeneos freezign cloud water
>    real(r8), target :: nsacwio(state%psetcols,pver)   ! numb conc tend due to HM ice multiplication
>    real(r8), target :: nsubio(state%psetcols,pver)    ! evaporation of cloud ice number (sublimation?)
>    real(r8), target :: nprcio(state%psetcols,pver)    ! numb conc tend due to auto of cloud ice to snow
>    real(r8), target :: npraio(state%psetcols,pver)    ! numb conc tend due to accr of cloud ice by snow
>    real(r8), target :: nnudepo(state%psetcols,pver)   ! deposition?
>    real(r8), target :: npccno(state%psetcols,pver)    ! activation
>    real(r8), target :: nnuccdo(state%psetcols,pver)   ! nucleation (ice)
>    real(r8), target :: mnudepo(state%psetcols,pver)   ! deposition
>    real(r8), target :: nctncons(state%psetcols,pver)   ! correction term
>    real(r8), target :: nctnnbmn(state%psetcols,pver)   ! correction if below minimum number
>    real(r8), target :: nctnszmn(state%psetcols,pver)   ! gamma adjustment (liquid)
>    real(r8), target :: nctnszmx(state%psetcols,pver)   ! gamma adjustment (liquid)
>    real(r8), target :: nctnncld(state%psetcols,pver)   ! correction for no cloud
>    real(r8), target :: nitncons(state%psetcols,pver)   ! numerical conservation check in sub-time step
>    real(r8), target :: nitnszmn(state%psetcols,pver)   ! gamma-adjustment (ice)
>    real(r8), target :: nitnszmx(state%psetcols,pver)   ! gamma-adjustment (ice)
>    real(r8), target :: nitnncld(state%psetcols,pver)   ! corrrection for no cloud
>    real(r8), target :: frzr(state%psetcols,pver)       ! mass freezing rain ==>snow
>    real(r8), target :: nfrzr(state%psetcols,pver)      ! number freezing rain ==> snow
>    real(r8), target :: mnuccri(state%psetcols,pver)   ! mass freezing rain ==> ice 
>    real(r8), target :: nnuccri(state%psetcols,pver)   ! number freezing rain ==> ice 
> !AL
1576d1530
<    real(r8), target :: packed_sadliq(mgncol,nlev) !zsm
1594a1549,1584
> !AL
>    real(r8), target :: packed_nnuccco(mgncol,nlev)   ! immersion freezing
>    real(r8), target :: packed_nnuccto(mgncol,nlev)   ! contact freezing
>    real(r8), target :: packed_npsacwso(mgncol,nlev)  ! accr. snow
>    real(r8), target :: packed_nsubco(mgncol,nlev)    ! evaporation of droplet 
>    real(r8), target :: packed_nprao(mgncol,nlev)     ! accretion
>    real(r8), target :: packed_nprc1o(mgncol,nlev)    ! autoconversion
>    real(r8), target :: packed_nqcsedten(mgncol,nlev) ! nqc sedimentation tendency
>    real(r8), target :: packed_nqisedten(mgncol,nlev) ! nqc sedimentation tendency
>    real(r8), target :: packed_nmelto(mgncol,nlev)    ! melting of cloud ice
>    real(r8), target :: packed_nhomoo(mgncol,nlev)    ! homogeneos freezign cloud water
>    real(r8), target :: packed_nimelto(mgncol,nlev)   ! melting of cloud ice
>    real(r8), target :: packed_nihomoo(mgncol,nlev)   ! homogeneos freezign cloud water
>    real(r8), target :: packed_nsacwio(mgncol,nlev)   ! numb conc tend due to HM ice multiplication
>    real(r8), target :: packed_nsubio(mgncol,nlev)    ! evaporation of cloud ice number (sublimation?)
>    real(r8), target :: packed_nprcio(mgncol,nlev)    ! numb conc tend due to auto of cloud ice to snow
>    real(r8), target :: packed_npraio(mgncol,nlev)    ! numb conc tend due to accr of cloud ice by snow
>    real(r8), target :: packed_nnudepo(mgncol,nlev)   ! deposition?
>    real(r8), target :: packed_npccno(mgncol,nlev)    ! activation
>    real(r8), target :: packed_nnuccdo(mgncol,nlev)   ! nucleation (ice)
>    real(r8), target :: packed_mnudepo(mgncol,nlev)   ! deposition
>    real(r8), target :: packed_nctncons(mgncol,nlev)   ! correction term
>    real(r8), target :: packed_nctnnbmn(mgncol,nlev)   ! correction if below minimum number
>    real(r8), target :: packed_nctnszmn(mgncol,nlev)   ! gamma adjustment (liquid)
>    real(r8), target :: packed_nctnszmx(mgncol,nlev)   ! gamma adjustment (liquid)
>    real(r8), target :: packed_nctnncld(mgncol,nlev)   ! correction for no cloud
>    real(r8), target :: packed_nitncons(mgncol,nlev)   ! numerical conservation check in sub-time step
>    real(r8), target :: packed_nitnszmn(mgncol,nlev)   ! gamma-adjustment (ice)
>    real(r8), target :: packed_nitnszmx(mgncol,nlev)   ! gamma-adjustment (ice)
>    real(r8), target :: packed_nitnncld(mgncol,nlev)   ! corrrection for no cloud
>    real(r8), target :: packed_frzr(mgncol,nlev)       ! mass freezing rain ==> snow 
>    real(r8), target :: packed_nfrzr(mgncol,nlev)      ! number freezing rain ==> snow
>    real(r8), target :: packed_mnuccri(mgncol,nlev)    ! mass freezing rain ==> ice
>    real(r8), target :: packed_nnuccri(mgncol,nlev)    ! number freezing rain ==>ice
> !AL
> 
1640d1629
<    real(r8), pointer :: sadliq(:,:)       ! Ice surface area density (cm2/cm3) !zsm
1692a1682,1688
>    !++IH: 
>    real(r8) :: fctl_b(pcols) !frequency of occurrence for Bennartz 
>    real(r8) :: ctnl_b(pcols) !cdnc [/m3] for Bennartz
> !akc6+
>    real(r8) :: ccn_b(pcols)  !ccm [/m3] defined as for cdnc for Bennartz
> !akc6-
>    !--IH
1725d1720
<    real(r8), pointer :: sadliq_grid(:,:) !zsm
1909d1903
<    call pbuf_get_field(pbuf, sadliq_idx,      sadliq,      col_type=col_type) !zsm
1913,1914d1906
<    call pbuf_get_field(pbuf, prec_dp_idx,     prec_dp,     col_type=col_type) !zsm
<    call pbuf_get_field(pbuf, prec_sh_idx,     prec_sh,     col_type=col_type) !zsm
1964d1955
<       call pbuf_get_field(pbuf, sadliq_idx,      sadliq_grid) !zsm
1968,1969d1958
<       call pbuf_get_field(pbuf, prec_dp_idx,     prec_dp) !zsm
<       call pbuf_get_field(pbuf, prec_sh_idx,     prec_sh) !zsm
2172a2162,2197
> !AL
>    call post_proc%add_field(p(nnuccco), p(packed_nnuccco))
>    call post_proc%add_field(p(nnuccto), p(packed_nnuccto))
>    call post_proc%add_field(p(npsacwso), p(packed_npsacwso))
>    call post_proc%add_field(p(nsubco), p(packed_nsubco))
>    call post_proc%add_field(p(nprao), p(packed_nprao))
>    call post_proc%add_field(p(nprc1o), p(packed_nprc1o))
>    call post_proc%add_field(p(nqcsedten), p(packed_nqcsedten))
>    call post_proc%add_field(p(nqisedten), p(packed_nqisedten))
>    call post_proc%add_field(p(nmelto), p(packed_nmelto))
>    call post_proc%add_field(p(nhomoo), p(packed_nhomoo))
>    call post_proc%add_field(p(nimelto), p(packed_nimelto))
>    call post_proc%add_field(p(nihomoo), p(packed_nihomoo))
>    call post_proc%add_field(p(nsacwio), p(packed_nsacwio))
>    call post_proc%add_field(p(nsubio), p(packed_nsubio))
>    call post_proc%add_field(p(nprcio), p(packed_nprcio))
>    call post_proc%add_field(p(npraio), p(packed_npraio))
>    call post_proc%add_field(p(nnudepo), p(packed_nnudepo))
>    call post_proc%add_field(p(npccno), p(packed_npccno))
>    call post_proc%add_field(p(nnuccdo), p(packed_nnuccdo))
>    call post_proc%add_field(p(mnudepo), p(packed_mnudepo))
>    call post_proc%add_field(p(nctncons), p(packed_nctncons))
>    call post_proc%add_field(p(nctnnbmn), p(packed_nctnnbmn))
>    call post_proc%add_field(p(nctnszmn), p(packed_nctnszmn))
>    call post_proc%add_field(p(nctnszmx), p(packed_nctnszmx))
>    call post_proc%add_field(p(nctnncld), p(packed_nctnncld))
>    call post_proc%add_field(p(nitncons), p(packed_nitncons))
>    call post_proc%add_field(p(nitnszmn), p(packed_nitnszmn))
>    call post_proc%add_field(p(nitnszmx), p(packed_nitnszmx))
>    call post_proc%add_field(p(nitnncld), p(packed_nitnncld))
>    call post_proc%add_field(p(frzr), p(packed_frzr))
>    call post_proc%add_field(p(nfrzr), p(packed_nfrzr))
>    call post_proc%add_field(p(mnuccri), p(packed_mnuccri))
>    call post_proc%add_field(p(nnuccri), p(packed_nnuccri))
> !AL
> 
2182,2183d2206
<    call post_proc%add_field(p(sadliq), p(packed_sadliq), &
<         accum_method=accum_null)                            !zsm
2277c2300,2311
<                  packed_frzimm, packed_frzcnt, packed_frzdep)
---
>                  packed_frzimm, packed_frzcnt, packed_frzdep, &
> !AL
>          packed_nnuccco, packed_nnuccto, packed_npsacwso, packed_nsubco, packed_nprao,       &
>          packed_nprc1o, packed_nqcsedten, packed_nqisedten, packed_nmelto, packed_nhomoo,    &
>          packed_nimelto, packed_nihomoo, packed_nsacwio, packed_nsubio, packed_nprcio,       &
>          packed_npraio, packed_nnudepo, packed_npccno, packed_nnuccdo, packed_mnudepo,       &
>          packed_nctncons, packed_nctnnbmn, packed_nctnszmn,                    &
>          packed_nctnszmx, packed_nctnncld, packed_nitncons, packed_nitnszmn,          &
>          packed_nitnszmx, packed_nitnncld)
> 
> 
> !AL
2286d2319
<                  mgrlats,                                        & !zsm
2304c2337
<                  packed_sadice, packed_sadliq,  packed_sadsnow,  & !zsm
---
>                  packed_sadice,          packed_sadsnow,         &
2337a2371,2385
> !AL right names?
>                   packed_nnuccco, packed_nnuccto,  &
>                   packed_npsacwso, packed_nsubco, packed_nprao,       &
>                   packed_nprc1o, packed_nqcsedten, &
>                   packed_nqisedten, packed_nmelto, packed_nhomoo,    &
>                   packed_nimelto, packed_nihomoo, packed_nsacwio,    &
>                   packed_nsubio, packed_nprcio,       &
>                   packed_npraio, packed_nnudepo,      & 
>                   packed_npccno, packed_nnuccdo, packed_mnudepo,       &
>                   packed_frzr,packed_nfrzr,        &
>                   packed_nnuccri, packed_mnuccri,               &
>                   packed_nctnszmx,packed_nctnszmn, &
>                   packed_nctnncld, packed_nitncons, &
>                   packed_nitnszmx, packed_nitnszmn, packed_nitnncld, &
> !AL
2473,2475d2520
<    precc(:ncol)    = prec_dp(:ncol)  + prec_sh(:ncol) !zsm
<    precl(:ncol)    = prec_sed(:ncol) + prec_pcw(:ncol) !zsm
< 
2506,2516d2550
<          !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
<          ! Calculate cloud optical thickness for use making SLF comparable with
<          ! observations !itan/zsm
<           if(cld(i,k) >= 0.01) then
<              cldtau(i,k) = (abarl + bbarl/rel(i,k)) * iclwpst(i,k)*1000._r8 + &
<                            (abari + bbari/rei(i,k)) * iciwpst(i,k)*1000._r8
<           else
<              cldtau(i,k) = 0._r8
<           endif
<          !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
< 
2620d2653
<       sadliq_grid     => sadliq !zsm
3024a3058,3063
>    !++IH for comparign to Bennartz CDNC concentrations 
>    fctl_b  = 0._r8
>    ctnl_b  = 0._r8
> !akc6+
>    ccn_b   = 0._r8
> !akc6-
3071,3201c3110,3125
<    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
<    !
<    ! SLF CALCULATIONS !zsm/muge/itan
<    ! Written by I Tan & M Komurcu as used in Komurcu et al JGR 2014
<    ! Bug fixes & modifications by Z S McGraw
<    !
<    ! Averages Supercooled Liquid Fraction (SLF) between all
<    ! occurences of clouds on isotherms (-10C,-15C,-20C,
<    ! -25C,-30C,-35C) EXCEPT where hidden below dense cloud
<    ! (OD>3.0), for comparison with CALIOP observations as in
<    ! Tan et al Science 2015
<    !
<    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
< 
<    slfxcld_isotm                     = 0._r8
<    sadliqxcld_isotm                  = 0._r8
<    sadicexcld_isotm                  = 0._r8
<    bergoxcld_isotm                   = 0._r8
<    bergsoxcld_isotm                  = 0._r8
<    cld_isotm                         = 0._r8
< 
<    slfxcld_isotm_nonsim              = 0._r8
<    sadliqxcld_isotm_nonsim           = 0._r8
<    sadicexcld_isotm_nonsim           = 0._r8
<    bergoxcld_isotm_nonsim            = 0._r8
<    bergsoxcld_isotm_nonsim           = 0._r8
<    cld_isotm_nonsim                  = 0._r8
< 
<    cld_slf                           = 0._r8
<    cld_isotm_slf                     = 0._r8
< 
<    cld_slf_nonsim                    = 0._r8
<    cld_isotm_slf_nonsim              = 0._r8
< 
<    precipbinocc_cl                   = 0._r8 
<    precipbinocc_cc                   = 0._r8 
<    precipbinocc_ct                   = 0._r8 
<    precipbinrate_cl                  = 0._r8
<    precipbinrate_cc                  = 0._r8
<    precipbinrate_ct                  = 0._r8
< 
<    ! Calculate variables without accounting for satellite limitations below
<    ! thick clouds
<    do i=1,ncol
<     do k=1,pver
<      if (cld(i,k).gt.0.01 .and. (icimrst(i,k)+icwmrst(i,k)).gt.1.e-7_r8) then
< 
<          do t=1,nisotherms_mpc
<           if ((state_loc%t(i,k).gt.isotherms_mpc_bounds(1,t)).and.(state_loc%t(i,k).le.isotherms_mpc_bounds(2,t))) then
<              slfxcld_isotm_nonsim(i,t)        = slfxcld_isotm_nonsim(i,t) + sadliq_grid(i,k)/(sadliq_grid(i,k)+sadice_grid(i,k)) * cld(i,k)
<              sadliqxcld_isotm_nonsim(i,t)     = sadliqxcld_isotm_nonsim(i,t) + sadliq_grid(i,k) * cld(i,k)
<              sadicexcld_isotm_nonsim(i,t)     = sadicexcld_isotm_nonsim(i,t) + sadice_grid(i,k) * cld(i,k)
<              bergoxcld_isotm_nonsim(i,t)      = bergoxcld_isotm_nonsim(i,t) + bergo_grid(i,k) * cld(i,k)
<              bergsoxcld_isotm_nonsim(i,t)     = bergsoxcld_isotm_nonsim(i,t) + bergso_grid(i,k) * cld(i,k)
<              cld_isotm_nonsim(i,t)            = cld_isotm_nonsim(i,t) + cld(i,k)
<           endif ! loose temperature conditional
<          end do
< 
<          ! output binned by supercooled liquid fraction
<          do s=1,nslfbins
<           if ((sadliq_grid(i,k)/(sadliq_grid(i,k)+sadice_grid(i,k)).ge.slfbins_bounds(1,s)).and.(sadliq_grid(i,k)/(sadliq_grid(i,k)+sadice_grid(i,k)).le.slfbins_bounds(2,s))) then
<              cld_slf_nonsim(i,s) = cld_slf_nonsim(i,s) + cld(i,k)
< 
<              do t=1,nisotherms_mpc
<               if ((state_loc%t(i,k).gt.isotherms_mpc_bounds(1,t)).and.(state_loc%t(i,k).le.isotherms_mpc_bounds(2,t))) then
<                 cld_isotm_slf_nonsim(i,t,s) = cld_isotm_slf_nonsim(i,t,s) + cld(i,k)
<               end if ! loose temperature conditional
<              end do
<           endif
<          end do
< 
<      endif ! cld fract and mr conditional
<     enddo ! i, k loops
<    enddo ! i, k loops
< 
<    ! Calculate variables to match CALIOP (discard instances below thick cloud)
< 
<    do i=1,ncol
<      calioptest(i)=.true.
<    enddo
< 
<    do i=1,ncol
<     do k=1,pver
<      if (cld(i,k).gt.0.01 .and. (icimrst(i,k)+icwmrst(i,k)).gt.1.e-7_r8) then
<        if (calioptest(i)) then
<          if (cldtau(i,k).gt.3.0) calioptest(i)=.false.
< 
<          do t=1,nisotherms_mpc
<           if ((state_loc%t(i,k).gt.isotherms_mpc_bounds(1,t)).and.(state_loc%t(i,k).le.isotherms_mpc_bounds(2,t))) then
<              slfxcld_isotm(i,t)        = slfxcld_isotm(i,t) + sadliq_grid(i,k)/(sadliq_grid(i,k)+sadice_grid(i,k)) * cld(i,k)
<              sadliqxcld_isotm(i,t)     = sadliqxcld_isotm(i,t) + sadliq_grid(i,k) * cld(i,k)
<              sadicexcld_isotm(i,t)     = sadicexcld_isotm(i,t) + sadice_grid(i,k) * cld(i,k)
<              bergoxcld_isotm(i,t)      = bergoxcld_isotm(i,t) + bergo_grid(i,k) * cld(i,k)
<              bergsoxcld_isotm(i,t)     = bergsoxcld_isotm(i,t) + bergso_grid(i,k) * cld(i,k)
<              cld_isotm(i,t)            = cld_isotm(i,t) + cld(i,k)
<           endif ! loose temperature conditional
<          end do
< 
<          ! output binned by supercooled liquid fraction
<          do s=1,nslfbins
<           if ((sadliq_grid(i,k)/(sadliq_grid(i,k)+sadice_grid(i,k)).ge.slfbins_bounds(1,s)).and.(sadliq_grid(i,k)/(sadliq_grid(i,k)+sadice_grid(i,k)).le.slfbins_bounds(2,s))) then
<              cld_slf(i,s) = cld_slf(i,s) + cld(i,k)
< 
<              do t=1,nisotherms_mpc
<               if ((state_loc%t(i,k).gt.(isotherms_mpc_bounds(1,t)-2.5_r8)).and.(state_loc%t(i,k).le.(isotherms_mpc_bounds(2,t)+2.5_r8))) then
<                 cld_isotm_slf(i,t,s) = cld_isotm_slf(i,t,s) + cld(i,k)
<               end if ! loose temperature conditional
<              end do
<           endif
<          end do
< 
<        endif ! cld opt thickness conditional
<      endif ! cld fract and mr conditional
<     enddo ! i, k loops
<    enddo ! i, k loops
< 
<    do i=1,ncol
<       do pr=1,nprecipbins
<          if ((precc(i)*3.6e6_r8.ge.precipbins_bounds(1,pr)).and.(precc(i)*3.6e6_r8.lt.precipbins_bounds(2,pr))) then
<             precipbinocc_cc(i,pr)  = precipbinocc_cc(i,pr) + 1.0_r8
<             precipbinrate_cc(i,pr)  = precipbinrate_cc(i,pr) + precc(i)*3.6e6_r8
<          end if
< 
<          if ((precl(i)*3.6e6_r8.ge.precipbins_bounds(1,pr)).and.(precl(i)*3.6e6_r8.lt.precipbins_bounds(2,pr))) then
<             precipbinocc_cl(i,pr)  = precipbinocc_cl(i,pr) + 1.0_r8
<             precipbinrate_cl(i,pr)  = precipbinrate_cl(i,pr) + precl(i)*3.6e6_r8
<          end if
< 
<          if (((precc(i)+precl(i))*3.6e6_r8.ge.precipbins_bounds(1,pr)).and.((precc(i)+precl(i))*3.6e6_r8.lt.precipbins_bounds(2,pr))) then
<             precipbinocc_ct(i,pr)  = precipbinocc_ct(i,pr) + 1.0_r8
<             precipbinrate_ct(i,pr)  = precipbinrate_ct(i,pr) + (precc(i)+precl(i))*3.6e6_r8
---
>    !Calculate values for comparing with Bennartz 2017
>    do i = 1, ncol
>       do k = top_lev, pver
>          !Criterions for Bennartz (2017) to use values from a column
>          !1) 268 < T < 300 [K]
>          !2) liquid cloud fraction > 10 %
>          if (   liqcldf(i,k) > 0.1_r8   & 
>                .and. state_loc%t(i,k) > 268.0_r8 & 
>                .and. state_loc%t(i,k) < 300.0_r8 ) then   
>             !Save cloud fraction and in-cloud number conc
>             ctnl_b(i)  = icwnc(i,k) * liqcldf(i,k)
>             fctl_b(i)  = liqcldf(i,k)
> !akc6+
>             ccn_b(i)   = ncal(i,k) * liqcldf(i,k)
> !akc6-
>             exit !==> Go out to i=1,ncol-loop
3202a3127
>          !--IH
3204,3206c3129
<    end do ! i loop
< 
<    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
---
>    end do
3207a3131,3143
>    call outfld( 'ACTREL'     , ctrel_grid,     pcols, lchnk )
>    call outfld( 'ACTREI'     , ctrei_grid,     pcols, lchnk )
>    call outfld( 'ACTNL'      , ctnl_grid,      pcols, lchnk )
>    call outfld( 'ACTNI'      , ctni_grid,      pcols, lchnk )
>    call outfld( 'FCTL'       , fctl_grid,      pcols, lchnk )
>    call outfld( 'FCTI'       , fcti_grid,      pcols, lchnk )
>    !++IH 
>    call outfld( 'FCTL_B'       , fctl_b,      pcols, lchnk )
>    call outfld( 'ACTNL_B'      , ctnl_b,      pcols, lchnk )
> !akc6+
>    call outfld( 'CCN_B'      , ccn_b,          pcols, lchnk )
> !akc6-
>    !--IH
3283,3309c3219,3259
<    !SLF output - print to history files !zsm
<    call outfld( 'SLFXCLD_ISOTM',        slfxcld_isotm,         pcols,lchnk )
<    call outfld( 'SADLIQXCLD_ISOTM',     sadliqxcld_isotm,      pcols,lchnk )
<    call outfld( 'SADICEXCLD_ISOTM',     sadicexcld_isotm,      pcols,lchnk )
<    call outfld( 'BERGOXCLD_ISOTM',      bergoxcld_isotm,       pcols,lchnk )
<    call outfld( 'BERGSOXCLD_ISOTM',     bergsoxcld_isotm,      pcols,lchnk )
<    call outfld( 'CLD_ISOTM',            cld_isotm,             pcols,lchnk )
< 
<    call outfld( 'SLFXCLD_ISOTM_NONSIM',        slfxcld_isotm_nonsim,        pcols,lchnk )
<    call outfld( 'SADLIQXCLD_ISOTM_NONSIM',     sadliqxcld_isotm_nonsim,     pcols,lchnk )
<    call outfld( 'SADICEXCLD_ISOTM_NONSIM',     sadicexcld_isotm_nonsim,     pcols,lchnk )
<    call outfld( 'BERGOXCLD_ISOTM_NONSIM',      bergoxcld_isotm_nonsim,      pcols,lchnk )
<    call outfld( 'BERGSOXCLD_ISOTM_NONSIM',     bergsoxcld_isotm_nonsim,     pcols,lchnk )
<    call outfld( 'CLD_ISOTM_NONSIM',            cld_isotm_nonsim,            pcols,lchnk )
< 
<    call outfld( 'CLD_SLF',                      cld_slf,              pcols,lchnk )
<    call outfld( 'CLD_ISOTM_SLF',                cld_isotm_slf,        pcols,lchnk )
< 
<    call outfld( 'CLD_SLF_NONSIM',               cld_slf_nonsim,              pcols,lchnk )
<    call outfld( 'CLD_ISOTM_SLF_NONSIM',         cld_isotm_slf_nonsim,        pcols,lchnk )
< 
<    call outfld('PRECIPBINOCC_CC',               precipbinocc_cc,    pcols,lchnk)
<    call outfld('PRECIPBINOCC_CL',               precipbinocc_cl,    pcols,lchnk)
<    call outfld('PRECIPBINOCC_CT',               precipbinocc_ct,    pcols,lchnk)
<    call outfld('PRECIPBINRATE_CC',              precipbinrate_cc,   pcols,lchnk)
<    call outfld('PRECIPBINRATE_CL',              precipbinrate_cl,   pcols,lchnk)
<    call outfld('PRECIPBINRATE_CT',              precipbinrate_ct,   pcols,lchnk)
---
> !AL
>    call outfld ('NNUCCCO  ', nnuccco,     psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('NNUCCTO  ', nnuccto,     psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('NPSACWSO ', npsacwso,    psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('NSUBCO   ', nsubco,      psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('NPRAO    ', nprao,       psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('NPRC1O   ', nprc1o,      psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('NQCSEDTEN', nqcsedten,   psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('NQISEDTEN', nqisedten,   psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('NMELTO   ', nmelto,      psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('NIMELTO  ', nimelto,     psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('NHOMOO   ', nhomoo,      psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('NIHOMOO  ', nihomoo,     psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('NSACWIO  ', nsacwio,     psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('NSUBIO   ', nsubio,      psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('NPRCIO   ', nprcio,      psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('NPRAIO   ', npraio,      psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('NNUDEPO  ', nnudepo,     psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('NPCCNO   ', npccno,      psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('NPCCNO2  ', npccn,       psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('NNUCCDO  ', nnuccdo,     psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('MNUDEPO  ', mnudepo,     psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('NCTNCONS ', nctncons,    psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('NCTNNBMN ', nctnnbmn,    psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('NCTNSZMN ', nctnszmn,    psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('NCTNSZMX ', nctnszmx,    psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('NCTNNCLD ', nctnncld,    psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('NITNCONS ', nitncons,    psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('NITNSZMN ', nitnszmn,    psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('NITNSZMX ', nitnszmx,    psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld ('NITNNCLD ', nitnncld,    psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    if (micro_mg_version > 1) then
>       call outfld ('FRZR   ', frzr,       psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>       call outfld ('NFRZR  ', nfrzr,      psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>       call outfld ('MNUCCRI', mnuccri,    psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>       call outfld ('NNUCCRI', nnuccri,    psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    end if
> 
>    call outfld( 'MPDNLIQ  ', ncten,       psetcols, lchnk, avg_subcol_field=use_subcol_microp )
>    call outfld( 'MPDNICE  ', niten,       psetcols, lchnk, avg_subcol_field=use_subcol_microp )
> !AL
3311,3312d3260
<    call outfld( 'CLDTAU',                       cldtau,             pcols,lchnk )
<    !--- !zsm
3371d3318
<    call outfld('MG_SADLIQ',   sadliq_grid,      pcols, lchnk) !zsm
