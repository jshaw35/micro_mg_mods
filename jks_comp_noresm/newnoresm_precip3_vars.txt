netcdf newnoresm_precip3.cam.rh0.0001-01-06-00000 {
dimensions:
	lat = 96 ;
	zlon = 1 ;
	nbnd = 2 ;
	lon = 144 ;
	time = UNLIMITED ; // (1 currently)
	chars = 8 ;
	lev = 32 ;
	ilev = 33 ;
	isotherms_mpc = 9 ;
	slfbins = 11 ;
	mdimslen = 16 ;
	num_mdims = 4 ;
variables:
	double lat(lat) ;
		lat:_FillValue = -900. ;
		lat:long_name = "latitude" ;
		lat:units = "degrees_north" ;
	double zlon(zlon) ;
		zlon:_FillValue = -900. ;
		zlon:long_name = "longitude" ;
		zlon:units = "degrees_east" ;
		zlon:bounds = "zlon_bnds" ;
	double zlon_bnds(zlon, nbnd) ;
		zlon_bnds:long_name = "zlon bounds" ;
		zlon_bnds:units = "degrees_east" ;
	double gw(lat) ;
		gw:_FillValue = -900. ;
		gw:long_name = "latitude weights" ;
	double lon(lon) ;
		lon:_FillValue = -900. ;
		lon:long_name = "longitude" ;
		lon:units = "degrees_east" ;
	char mdimnames(num_mdims, mdimslen) ;
		mdimnames:long_name = "mdim dimension names" ;
	double time(time) ;
		time:long_name = "time" ;
		time:units = "days since 0001-01-01 00:00:00" ;
		time:calendar = "noleap" ;
		time:bounds = "time_bnds" ;
	int date(time) ;
		date:long_name = "current date (YYYYMMDD)" ;
	int datesec(time) ;
		datesec:long_name = "current seconds of current date" ;
	double time_bnds(time, nbnd) ;
		time_bnds:long_name = "time interval endpoints" ;
	char date_written(time, chars) ;
	char time_written(time, chars) ;
	int ndbase ;
		ndbase:long_name = "base day" ;
	int nsbase ;
		nsbase:long_name = "seconds of base day" ;
	int nbdate ;
		nbdate:long_name = "base date (YYYYMMDD)" ;
	int nbsec ;
		nbsec:long_name = "seconds of base date" ;
	int mdt ;
		mdt:long_name = "timestep" ;
		mdt:units = "s" ;
	int ndcur(time) ;
		ndcur:long_name = "current day (from base day)" ;
	int nscur(time) ;
		nscur:long_name = "current seconds of current day" ;
	double co2vmr(time) ;
		co2vmr:long_name = "co2 volume mixing ratio" ;
	double ch4vmr(time) ;
		ch4vmr:long_name = "ch4 volume mixing ratio" ;
	double n2ovmr(time) ;
		n2ovmr:long_name = "n2o volume mixing ratio" ;
	double f11vmr(time) ;
		f11vmr:long_name = "f11 volume mixing ratio" ;
	double f12vmr(time) ;
		f12vmr:long_name = "f12 volume mixing ratio" ;
	double sol_tsi(time) ;
		sol_tsi:long_name = "total solar irradiance" ;
		sol_tsi:units = "W/m2" ;
	int nsteph(time) ;
		nsteph:long_name = "current timestep" ;
	double ABSVIS(lat, lon) ;
		ABSVIS:units = "unitless" ;
		ABSVIS:long_name = "Aerosol absorptive optical depth at 0.442-0.625um" ;
		ABSVIS:cell_methods = "time: mean" ;
	int ABSVIS_nacs ;
	double ABSVVOLC(lat, lon) ;
		ABSVVOLC:units = "unitless" ;
		ABSVVOLC:long_name = "CMIP6 volcanic aerosol absorptive optical depth at 0.442-0.625um" ;
		ABSVVOLC:cell_methods = "time: mean" ;
	int ABSVVOLC_nacs ;
	double ACTNI(lat, lon) ;
		ACTNI:units = "m-3" ;
		ACTNI:long_name = "Average Cloud Top ice number" ;
		ACTNI:cell_methods = "time: mean" ;
	int ACTNI_nacs ;
	double ACTNL(lat, lon) ;
		ACTNL:units = "m-3" ;
		ACTNL:long_name = "Average Cloud Top droplet number" ;
		ACTNL:cell_methods = "time: mean" ;
	int ACTNL_nacs ;
	double ACTNL_B(lat, lon) ;
		ACTNL_B:units = "m-3" ;
		ACTNL_B:long_name = "Average Cloud Top   droplet number (Bennartz)" ;
		ACTNL_B:cell_methods = "time: mean" ;
	int ACTNL_B_nacs ;
	double ACTREI(lat, lon) ;
		ACTREI:units = "Micron" ;
		ACTREI:long_name = "Average Cloud Top ice effective radius" ;
		ACTREI:cell_methods = "time: mean" ;
	int ACTREI_nacs ;
	double ACTREL(lat, lon) ;
		ACTREL:units = "Micron" ;
		ACTREL:long_name = "Average Cloud Top droplet effective radius" ;
		ACTREL:cell_methods = "time: mean" ;
	int ACTREL_nacs ;
	double ADRAIN(lev, lat, lon) ;
		ADRAIN:mdims = 1 ;
		ADRAIN:units = "Micron" ;
		ADRAIN:long_name = "Average rain effective Diameter" ;
		ADRAIN:cell_methods = "time: mean" ;
	int ADRAIN_nacs ;
	double ADSNOW(lev, lat, lon) ;
		ADSNOW:mdims = 1 ;
		ADSNOW:units = "Micron" ;
		ADSNOW:long_name = "Average snow effective Diameter" ;
		ADSNOW:cell_methods = "time: mean" ;
	int ADSNOW_nacs ;
	double AEROD_v(lat, lon) ;
		AEROD_v:_FillValue = 1.e+36 ;
		AEROD_v:missing_value = 1.e+36 ;
		AEROD_v:units = "1" ;
		AEROD_v:long_name = "Total Aerosol Optical Depth in visible band" ;
		AEROD_v:cell_methods = "time: mean" ;
	int AEROD_v_nacs(lat, lon) ;
	double ANRAIN(lev, lat, lon) ;
		ANRAIN:mdims = 1 ;
		ANRAIN:units = "m-3" ;
		ANRAIN:long_name = "Average rain number conc" ;
		ANRAIN:cell_methods = "time: mean" ;
	int ANRAIN_nacs ;
	double ANSNOW(lev, lat, lon) ;
		ANSNOW:mdims = 1 ;
		ANSNOW:units = "m-3" ;
		ANSNOW:long_name = "Average snow number conc" ;
		ANSNOW:cell_methods = "time: mean" ;
	int ANSNOW_nacs ;
	double AODVVOLC(lat, lon) ;
		AODVVOLC:units = "unitless" ;
		AODVVOLC:long_name = "CMIP6 volcanic aerosol optical depth at 0.442-0.625um" ;
		AODVVOLC:cell_methods = "time: mean" ;
	int AODVVOLC_nacs ;
	double AOD_VIS(lat, lon) ;
		AOD_VIS:units = "unitless" ;
		AOD_VIS:long_name = "Aerosol optical depth at 0.442-0.625um" ;
		AOD_VIS:cell_methods = "time: mean" ;
	int AOD_VIS_nacs ;
	double AQRAIN(lev, lat, lon) ;
		AQRAIN:mdims = 1 ;
		AQRAIN:units = "kg/kg" ;
		AQRAIN:long_name = "Average rain mixing ratio" ;
		AQRAIN:cell_methods = "time: mean" ;
	int AQRAIN_nacs ;
	double AQSNOW(lev, lat, lon) ;
		AQSNOW:mdims = 1 ;
		AQSNOW:units = "kg/kg" ;
		AQSNOW:long_name = "Average snow mixing ratio" ;
		AQSNOW:cell_methods = "time: mean" ;
	int AQSNOW_nacs ;
	double AREI(lev, lat, lon) ;
		AREI:mdims = 1 ;
		AREI:units = "Micron" ;
		AREI:long_name = "Average ice effective radius" ;
		AREI:cell_methods = "time: mean" ;
	int AREI_nacs ;
	double AREL(lev, lat, lon) ;
		AREL:mdims = 1 ;
		AREL:units = "Micron" ;
		AREL:long_name = "Average droplet effective radius" ;
		AREL:cell_methods = "time: mean" ;
	int AREL_nacs ;
	double ASYMMVIS(lev, lat, lon) ;
		ASYMMVIS:mdims = 1 ;
		ASYMMVIS:units = "unitless" ;
		ASYMMVIS:long_name = "Aerosol assymetry factor in visible wavelength band" ;
		ASYMMVIS:cell_methods = "time: mean" ;
	int ASYMMVIS_nacs ;
	double AWNC(lev, lat, lon) ;
		AWNC:mdims = 1 ;
		AWNC:units = "m-3" ;
		AWNC:long_name = "Average cloud water number conc" ;
		AWNC:cell_methods = "time: mean" ;
	int AWNC_nacs ;
	double AWNI(lev, lat, lon) ;
		AWNI:mdims = 1 ;
		AWNI:units = "m-3" ;
		AWNI:long_name = "Average cloud ice number conc" ;
		AWNI:cell_methods = "time: mean" ;
	int AWNI_nacs ;
	double BC_A(lev, lat, lon) ;
		BC_A:mdims = 1 ;
		BC_A:units = "kg/kg" ;
		BC_A:long_name = "BC_A concentration" ;
		BC_A:cell_methods = "time: mean" ;
	int BC_A_nacs ;
	double BC_AC(lev, lat, lon) ;
		BC_AC:mdims = 1 ;
		BC_AC:units = "kg/kg" ;
		BC_AC:long_name = "BC_AC concentration" ;
		BC_AC:cell_methods = "time: mean" ;
	int BC_AC_nacs ;
	double BC_AC_OCW(lev, lat, lon) ;
		BC_AC_OCW:mdims = 1 ;
		BC_AC_OCW:units = "kg/kg" ;
		BC_AC_OCW:long_name = "BC_AC_OCW in cloud water" ;
		BC_AC_OCW:cell_methods = "time: mean" ;
	int BC_AC_OCW_nacs ;
	double BC_AC_SRF(lat, lon) ;
		BC_AC_SRF:units = "kg/kg" ;
		BC_AC_SRF:long_name = "BC_AC in bottom layer" ;
		BC_AC_SRF:cell_methods = "time: mean" ;
	int BC_AC_SRF_nacs ;
	double BC_AI(lev, lat, lon) ;
		BC_AI:mdims = 1 ;
		BC_AI:units = "kg/kg" ;
		BC_AI:long_name = "BC_AI concentration" ;
		BC_AI:cell_methods = "time: mean" ;
	int BC_AI_nacs ;
	double BC_AI_OCW(lev, lat, lon) ;
		BC_AI_OCW:mdims = 1 ;
		BC_AI_OCW:units = "kg/kg" ;
		BC_AI_OCW:long_name = "BC_AI_OCW in cloud water" ;
		BC_AI_OCW:cell_methods = "time: mean" ;
	int BC_AI_OCW_nacs ;
	double BC_AI_SRF(lat, lon) ;
		BC_AI_SRF:units = "kg/kg" ;
		BC_AI_SRF:long_name = "BC_AI in bottom layer" ;
		BC_AI_SRF:cell_methods = "time: mean" ;
	int BC_AI_SRF_nacs ;
	double BC_AX(lev, lat, lon) ;
		BC_AX:mdims = 1 ;
		BC_AX:units = "kg/kg" ;
		BC_AX:long_name = "BC_AX concentration" ;
		BC_AX:cell_methods = "time: mean" ;
	int BC_AX_nacs ;
	double BC_AX_CLXF(lat, lon) ;
		BC_AX_CLXF:units = "molec/cm2/s" ;
		BC_AX_CLXF:long_name = "vertically integrated external forcing for BC_AX" ;
		BC_AX_CLXF:cell_methods = "time: mean" ;
	int BC_AX_CLXF_nacs ;
	double BC_AX_CMXF(lat, lon) ;
		BC_AX_CMXF:units = "kg/m2/s" ;
		BC_AX_CMXF:long_name = "vertically integrated external forcing for BC_AX" ;
		BC_AX_CMXF:cell_methods = "time: mean" ;
	int BC_AX_CMXF_nacs ;
	double BC_AX_SRF(lat, lon) ;
		BC_AX_SRF:units = "kg/kg" ;
		BC_AX_SRF:long_name = "BC_AX in bottom layer" ;
		BC_AX_SRF:cell_methods = "time: mean" ;
	int BC_AX_SRF_nacs ;
	double BC_A_OCW(lev, lat, lon) ;
		BC_A_OCW:mdims = 1 ;
		BC_A_OCW:units = "kg/kg" ;
		BC_A_OCW:long_name = "BC_A_OCW in cloud water" ;
		BC_A_OCW:cell_methods = "time: mean" ;
	int BC_A_OCW_nacs ;
	double BC_A_SRF(lat, lon) ;
		BC_A_SRF:units = "kg/kg" ;
		BC_A_SRF:long_name = "BC_A in bottom layer" ;
		BC_A_SRF:cell_methods = "time: mean" ;
	int BC_A_SRF_nacs ;
	double BC_N(lev, lat, lon) ;
		BC_N:mdims = 1 ;
		BC_N:units = "kg/kg" ;
		BC_N:long_name = "BC_N concentration" ;
		BC_N:cell_methods = "time: mean" ;
	int BC_N_nacs ;
	double BC_NI(lev, lat, lon) ;
		BC_NI:mdims = 1 ;
		BC_NI:units = "kg/kg" ;
		BC_NI:long_name = "BC_NI concentration" ;
		BC_NI:cell_methods = "time: mean" ;
	int BC_NI_nacs ;
	double BC_NI_CLXF(lat, lon) ;
		BC_NI_CLXF:units = "molec/cm2/s" ;
		BC_NI_CLXF:long_name = "vertically integrated external forcing for BC_NI" ;
		BC_NI_CLXF:cell_methods = "time: mean" ;
	int BC_NI_CLXF_nacs ;
	double BC_NI_CMXF(lat, lon) ;
		BC_NI_CMXF:units = "kg/m2/s" ;
		BC_NI_CMXF:long_name = "vertically integrated external forcing for BC_NI" ;
		BC_NI_CMXF:cell_methods = "time: mean" ;
	int BC_NI_CMXF_nacs ;
	double BC_NI_OCW(lev, lat, lon) ;
		BC_NI_OCW:mdims = 1 ;
		BC_NI_OCW:units = "kg/kg" ;
		BC_NI_OCW:long_name = "BC_NI_OCW in cloud water" ;
		BC_NI_OCW:cell_methods = "time: mean" ;
	int BC_NI_OCW_nacs ;
	double BC_NI_SRF(lat, lon) ;
		BC_NI_SRF:units = "kg/kg" ;
		BC_NI_SRF:long_name = "BC_NI in bottom layer" ;
		BC_NI_SRF:cell_methods = "time: mean" ;
	int BC_NI_SRF_nacs ;
	double BC_N_CLXF(lat, lon) ;
		BC_N_CLXF:units = "molec/cm2/s" ;
		BC_N_CLXF:long_name = "vertically integrated external forcing for BC_N" ;
		BC_N_CLXF:cell_methods = "time: mean" ;
	int BC_N_CLXF_nacs ;
	double BC_N_CMXF(lat, lon) ;
		BC_N_CMXF:units = "kg/m2/s" ;
		BC_N_CMXF:long_name = "vertically integrated external forcing for BC_N" ;
		BC_N_CMXF:cell_methods = "time: mean" ;
	int BC_N_CMXF_nacs ;
	double BC_N_OCW(lev, lat, lon) ;
		BC_N_OCW:mdims = 1 ;
		BC_N_OCW:units = "kg/kg" ;
		BC_N_OCW:long_name = "BC_N_OCW in cloud water" ;
		BC_N_OCW:cell_methods = "time: mean" ;
	int BC_N_OCW_nacs ;
	double BC_N_SRF(lat, lon) ;
		BC_N_SRF:units = "kg/kg" ;
		BC_N_SRF:long_name = "BC_N in bottom layer" ;
		BC_N_SRF:cell_methods = "time: mean" ;
	int BC_N_SRF_nacs ;
	double BERGOXCLD_ISOTM(isotherms_mpc, lat, lon) ;
		BERGOXCLD_ISOTM:mdims = 3 ;
		BERGOXCLD_ISOTM:long_name = "Mean BERGO near isotherm * CLD_ISOTM (discard below thick cloud)" ;
		BERGOXCLD_ISOTM:cell_methods = "time: mean" ;
	int BERGOXCLD_ISOTM_nacs ;
	double BERGOXCLD_ISOTM_NONSIM(isotherms_mpc, lat, lon) ;
		BERGOXCLD_ISOTM_NONSIM:mdims = 3 ;
		BERGOXCLD_ISOTM_NONSIM:long_name = "Mean BERGO near isotherm * CLD_ISOTM_NONSIM" ;
		BERGOXCLD_ISOTM_NONSIM:cell_methods = "time: mean" ;
	int BERGOXCLD_ISOTM_NONSIM_nacs ;
	double BERGSOXCLD_ISOTM(isotherms_mpc, lat, lon) ;
		BERGSOXCLD_ISOTM:mdims = 3 ;
		BERGSOXCLD_ISOTM:long_name = "Mean BERGSO near isotherm * CLD_ISOTM (discard below thick cloud)" ;
		BERGSOXCLD_ISOTM:cell_methods = "time: mean" ;
	int BERGSOXCLD_ISOTM_nacs ;
	double BERGSOXCLD_ISOTM_NONSIM(isotherms_mpc, lat, lon) ;
		BERGSOXCLD_ISOTM_NONSIM:mdims = 3 ;
		BERGSOXCLD_ISOTM_NONSIM:long_name = "Mean BERGSO near isotherm * CLD_ISOTM_NONSIM" ;
		BERGSOXCLD_ISOTM_NONSIM:cell_methods = "time: mean" ;
	int BERGSOXCLD_ISOTM_NONSIM_nacs ;
	double BVISVOLC(lev, lat, lon) ;
		BVISVOLC:mdims = 1 ;
		BVISVOLC:units = "1/km" ;
		BVISVOLC:long_name = "CMIP6 volcanic aerosol extinction at 0.442-0.625um" ;
		BVISVOLC:cell_methods = "time: mean" ;
	int BVISVOLC_nacs ;
	double CABSVIS(lat, lon) ;
		CABSVIS:units = "unitless" ;
		CABSVIS:long_name = "Clear air aerosol absorptive optical depth" ;
		CABSVIS:cell_methods = "time: mean" ;
	int CABSVIS_nacs ;
	double CAODVIS(lat, lon) ;
		CAODVIS:units = "unitless" ;
		CAODVIS:long_name = "Clear air aerosol optical depth" ;
		CAODVIS:cell_methods = "time: mean" ;
	int CAODVIS_nacs ;
	double CCN_B(lat, lon) ;
		CCN_B:units = "m-3" ;
		CCN_B:long_name = "Average Cloud Top liquid CCN (Bennartz)" ;
		CCN_B:cell_methods = "time: mean" ;
	int CCN_B_nacs ;
	double CDNUMC(lat, lon) ;
		CDNUMC:units = "1/m2" ;
		CDNUMC:long_name = "Vertically-integrated droplet concentration" ;
		CDNUMC:cell_methods = "time: mean" ;
	int CDNUMC_nacs ;
	double CLDFREE(lat, lon) ;
		CLDFREE:units = "unitless" ;
		CLDFREE:long_name = "Cloud free fraction wrt CAODVIS and CABSVIS" ;
		CLDFREE:cell_methods = "time: mean" ;
	int CLDFREE_nacs ;
	double CLDHGH(lat, lon) ;
		CLDHGH:units = "fraction" ;
		CLDHGH:long_name = "Vertically-integrated high cloud" ;
		CLDHGH:cell_methods = "time: mean" ;
	int CLDHGH_nacs ;
	double CLDICE(lev, lat, lon) ;
		CLDICE:mdims = 1 ;
		CLDICE:units = "kg/kg" ;
		CLDICE:long_name = "Grid box averaged cloud ice amount" ;
		CLDICE:cell_methods = "time: mean" ;
	int CLDICE_nacs ;
	double CLDLIQ(lev, lat, lon) ;
		CLDLIQ:mdims = 1 ;
		CLDLIQ:units = "kg/kg" ;
		CLDLIQ:long_name = "Grid box averaged cloud liquid amount" ;
		CLDLIQ:cell_methods = "time: mean" ;
	int CLDLIQ_nacs ;
	double CLDLOW(lat, lon) ;
		CLDLOW:units = "fraction" ;
		CLDLOW:long_name = "Vertically-integrated low cloud" ;
		CLDLOW:cell_methods = "time: mean" ;
	int CLDLOW_nacs ;
	double CLDMED(lat, lon) ;
		CLDMED:units = "fraction" ;
		CLDMED:long_name = "Vertically-integrated mid-level cloud" ;
		CLDMED:cell_methods = "time: mean" ;
	int CLDMED_nacs ;
	double CLDTAU(lev, lat, lon) ;
		CLDTAU:mdims = 1 ;
		CLDTAU:long_name = "Cloud optical thickness" ;
		CLDTAU:cell_methods = "time: mean" ;
	int CLDTAU_nacs ;
	double CLDTOT(lat, lon) ;
		CLDTOT:units = "fraction" ;
		CLDTOT:long_name = "Vertically-integrated total cloud" ;
		CLDTOT:cell_methods = "time: mean" ;
	int CLDTOT_nacs ;
	double CLD_ISOTM(isotherms_mpc, lat, lon) ;
		CLD_ISOTM:mdims = 3 ;
		CLD_ISOTM:long_name = "Total cloud fraction near isotherm (discard below thick cloud)" ;
		CLD_ISOTM:cell_methods = "time: mean" ;
	int CLD_ISOTM_nacs ;
	double CLD_ISOTM_NONSIM(isotherms_mpc, lat, lon) ;
		CLD_ISOTM_NONSIM:mdims = 3 ;
		CLD_ISOTM_NONSIM:long_name = "Total cloud fraction near isotherm" ;
		CLD_ISOTM_NONSIM:cell_methods = "time: mean" ;
	int CLD_ISOTM_NONSIM_nacs ;
	double CLD_ISOTM_SLF(slfbins, isotherms_mpc, lat, lon) ;
		CLD_ISOTM_SLF:mdims = 3, 4 ;
		CLD_ISOTM_SLF:long_name = "Total cloud fraction in SLF bin near isotherm (discard below thick cloud)" ;
		CLD_ISOTM_SLF:cell_methods = "time: mean" ;
	int CLD_ISOTM_SLF_nacs ;
	double CLD_ISOTM_SLF_NONSIM(slfbins, isotherms_mpc, lat, lon) ;
		CLD_ISOTM_SLF_NONSIM:mdims = 3, 4 ;
		CLD_ISOTM_SLF_NONSIM:long_name = "Total cloud fraction in SLF bin near isotherm" ;
		CLD_ISOTM_SLF_NONSIM:cell_methods = "time: mean" ;
	int CLD_ISOTM_SLF_NONSIM_nacs ;
	double CLD_SLF(slfbins, lat, lon) ;
		CLD_SLF:mdims = 4 ;
		CLD_SLF:long_name = "Total cloud fraction in SLF bin (discard below thick cloud)" ;
		CLD_SLF:cell_methods = "time: mean" ;
	int CLD_SLF_nacs ;
	double CLD_SLF_NONSIM(slfbins, lat, lon) ;
		CLD_SLF_NONSIM:mdims = 4 ;
		CLD_SLF_NONSIM:long_name = "Total cloud fraction in SLF bin" ;
		CLD_SLF_NONSIM:cell_methods = "time: mean" ;
	int CLD_SLF_NONSIM_nacs ;
	double CLOUD(lev, lat, lon) ;
		CLOUD:mdims = 1 ;
		CLOUD:units = "fraction" ;
		CLOUD:long_name = "Cloud fraction" ;
		CLOUD:cell_methods = "time: mean" ;
	int CLOUD_nacs ;
	double CLOUDCOVER_CLUBB(ilev, lat, lon) ;
		CLOUDCOVER_CLUBB:mdims = 2 ;
		CLOUDCOVER_CLUBB:units = "fraction" ;
		CLOUDCOVER_CLUBB:long_name = "Cloud Cover" ;
		CLOUDCOVER_CLUBB:cell_methods = "time: mean" ;
	int CLOUDCOVER_CLUBB_nacs ;
	double CLOUDFRAC_CLUBB(lev, lat, lon) ;
		CLOUDFRAC_CLUBB:mdims = 1 ;
		CLOUDFRAC_CLUBB:units = "fraction" ;
		CLOUDFRAC_CLUBB:long_name = "Cloud Fraction" ;
		CLOUDFRAC_CLUBB:cell_methods = "time: mean" ;
	int CLOUDFRAC_CLUBB_nacs ;
	double CONCLD(lev, lat, lon) ;
		CONCLD:mdims = 1 ;
		CONCLD:units = "fraction" ;
		CONCLD:long_name = "Convective cloud cover" ;
		CONCLD:cell_methods = "time: mean" ;
	int CONCLD_nacs ;
	double CT_CLD_ISOTM(isotherms_mpc, lat, lon) ;
		CT_CLD_ISOTM:mdims = 3 ;
		CT_CLD_ISOTM:long_name = "Total cloudtop cloud fraction near isotherm (discard below thick cloud)" ;
		CT_CLD_ISOTM:cell_methods = "time: mean" ;
	int CT_CLD_ISOTM_nacs ;
	double CT_SLFXCLD_ISOTM(isotherms_mpc, lat, lon) ;
		CT_SLFXCLD_ISOTM:mdims = 3 ;
		CT_SLFXCLD_ISOTM:long_name = "Mean cloudtop supercooled liquid fraction near isotherm * CLD_ISOTM (discard below thick cloud)" ;
		CT_SLFXCLD_ISOTM:cell_methods = "time: mean" ;
	int CT_SLFXCLD_ISOTM_nacs ;
	double DAYFOC(lat, lon) ;
		DAYFOC:units = "unitless" ;
		DAYFOC:long_name = "Daylight fraction" ;
		DAYFOC:cell_methods = "time: mean" ;
	int DAYFOC_nacs ;
	double DCQ(lev, lat, lon) ;
		DCQ:mdims = 1 ;
		DCQ:units = "kg/kg/s" ;
		DCQ:long_name = "Q tendency due to moist processes" ;
		DCQ:cell_methods = "time: mean" ;
	int DCQ_nacs ;
	double DF_H2O2(lat, lon) ;
		DF_H2O2:units = "kg/m2/s" ;
		DF_H2O2:long_name = "dry deposition flux" ;
		DF_H2O2:cell_methods = "time: mean" ;
	int DF_H2O2_nacs ;
	double DF_H2SO4(lat, lon) ;
		DF_H2SO4:units = "kg/m2/s" ;
		DF_H2SO4:long_name = "dry deposition flux" ;
		DF_H2SO4:cell_methods = "time: mean" ;
	int DF_H2SO4_nacs ;
	double DF_SO2(lat, lon) ;
		DF_SO2:units = "kg/m2/s" ;
		DF_SO2:long_name = "dry deposition flux" ;
		DF_SO2:cell_methods = "time: mean" ;
	int DF_SO2_nacs ;
	double DMS(lev, lat, lon) ;
		DMS:mdims = 1 ;
		DMS:units = "mol/mol" ;
		DMS:long_name = "DMS concentration" ;
		DMS:cell_methods = "time: mean" ;
	int DMS_nacs ;
	double DMS_SRF(lat, lon) ;
		DMS_SRF:units = "mol/mol" ;
		DMS_SRF:long_name = "DMS in bottom layer" ;
		DMS_SRF:cell_methods = "time: mean" ;
	int DMS_SRF_nacs ;
	double DST_A2(lev, lat, lon) ;
		DST_A2:mdims = 1 ;
		DST_A2:units = "kg/kg" ;
		DST_A2:long_name = "DST_A2 concentration" ;
		DST_A2:cell_methods = "time: mean" ;
	int DST_A2_nacs ;
	double DST_A2_OCW(lev, lat, lon) ;
		DST_A2_OCW:mdims = 1 ;
		DST_A2_OCW:units = "kg/kg" ;
		DST_A2_OCW:long_name = "DST_A2_OCW in cloud water" ;
		DST_A2_OCW:cell_methods = "time: mean" ;
	int DST_A2_OCW_nacs ;
	double DST_A2_SRF(lat, lon) ;
		DST_A2_SRF:units = "kg/kg" ;
		DST_A2_SRF:long_name = "DST_A2 in bottom layer" ;
		DST_A2_SRF:cell_methods = "time: mean" ;
	int DST_A2_SRF_nacs ;
	double DST_A3(lev, lat, lon) ;
		DST_A3:mdims = 1 ;
		DST_A3:units = "kg/kg" ;
		DST_A3:long_name = "DST_A3 concentration" ;
		DST_A3:cell_methods = "time: mean" ;
	int DST_A3_nacs ;
	double DST_A3_OCW(lev, lat, lon) ;
		DST_A3_OCW:mdims = 1 ;
		DST_A3_OCW:units = "kg/kg" ;
		DST_A3_OCW:long_name = "DST_A3_OCW in cloud water" ;
		DST_A3_OCW:cell_methods = "time: mean" ;
	int DST_A3_OCW_nacs ;
	double DST_A3_SRF(lat, lon) ;
		DST_A3_SRF:units = "kg/kg" ;
		DST_A3_SRF:long_name = "DST_A3 in bottom layer" ;
		DST_A3_SRF:cell_methods = "time: mean" ;
	int DST_A3_SRF_nacs ;
	double DTCOND(lev, lat, lon) ;
		DTCOND:mdims = 1 ;
		DTCOND:units = "K/s" ;
		DTCOND:long_name = "T tendency - moist processes" ;
		DTCOND:cell_methods = "time: mean" ;
	int DTCOND_nacs ;
	double DTV(lev, lat, lon) ;
		DTV:mdims = 1 ;
		DTV:units = "K/s" ;
		DTV:long_name = "T vertical diffusion" ;
		DTV:cell_methods = "time: mean" ;
	int DTV_nacs ;
	double DTWR_H2O2(lev, lat, lon) ;
		DTWR_H2O2:mdims = 1 ;
		DTWR_H2O2:units = "kg/kg/s" ;
		DTWR_H2O2:long_name = "wet removal Neu scheme tendency" ;
		DTWR_H2O2:cell_methods = "time: mean" ;
	int DTWR_H2O2_nacs ;
	double DTWR_H2SO4(lev, lat, lon) ;
		DTWR_H2SO4:mdims = 1 ;
		DTWR_H2SO4:units = "kg/kg/s" ;
		DTWR_H2SO4:long_name = "wet removal Neu scheme tendency" ;
		DTWR_H2SO4:cell_methods = "time: mean" ;
	int DTWR_H2SO4_nacs ;
	double DTWR_SO2(lev, lat, lon) ;
		DTWR_SO2:mdims = 1 ;
		DTWR_SO2:units = "kg/kg/s" ;
		DTWR_SO2:long_name = "wet removal Neu scheme tendency" ;
		DTWR_SO2:cell_methods = "time: mean" ;
	int DTWR_SO2_nacs ;
	double EXTVIS(lev, lat, lon) ;
		EXTVIS:mdims = 1 ;
		EXTVIS:units = "1/km" ;
		EXTVIS:long_name = "Aerosol extinction" ;
		EXTVIS:cell_methods = "time: mean" ;
	int EXTVIS_nacs ;
	double FCTI(lat, lon) ;
		FCTI:units = "fraction" ;
		FCTI:long_name = "Fractional occurrence of cloud top ice" ;
		FCTI:cell_methods = "time: mean" ;
	int FCTI_nacs ;
	double FCTL(lat, lon) ;
		FCTL:units = "fraction" ;
		FCTL:long_name = "Fractional occurrence of cloud top liquid" ;
		FCTL:cell_methods = "time: mean" ;
	int FCTL_nacs ;
	double FCTL_B(lat, lon) ;
		FCTL_B:units = "fraction" ;
		FCTL_B:long_name = "Fractional occurrence of cloud top liquid (Bennartz)" ;
		FCTL_B:cell_methods = "time: mean" ;
	int FCTL_B_nacs ;
	double FICE(lev, lat, lon) ;
		FICE:mdims = 1 ;
		FICE:units = "fraction" ;
		FICE:long_name = "Fractional ice content within cloud" ;
		FICE:cell_methods = "time: mean" ;
	int FICE_nacs ;
	double FLDS(lat, lon) ;
		FLDS:Sampling_Sequence = "rad_lwsw" ;
		FLDS:units = "W/m2" ;
		FLDS:long_name = "Downwelling longwave flux at surface" ;
		FLDS:cell_methods = "time: mean" ;
	int FLDS_nacs ;
	double FLNS(lat, lon) ;
		FLNS:Sampling_Sequence = "rad_lwsw" ;
		FLNS:units = "W/m2" ;
		FLNS:long_name = "Net longwave flux at surface" ;
		FLNS:cell_methods = "time: mean" ;
	int FLNS_nacs ;
	double FLNSC(lat, lon) ;
		FLNSC:Sampling_Sequence = "rad_lwsw" ;
		FLNSC:units = "W/m2" ;
		FLNSC:long_name = "Clearsky net longwave flux at surface" ;
		FLNSC:cell_methods = "time: mean" ;
	int FLNSC_nacs ;
	double FLNT(lat, lon) ;
		FLNT:Sampling_Sequence = "rad_lwsw" ;
		FLNT:units = "W/m2" ;
		FLNT:long_name = "Net longwave flux at top of model" ;
		FLNT:cell_methods = "time: mean" ;
	int FLNT_nacs ;
	double FLNTC(lat, lon) ;
		FLNTC:Sampling_Sequence = "rad_lwsw" ;
		FLNTC:units = "W/m2" ;
		FLNTC:long_name = "Clearsky net longwave flux at top of model" ;
		FLNTC:cell_methods = "time: mean" ;
	int FLNTC_nacs ;
	double FLNTCLR(lat, lon) ;
		FLNTCLR:Sampling_Sequence = "rad_lwsw" ;
		FLNTCLR:units = "W/m2" ;
		FLNTCLR:long_name = "Clearsky ONLY points net longwave flux at top of model" ;
		FLNTCLR:cell_methods = "time: mean" ;
	int FLNTCLR_nacs ;
	double FLUT(lat, lon) ;
		FLUT:Sampling_Sequence = "rad_lwsw" ;
		FLUT:units = "W/m2" ;
		FLUT:long_name = "Upwelling longwave flux at top of model" ;
		FLUT:cell_methods = "time: mean" ;
	int FLUT_nacs ;
	double FLUTC(lat, lon) ;
		FLUTC:Sampling_Sequence = "rad_lwsw" ;
		FLUTC:units = "W/m2" ;
		FLUTC:long_name = "Clearsky upwelling longwave flux at top of model" ;
		FLUTC:cell_methods = "time: mean" ;
	int FLUTC_nacs ;
	double FREQCLR(lat, lon) ;
		FREQCLR:Sampling_Sequence = "rad_lwsw" ;
		FREQCLR:units = "Frac" ;
		FREQCLR:long_name = "Frequency of Occurrence of Clearsky" ;
		FREQCLR:cell_methods = "time: mean" ;
	int FREQCLR_nacs ;
	double FREQI(lev, lat, lon) ;
		FREQI:mdims = 1 ;
		FREQI:units = "fraction" ;
		FREQI:long_name = "Fractional occurrence of ice" ;
		FREQI:cell_methods = "time: mean" ;
	int FREQI_nacs ;
	double FREQL(lev, lat, lon) ;
		FREQL:mdims = 1 ;
		FREQL:units = "fraction" ;
		FREQL:long_name = "Fractional occurrence of liquid" ;
		FREQL:cell_methods = "time: mean" ;
	int FREQL_nacs ;
	double FREQR(lev, lat, lon) ;
		FREQR:mdims = 1 ;
		FREQR:units = "fraction" ;
		FREQR:long_name = "Fractional occurrence of rain" ;
		FREQR:cell_methods = "time: mean" ;
	int FREQR_nacs ;
	double FREQS(lev, lat, lon) ;
		FREQS:mdims = 1 ;
		FREQS:units = "fraction" ;
		FREQS:long_name = "Fractional occurrence of snow" ;
		FREQS:cell_methods = "time: mean" ;
	int FREQS_nacs ;
	double FSDS(lat, lon) ;
		FSDS:Sampling_Sequence = "rad_lwsw" ;
		FSDS:units = "W/m2" ;
		FSDS:long_name = "Downwelling solar flux at surface" ;
		FSDS:cell_methods = "time: mean" ;
	int FSDS_nacs ;
	double FSDSC(lat, lon) ;
		FSDSC:Sampling_Sequence = "rad_lwsw" ;
		FSDSC:units = "W/m2" ;
		FSDSC:long_name = "Clearsky downwelling solar flux at surface" ;
		FSDSC:cell_methods = "time: mean" ;
	int FSDSC_nacs ;
	double FSNS(lat, lon) ;
		FSNS:Sampling_Sequence = "rad_lwsw" ;
		FSNS:units = "W/m2" ;
		FSNS:long_name = "Net solar flux at surface" ;
		FSNS:cell_methods = "time: mean" ;
	int FSNS_nacs ;
	double FSNSC(lat, lon) ;
		FSNSC:Sampling_Sequence = "rad_lwsw" ;
		FSNSC:units = "W/m2" ;
		FSNSC:long_name = "Clearsky net solar flux at surface" ;
		FSNSC:cell_methods = "time: mean" ;
	int FSNSC_nacs ;
	double FSNT(lat, lon) ;
		FSNT:Sampling_Sequence = "rad_lwsw" ;
		FSNT:units = "W/m2" ;
		FSNT:long_name = "Net solar flux at top of model" ;
		FSNT:cell_methods = "time: mean" ;
	int FSNT_nacs ;
	double FSNTC(lat, lon) ;
		FSNTC:Sampling_Sequence = "rad_lwsw" ;
		FSNTC:units = "W/m2" ;
		FSNTC:long_name = "Clearsky net solar flux at top of model" ;
		FSNTC:cell_methods = "time: mean" ;
	int FSNTC_nacs ;
	double FSNTOA(lat, lon) ;
		FSNTOA:Sampling_Sequence = "rad_lwsw" ;
		FSNTOA:units = "W/m2" ;
		FSNTOA:long_name = "Net solar flux at top of atmosphere" ;
		FSNTOA:cell_methods = "time: mean" ;
	int FSNTOA_nacs ;
	double FSNTOAC(lat, lon) ;
		FSNTOAC:Sampling_Sequence = "rad_lwsw" ;
		FSNTOAC:units = "W/m2" ;
		FSNTOAC:long_name = "Clearsky net solar flux at top of atmosphere" ;
		FSNTOAC:cell_methods = "time: mean" ;
	int FSNTOAC_nacs ;
	double FSUTOA(lat, lon) ;
		FSUTOA:Sampling_Sequence = "rad_lwsw" ;
		FSUTOA:units = "W/m2" ;
		FSUTOA:long_name = "Upwelling solar flux at top of atmosphere" ;
		FSUTOA:cell_methods = "time: mean" ;
	int FSUTOA_nacs ;
	double H2O(lev, lat, lon) ;
		H2O:mdims = 1 ;
		H2O:units = "mol/mol" ;
		H2O:long_name = "water vapor concentration" ;
		H2O:cell_methods = "time: mean" ;
	int H2O_nacs ;
	double H2O2(lev, lat, lon) ;
		H2O2:mdims = 1 ;
		H2O2:units = "mol/mol" ;
		H2O2:long_name = "H2O2 concentration" ;
		H2O2:cell_methods = "time: mean" ;
	int H2O2_nacs ;
	double H2O2_SRF(lat, lon) ;
		H2O2_SRF:units = "mol/mol" ;
		H2O2_SRF:long_name = "H2O2 in bottom layer" ;
		H2O2_SRF:cell_methods = "time: mean" ;
	int H2O2_SRF_nacs ;
	double H2O_CLXF(lat, lon) ;
		H2O_CLXF:units = "molec/cm2/s" ;
		H2O_CLXF:long_name = "vertically integrated external forcing for H2O" ;
		H2O_CLXF:cell_methods = "time: mean" ;
	int H2O_CLXF_nacs ;
	double H2O_CMXF(lat, lon) ;
		H2O_CMXF:units = "kg/m2/s" ;
		H2O_CMXF:long_name = "vertically integrated external forcing for H2O" ;
		H2O_CMXF:cell_methods = "time: mean" ;
	int H2O_CMXF_nacs ;
	double H2O_SRF(lat, lon) ;
		H2O_SRF:units = "mol/mol" ;
		H2O_SRF:long_name = "water vapor in bottom layer" ;
		H2O_SRF:cell_methods = "time: mean" ;
	int H2O_SRF_nacs ;
	double H2SO4(lev, lat, lon) ;
		H2SO4:mdims = 1 ;
		H2SO4:units = "mol/mol" ;
		H2SO4:long_name = "H2SO4 concentration" ;
		H2SO4:cell_methods = "time: mean" ;
	int H2SO4_nacs ;
	double H2SO4_SRF(lat, lon) ;
		H2SO4_SRF:units = "mol/mol" ;
		H2SO4_SRF:long_name = "H2SO4 in bottom layer" ;
		H2SO4_SRF:cell_methods = "time: mean" ;
	int H2SO4_SRF_nacs ;
	double HO2_aft(lev, lat, lon) ;
		HO2_aft:mdims = 1 ;
		HO2_aft:units = "unit" ;
		HO2_aft:long_name = "HO2 invariants after adding diurnal variations" ;
		HO2_aft:cell_methods = "time: mean" ;
	int HO2_aft_nacs ;
	double HO2_bef(lev, lat, lon) ;
		HO2_bef:mdims = 1 ;
		HO2_bef:units = "unit" ;
		HO2_bef:long_name = "HO2 invariants before adding diurnal variations" ;
		HO2_bef:cell_methods = "time: mean" ;
	int HO2_bef_nacs ;
	double ICEFRAC(lat, lon) ;
		ICEFRAC:units = "fraction" ;
		ICEFRAC:long_name = "Fraction of sfc area covered by sea-ice" ;
		ICEFRAC:cell_methods = "time: mean" ;
	int ICEFRAC_nacs ;
	double ICIMR(lev, lat, lon) ;
		ICIMR:mdims = 1 ;
		ICIMR:units = "kg/kg" ;
		ICIMR:long_name = "Prognostic in-cloud ice mixing ratio" ;
		ICIMR:cell_methods = "time: mean" ;
	int ICIMR_nacs ;
	double ICWMR(lev, lat, lon) ;
		ICWMR:mdims = 1 ;
		ICWMR:units = "kg/kg" ;
		ICWMR:long_name = "Prognostic in-cloud water mixing ratio" ;
		ICWMR:cell_methods = "time: mean" ;
	int ICWMR_nacs ;
	double IWC(lev, lat, lon) ;
		IWC:mdims = 1 ;
		IWC:units = "kg/m3" ;
		IWC:long_name = "Grid box average ice water content" ;
		IWC:cell_methods = "time: mean" ;
	int IWC_nacs ;
	double LANDFRAC(lat, lon) ;
		LANDFRAC:units = "fraction" ;
		LANDFRAC:long_name = "Fraction of sfc area covered by land" ;
		LANDFRAC:cell_methods = "time: mean" ;
	int LANDFRAC_nacs ;
	double LHFLX(lat, lon) ;
		LHFLX:units = "W/m2" ;
		LHFLX:long_name = "Surface latent heat flux" ;
		LHFLX:cell_methods = "time: mean" ;
	int LHFLX_nacs ;
	double LWCF(lat, lon) ;
		LWCF:Sampling_Sequence = "rad_lwsw" ;
		LWCF:units = "W/m2" ;
		LWCF:long_name = "Longwave cloud forcing" ;
		LWCF:cell_methods = "time: mean" ;
	int LWCF_nacs ;
	double MEG_isoprene(lat, lon) ;
		MEG_isoprene:units = "kg/m2/sec" ;
		MEG_isoprene:long_name = "isoprene MEGAN emissions flux" ;
		MEG_isoprene:cell_methods = "time: mean" ;
	int MEG_isoprene_nacs ;
	double MEG_monoterp(lat, lon) ;
		MEG_monoterp:units = "kg/m2/sec" ;
		MEG_monoterp:long_name = "monoterp MEGAN emissions flux" ;
		MEG_monoterp:cell_methods = "time: mean" ;
	int MEG_monoterp_nacs ;
	double MG_SADICE(lev, lat, lon) ;
		MG_SADICE:mdims = 1 ;
		MG_SADICE:units = "cm2/cm3" ;
		MG_SADICE:long_name = "MG surface area density ice" ;
		MG_SADICE:cell_methods = "time: mean" ;
	int MG_SADICE_nacs ;
	double MG_SADLIQ(lev, lat, lon) ;
		MG_SADLIQ:mdims = 1 ;
		MG_SADLIQ:units = "cm2/cm3" ;
		MG_SADLIQ:long_name = "MG surface area density liq" ;
		MG_SADLIQ:cell_methods = "time: mean" ;
	int MG_SADLIQ_nacs ;
	double MSKtem(lat, lon) ;
		MSKtem:units = "1" ;
		MSKtem:long_name = "TEM mask" ;
		MSKtem:cell_methods = "time: mean" ;
	int MSKtem_nacs ;
	double NO3_aft(lev, lat, lon) ;
		NO3_aft:mdims = 1 ;
		NO3_aft:units = "unit" ;
		NO3_aft:long_name = "NO3 invariants after adding diurnal variations" ;
		NO3_aft:cell_methods = "time: mean" ;
	int NO3_aft_nacs ;
	double NO3_bef(lev, lat, lon) ;
		NO3_bef:mdims = 1 ;
		NO3_bef:units = "unit" ;
		NO3_bef:long_name = "NO3 invariants before adding diurnal variations" ;
		NO3_bef:cell_methods = "time: mean" ;
	int NO3_bef_nacs ;
	double NUMICE(lev, lat, lon) ;
		NUMICE:mdims = 1 ;
		NUMICE:units = "1/kg" ;
		NUMICE:long_name = "Grid box averaged cloud ice number" ;
		NUMICE:cell_methods = "time: mean" ;
	int NUMICE_nacs ;
	double NUMLIQ(lev, lat, lon) ;
		NUMLIQ:mdims = 1 ;
		NUMLIQ:units = "1/kg" ;
		NUMLIQ:long_name = "Grid box averaged cloud liquid number" ;
		NUMLIQ:cell_methods = "time: mean" ;
	int NUMLIQ_nacs ;
	double NUMRAI(lev, lat, lon) ;
		NUMRAI:mdims = 1 ;
		NUMRAI:units = "1/kg" ;
		NUMRAI:long_name = "Grid box averaged rain number" ;
		NUMRAI:cell_methods = "time: mean" ;
	int NUMRAI_nacs ;
	double NUMSNO(lev, lat, lon) ;
		NUMSNO:mdims = 1 ;
		NUMSNO:units = "1/kg" ;
		NUMSNO:long_name = "Grid box averaged snow number" ;
		NUMSNO:cell_methods = "time: mean" ;
	int NUMSNO_nacs ;
	double N_AER(lev, lat, lon) ;
		N_AER:mdims = 1 ;
		N_AER:units = "unitless" ;
		N_AER:long_name = "Aerosol number concentration" ;
		N_AER:cell_methods = "time: mean" ;
	int N_AER_nacs ;
	double OCNFRAC(lat, lon) ;
		OCNFRAC:units = "fraction" ;
		OCNFRAC:long_name = "Fraction of sfc area covered by ocean" ;
		OCNFRAC:cell_methods = "time: mean" ;
	int OCNFRAC_nacs ;
	double OH_aft(lev, lat, lon) ;
		OH_aft:mdims = 1 ;
		OH_aft:units = "unit" ;
		OH_aft:long_name = "OH invariants after adding diurnal variations" ;
		OH_aft:cell_methods = "time: mean" ;
	int OH_aft_nacs ;
	double OH_bef(lev, lat, lon) ;
		OH_bef:mdims = 1 ;
		OH_bef:units = "unit" ;
		OH_bef:long_name = "OH invariants before adding diurnal variations" ;
		OH_bef:cell_methods = "time: mean" ;
	int OH_bef_nacs ;
	double OMEGA(lev, lat, lon) ;
		OMEGA:mdims = 1 ;
		OMEGA:units = "Pa/s" ;
		OMEGA:long_name = "Vertical velocity (pressure)" ;
		OMEGA:cell_methods = "time: mean" ;
	int OMEGA_nacs ;
	double OMEGAT(lev, lat, lon) ;
		OMEGAT:mdims = 1 ;
		OMEGAT:units = "K Pa/s" ;
		OMEGAT:long_name = "Vertical heat flux" ;
		OMEGAT:cell_methods = "time: mean" ;
	int OMEGAT_nacs ;
	double OM_AC(lev, lat, lon) ;
		OM_AC:mdims = 1 ;
		OM_AC:units = "kg/kg" ;
		OM_AC:long_name = "OM_AC concentration" ;
		OM_AC:cell_methods = "time: mean" ;
	int OM_AC_nacs ;
	double OM_AC_OCW(lev, lat, lon) ;
		OM_AC_OCW:mdims = 1 ;
		OM_AC_OCW:units = "kg/kg" ;
		OM_AC_OCW:long_name = "OM_AC_OCW in cloud water" ;
		OM_AC_OCW:cell_methods = "time: mean" ;
	int OM_AC_OCW_nacs ;
	double OM_AC_SRF(lat, lon) ;
		OM_AC_SRF:units = "kg/kg" ;
		OM_AC_SRF:long_name = "OM_AC in bottom layer" ;
		OM_AC_SRF:cell_methods = "time: mean" ;
	int OM_AC_SRF_nacs ;
	double OM_AI(lev, lat, lon) ;
		OM_AI:mdims = 1 ;
		OM_AI:units = "kg/kg" ;
		OM_AI:long_name = "OM_AI concentration" ;
		OM_AI:cell_methods = "time: mean" ;
	int OM_AI_nacs ;
	double OM_AI_OCW(lev, lat, lon) ;
		OM_AI_OCW:mdims = 1 ;
		OM_AI_OCW:units = "kg/kg" ;
		OM_AI_OCW:long_name = "OM_AI_OCW in cloud water" ;
		OM_AI_OCW:cell_methods = "time: mean" ;
	int OM_AI_OCW_nacs ;
	double OM_AI_SRF(lat, lon) ;
		OM_AI_SRF:units = "kg/kg" ;
		OM_AI_SRF:long_name = "OM_AI in bottom layer" ;
		OM_AI_SRF:cell_methods = "time: mean" ;
	int OM_AI_SRF_nacs ;
	double OM_NI(lev, lat, lon) ;
		OM_NI:mdims = 1 ;
		OM_NI:units = "kg/kg" ;
		OM_NI:long_name = "OM_NI concentration" ;
		OM_NI:cell_methods = "time: mean" ;
	int OM_NI_nacs ;
	double OM_NI_CLXF(lat, lon) ;
		OM_NI_CLXF:units = "molec/cm2/s" ;
		OM_NI_CLXF:long_name = "vertically integrated external forcing for OM_NI" ;
		OM_NI_CLXF:cell_methods = "time: mean" ;
	int OM_NI_CLXF_nacs ;
	double OM_NI_CMXF(lat, lon) ;
		OM_NI_CMXF:units = "kg/m2/s" ;
		OM_NI_CMXF:long_name = "vertically integrated external forcing for OM_NI" ;
		OM_NI_CMXF:cell_methods = "time: mean" ;
	int OM_NI_CMXF_nacs ;
	double OM_NI_OCW(lev, lat, lon) ;
		OM_NI_OCW:mdims = 1 ;
		OM_NI_OCW:units = "kg/kg" ;
		OM_NI_OCW:long_name = "OM_NI_OCW in cloud water" ;
		OM_NI_OCW:cell_methods = "time: mean" ;
	int OM_NI_OCW_nacs ;
	double OM_NI_SRF(lat, lon) ;
		OM_NI_SRF:units = "kg/kg" ;
		OM_NI_SRF:long_name = "OM_NI in bottom layer" ;
		OM_NI_SRF:cell_methods = "time: mean" ;
	int OM_NI_SRF_nacs ;
	double PBLH(lat, lon) ;
		PBLH:units = "m" ;
		PBLH:long_name = "PBL height" ;
		PBLH:cell_methods = "time: mean" ;
	int PBLH_nacs ;
	double PHIS(lat, lon) ;
		PHIS:units = "m2/s2" ;
		PHIS:long_name = "Surface geopotential" ;
	int PHIS_nacs ;
	double PRECC(lat, lon) ;
		PRECC:units = "m/s" ;
		PRECC:long_name = "Convective precipitation rate (liq + ice)" ;
		PRECC:cell_methods = "time: mean" ;
	int PRECC_nacs ;
	double PRECL(lat, lon) ;
		PRECL:units = "m/s" ;
		PRECL:long_name = "Large-scale (stable) precipitation rate (liq + ice)" ;
		PRECL:cell_methods = "time: mean" ;
	int PRECL_nacs ;
	double PRECSC(lat, lon) ;
		PRECSC:units = "m/s" ;
		PRECSC:long_name = "Convective snow rate (water equivalent)" ;
		PRECSC:cell_methods = "time: mean" ;
	int PRECSC_nacs ;
	double PRECSL(lat, lon) ;
		PRECSL:units = "m/s" ;
		PRECSL:long_name = "Large-scale (stable) snow rate (water equivalent)" ;
		PRECSL:cell_methods = "time: mean" ;
	int PRECSL_nacs ;
	double PS(lat, lon) ;
		PS:units = "Pa" ;
		PS:long_name = "Surface pressure" ;
		PS:cell_methods = "time: mean" ;
	int PS_nacs ;
	double PSL(lat, lon) ;
		PSL:units = "Pa" ;
		PSL:long_name = "Sea level pressure" ;
		PSL:cell_methods = "time: mean" ;
	int PSL_nacs ;
	double Q(lev, lat, lon) ;
		Q:mdims = 1 ;
		Q:units = "kg/kg" ;
		Q:long_name = "Specific humidity" ;
		Q:cell_methods = "time: mean" ;
	int Q_nacs ;
	double QFLX(lat, lon) ;
		QFLX:units = "kg/m2/s" ;
		QFLX:long_name = "Surface water flux" ;
		QFLX:cell_methods = "time: mean" ;
	int QFLX_nacs ;
	double QREFHT(lat, lon) ;
		QREFHT:units = "kg/kg" ;
		QREFHT:long_name = "Reference height humidity" ;
		QREFHT:cell_methods = "time: mean" ;
	int QREFHT_nacs ;
	double QRL(lev, lat, lon) ;
		QRL:mdims = 1 ;
		QRL:Sampling_Sequence = "rad_lwsw" ;
		QRL:units = "K/s" ;
		QRL:long_name = "Longwave heating rate" ;
		QRL:cell_methods = "time: mean" ;
	int QRL_nacs ;
	double QRS(lev, lat, lon) ;
		QRS:mdims = 1 ;
		QRS:Sampling_Sequence = "rad_lwsw" ;
		QRS:units = "K/s" ;
		QRS:long_name = "Solar heating rate" ;
		QRS:cell_methods = "time: mean" ;
	int QRS_nacs ;
	double QT(lev, lat, lon) ;
		QT:mdims = 1 ;
		QT:units = "kg/kg" ;
		QT:long_name = "Total water mixing ratio" ;
		QT:cell_methods = "time: mean" ;
	int QT_nacs ;
	double RAINQM(lev, lat, lon) ;
		RAINQM:mdims = 1 ;
		RAINQM:units = "kg/kg" ;
		RAINQM:long_name = "Grid box averaged rain amount" ;
		RAINQM:cell_methods = "time: mean" ;
	int RAINQM_nacs ;
	double RCMINLAYER_CLUBB(ilev, lat, lon) ;
		RCMINLAYER_CLUBB:mdims = 2 ;
		RCMINLAYER_CLUBB:units = "g/kg" ;
		RCMINLAYER_CLUBB:long_name = "Cloud Water in Layer" ;
		RCMINLAYER_CLUBB:cell_methods = "time: mean" ;
	int RCMINLAYER_CLUBB_nacs ;
	double RCMTEND_CLUBB(lev, lat, lon) ;
		RCMTEND_CLUBB:mdims = 1 ;
		RCMTEND_CLUBB:units = "g/kg /s" ;
		RCMTEND_CLUBB:long_name = "Cloud Liquid Water Tendency" ;
		RCMTEND_CLUBB:cell_methods = "time: mean" ;
	int RCMTEND_CLUBB_nacs ;
	double RCM_CLUBB(ilev, lat, lon) ;
		RCM_CLUBB:mdims = 2 ;
		RCM_CLUBB:units = "g/kg" ;
		RCM_CLUBB:long_name = "Cloud Water Mixing Ratio" ;
		RCM_CLUBB:cell_methods = "time: mean" ;
	int RCM_CLUBB_nacs ;
	double RELH(lev, lat, lon) ;
		RELH:mdims = 1 ;
		RELH:units = "unitless" ;
		RELH:long_name = "Fictive relative humidity" ;
		RELH:cell_methods = "time: mean" ;
	int RELH_nacs ;
	double RELHUM(lev, lat, lon) ;
		RELHUM:mdims = 1 ;
		RELHUM:units = "percent" ;
		RELHUM:long_name = "Relative humidity" ;
		RELHUM:cell_methods = "time: mean" ;
	int RELHUM_nacs ;
	double RELVAR(lev, lat, lon) ;
		RELVAR:mdims = 1 ;
		RELVAR:units = "-" ;
		RELVAR:long_name = "Relative cloud water variance" ;
		RELVAR:cell_methods = "time: mean" ;
	int RELVAR_nacs ;
	double RHO_CLUBB(ilev, lat, lon) ;
		RHO_CLUBB:mdims = 2 ;
		RHO_CLUBB:units = "kg/m3" ;
		RHO_CLUBB:long_name = "Air Density" ;
		RHO_CLUBB:cell_methods = "time: mean" ;
	int RHO_CLUBB_nacs ;
	double RIMTEND_CLUBB(lev, lat, lon) ;
		RIMTEND_CLUBB:mdims = 1 ;
		RIMTEND_CLUBB:units = "g/kg /s" ;
		RIMTEND_CLUBB:long_name = "Cloud Ice Tendency" ;
		RIMTEND_CLUBB:cell_methods = "time: mean" ;
	int RIMTEND_CLUBB_nacs ;
	double RTP2_CLUBB(ilev, lat, lon) ;
		RTP2_CLUBB:mdims = 2 ;
		RTP2_CLUBB:units = "g^2/kg^2" ;
		RTP2_CLUBB:long_name = "Moisture Variance" ;
		RTP2_CLUBB:cell_methods = "time: mean" ;
	int RTP2_CLUBB_nacs ;
	double RTPTHLP_CLUBB(ilev, lat, lon) ;
		RTPTHLP_CLUBB:mdims = 2 ;
		RTPTHLP_CLUBB:units = "K g/kg" ;
		RTPTHLP_CLUBB:long_name = "Temp. Moist. Covariance" ;
		RTPTHLP_CLUBB:cell_methods = "time: mean" ;
	int RTPTHLP_CLUBB_nacs ;
	double RVMTEND_CLUBB(lev, lat, lon) ;
		RVMTEND_CLUBB:mdims = 1 ;
		RVMTEND_CLUBB:units = "g/kg /s" ;
		RVMTEND_CLUBB:long_name = "Water vapor tendency" ;
		RVMTEND_CLUBB:cell_methods = "time: mean" ;
	int RVMTEND_CLUBB_nacs ;
	double SADICEXCLD_ISOTM(isotherms_mpc, lat, lon) ;
		SADICEXCLD_ISOTM:mdims = 3 ;
		SADICEXCLD_ISOTM:long_name = "Mean ice surface area density near isotherm * CLD_ISOTM (discard below thick cloud)" ;
		SADICEXCLD_ISOTM:cell_methods = "time: mean" ;
	int SADICEXCLD_ISOTM_nacs ;
	double SADICEXCLD_ISOTM_NONSIM(isotherms_mpc, lat, lon) ;
		SADICEXCLD_ISOTM_NONSIM:mdims = 3 ;
		SADICEXCLD_ISOTM_NONSIM:long_name = "Mean ice surface area density near isotherm * CLD_ISOTM_NONSIM" ;
		SADICEXCLD_ISOTM_NONSIM:cell_methods = "time: mean" ;
	int SADICEXCLD_ISOTM_NONSIM_nacs ;
	double SADLIQXCLD_ISOTM(isotherms_mpc, lat, lon) ;
		SADLIQXCLD_ISOTM:mdims = 3 ;
		SADLIQXCLD_ISOTM:long_name = "Mean droplet surface area density near isotherm * CLD_ISOTM (discard below thick cloud)" ;
		SADLIQXCLD_ISOTM:cell_methods = "time: mean" ;
	int SADLIQXCLD_ISOTM_nacs ;
	double SADLIQXCLD_ISOTM_NONSIM(isotherms_mpc, lat, lon) ;
		SADLIQXCLD_ISOTM_NONSIM:mdims = 3 ;
		SADLIQXCLD_ISOTM_NONSIM:long_name = "Mean droplet surface area density near isotherm * CLD_ISOTM_NONSIM" ;
		SADLIQXCLD_ISOTM_NONSIM:cell_methods = "time: mean" ;
	int SADLIQXCLD_ISOTM_NONSIM_nacs ;
	double SFBC_A(lat, lon) ;
		SFBC_A:units = "kg/m2/s" ;
		SFBC_A:long_name = "BC_A surface flux" ;
		SFBC_A:cell_methods = "time: mean" ;
	int SFBC_A_nacs ;
	double SFBC_AC(lat, lon) ;
		SFBC_AC:units = "kg/m2/s" ;
		SFBC_AC:long_name = "BC_AC surface flux" ;
		SFBC_AC:cell_methods = "time: mean" ;
	int SFBC_AC_nacs ;
	double SFBC_AI(lat, lon) ;
		SFBC_AI:units = "kg/m2/s" ;
		SFBC_AI:long_name = "BC_AI surface flux" ;
		SFBC_AI:cell_methods = "time: mean" ;
	int SFBC_AI_nacs ;
	double SFBC_AX(lat, lon) ;
		SFBC_AX:units = "kg/m2/s" ;
		SFBC_AX:long_name = "BC_AX surface flux" ;
		SFBC_AX:cell_methods = "time: mean" ;
	int SFBC_AX_nacs ;
	double SFBC_N(lat, lon) ;
		SFBC_N:units = "kg/m2/s" ;
		SFBC_N:long_name = "BC_N surface flux" ;
		SFBC_N:cell_methods = "time: mean" ;
	int SFBC_N_nacs ;
	double SFBC_NI(lat, lon) ;
		SFBC_NI:units = "kg/m2/s" ;
		SFBC_NI:long_name = "BC_NI surface flux" ;
		SFBC_NI:cell_methods = "time: mean" ;
	int SFBC_NI_nacs ;
	double SFDMS(lat, lon) ;
		SFDMS:units = "kg/m2/s" ;
		SFDMS:long_name = "DMS surface flux" ;
		SFDMS:cell_methods = "time: mean" ;
	int SFDMS_nacs ;
	double SFDST_A2(lat, lon) ;
		SFDST_A2:units = "kg/m2/s" ;
		SFDST_A2:long_name = "DST_A2 surface flux" ;
		SFDST_A2:cell_methods = "time: mean" ;
	int SFDST_A2_nacs ;
	double SFDST_A3(lat, lon) ;
		SFDST_A3:units = "kg/m2/s" ;
		SFDST_A3:long_name = "DST_A3 surface flux" ;
		SFDST_A3:cell_methods = "time: mean" ;
	int SFDST_A3_nacs ;
	double SFH2O2(lat, lon) ;
		SFH2O2:units = "kg/m2/s" ;
		SFH2O2:long_name = "H2O2 surface flux" ;
		SFH2O2:cell_methods = "time: mean" ;
	int SFH2O2_nacs ;
	double SFH2SO4(lat, lon) ;
		SFH2SO4:units = "kg/m2/s" ;
		SFH2SO4:long_name = "H2SO4 surface flux" ;
		SFH2SO4:cell_methods = "time: mean" ;
	int SFH2SO4_nacs ;
	double SFOM_AC(lat, lon) ;
		SFOM_AC:units = "kg/m2/s" ;
		SFOM_AC:long_name = "OM_AC surface flux" ;
		SFOM_AC:cell_methods = "time: mean" ;
	int SFOM_AC_nacs ;
	double SFOM_AI(lat, lon) ;
		SFOM_AI:units = "kg/m2/s" ;
		SFOM_AI:long_name = "OM_AI surface flux" ;
		SFOM_AI:cell_methods = "time: mean" ;
	int SFOM_AI_nacs ;
	double SFOM_NI(lat, lon) ;
		SFOM_NI:units = "kg/m2/s" ;
		SFOM_NI:long_name = "OM_NI surface flux" ;
		SFOM_NI:cell_methods = "time: mean" ;
	int SFOM_NI_nacs ;
	double SFSO2(lat, lon) ;
		SFSO2:units = "kg/m2/s" ;
		SFSO2:long_name = "SO2 surface flux" ;
		SFSO2:cell_methods = "time: mean" ;
	int SFSO2_nacs ;
	double SFSO4_A1(lat, lon) ;
		SFSO4_A1:units = "kg/m2/s" ;
		SFSO4_A1:long_name = "SO4_A1 surface flux" ;
		SFSO4_A1:cell_methods = "time: mean" ;
	int SFSO4_A1_nacs ;
	double SFSO4_A2(lat, lon) ;
		SFSO4_A2:units = "kg/m2/s" ;
		SFSO4_A2:long_name = "SO4_A2 surface flux" ;
		SFSO4_A2:cell_methods = "time: mean" ;
	int SFSO4_A2_nacs ;
	double SFSO4_AC(lat, lon) ;
		SFSO4_AC:units = "kg/m2/s" ;
		SFSO4_AC:long_name = "SO4_AC surface flux" ;
		SFSO4_AC:cell_methods = "time: mean" ;
	int SFSO4_AC_nacs ;
	double SFSO4_NA(lat, lon) ;
		SFSO4_NA:units = "kg/m2/s" ;
		SFSO4_NA:long_name = "SO4_NA surface flux" ;
		SFSO4_NA:cell_methods = "time: mean" ;
	int SFSO4_NA_nacs ;
	double SFSO4_PR(lat, lon) ;
		SFSO4_PR:units = "kg/m2/s" ;
		SFSO4_PR:long_name = "SO4_PR surface flux" ;
		SFSO4_PR:cell_methods = "time: mean" ;
	int SFSO4_PR_nacs ;
	double SFSOA_A1(lat, lon) ;
		SFSOA_A1:units = "kg/m2/s" ;
		SFSOA_A1:long_name = "SOA_A1 surface flux" ;
		SFSOA_A1:cell_methods = "time: mean" ;
	int SFSOA_A1_nacs ;
	double SFSOA_LV(lat, lon) ;
		SFSOA_LV:units = "kg/m2/s" ;
		SFSOA_LV:long_name = "SOA_LV surface flux" ;
		SFSOA_LV:cell_methods = "time: mean" ;
	int SFSOA_LV_nacs ;
	double SFSOA_NA(lat, lon) ;
		SFSOA_NA:units = "kg/m2/s" ;
		SFSOA_NA:long_name = "SOA_NA surface flux" ;
		SFSOA_NA:cell_methods = "time: mean" ;
	int SFSOA_NA_nacs ;
	double SFSOA_SV(lat, lon) ;
		SFSOA_SV:units = "kg/m2/s" ;
		SFSOA_SV:long_name = "SOA_SV surface flux" ;
		SFSOA_SV:cell_methods = "time: mean" ;
	int SFSOA_SV_nacs ;
	double SFSS_A1(lat, lon) ;
		SFSS_A1:units = "kg/m2/s" ;
		SFSS_A1:long_name = "SS_A1 surface flux" ;
		SFSS_A1:cell_methods = "time: mean" ;
	int SFSS_A1_nacs ;
	double SFSS_A2(lat, lon) ;
		SFSS_A2:units = "kg/m2/s" ;
		SFSS_A2:long_name = "SS_A2 surface flux" ;
		SFSS_A2:cell_methods = "time: mean" ;
	int SFSS_A2_nacs ;
	double SFSS_A3(lat, lon) ;
		SFSS_A3:units = "kg/m2/s" ;
		SFSS_A3:long_name = "SS_A3 surface flux" ;
		SFSS_A3:cell_methods = "time: mean" ;
	int SFSS_A3_nacs ;
	double SFisoprene(lat, lon) ;
		SFisoprene:units = "kg/m2/s" ;
		SFisoprene:long_name = "isoprene surface flux" ;
		SFisoprene:cell_methods = "time: mean" ;
	int SFisoprene_nacs ;
	double SFmonoterp(lat, lon) ;
		SFmonoterp:units = "kg/m2/s" ;
		SFmonoterp:long_name = "monoterp surface flux" ;
		SFmonoterp:cell_methods = "time: mean" ;
	int SFmonoterp_nacs ;
	double SHFLX(lat, lon) ;
		SHFLX:units = "W/m2" ;
		SHFLX:long_name = "Surface sensible heat flux" ;
		SHFLX:cell_methods = "time: mean" ;
	int SHFLX_nacs ;
	double SL(lev, lat, lon) ;
		SL:mdims = 1 ;
		SL:units = "J/kg" ;
		SL:long_name = "Liquid water static energy" ;
		SL:cell_methods = "time: mean" ;
	int SL_nacs ;
	double SLFXCLD_ISOTM(isotherms_mpc, lat, lon) ;
		SLFXCLD_ISOTM:mdims = 3 ;
		SLFXCLD_ISOTM:long_name = "Mean supercooled liquid fraction near isotherm * CLD_ISOTM (discard below thick cloud)" ;
		SLFXCLD_ISOTM:cell_methods = "time: mean" ;
	int SLFXCLD_ISOTM_nacs ;
	double SLFXCLD_ISOTM_NONSIM(isotherms_mpc, lat, lon) ;
		SLFXCLD_ISOTM_NONSIM:mdims = 3 ;
		SLFXCLD_ISOTM_NONSIM:long_name = "Mean supercooled liquid fraction near isotherm * CLD_ISOTM_NONSIM" ;
		SLFXCLD_ISOTM_NONSIM:cell_methods = "time: mean" ;
	int SLFXCLD_ISOTM_NONSIM_nacs ;
	double SNOWHICE(lat, lon) ;
		SNOWHICE:units = "m" ;
		SNOWHICE:long_name = "Snow depth over ice" ;
		SNOWHICE:cell_methods = "time: mean" ;
	int SNOWHICE_nacs ;
	double SNOWHLND(lat, lon) ;
		SNOWHLND:units = "m" ;
		SNOWHLND:long_name = "Water equivalent snow depth" ;
		SNOWHLND:cell_methods = "time: mean" ;
	int SNOWHLND_nacs ;
	double SNOWQM(lev, lat, lon) ;
		SNOWQM:mdims = 1 ;
		SNOWQM:units = "kg/kg" ;
		SNOWQM:long_name = "Grid box averaged snow amount" ;
		SNOWQM:cell_methods = "time: mean" ;
	int SNOWQM_nacs ;
	double SO2(lev, lat, lon) ;
		SO2:mdims = 1 ;
		SO2:units = "mol/mol" ;
		SO2:long_name = "SO2 concentration" ;
		SO2:cell_methods = "time: mean" ;
	int SO2_nacs ;
	double SO2_CLXF(lat, lon) ;
		SO2_CLXF:units = "molec/cm2/s" ;
		SO2_CLXF:long_name = "vertically integrated external forcing for SO2" ;
		SO2_CLXF:cell_methods = "time: mean" ;
	int SO2_CLXF_nacs ;
	double SO2_CMXF(lat, lon) ;
		SO2_CMXF:units = "kg/m2/s" ;
		SO2_CMXF:long_name = "vertically integrated external forcing for SO2" ;
		SO2_CMXF:cell_methods = "time: mean" ;
	int SO2_CMXF_nacs ;
	double SO2_SRF(lat, lon) ;
		SO2_SRF:units = "mol/mol" ;
		SO2_SRF:long_name = "SO2 in bottom layer" ;
		SO2_SRF:cell_methods = "time: mean" ;
	int SO2_SRF_nacs ;
	double SO4_A1(lev, lat, lon) ;
		SO4_A1:mdims = 1 ;
		SO4_A1:units = "kg/kg" ;
		SO4_A1:long_name = "SO4_A1 concentration" ;
		SO4_A1:cell_methods = "time: mean" ;
	int SO4_A1_nacs ;
	double SO4_A1_OCW(lev, lat, lon) ;
		SO4_A1_OCW:mdims = 1 ;
		SO4_A1_OCW:units = "kg/kg" ;
		SO4_A1_OCW:long_name = "SO4_A1_OCW in cloud water" ;
		SO4_A1_OCW:cell_methods = "time: mean" ;
	int SO4_A1_OCW_nacs ;
	double SO4_A1_SRF(lat, lon) ;
		SO4_A1_SRF:units = "kg/kg" ;
		SO4_A1_SRF:long_name = "SO4_A1 in bottom layer" ;
		SO4_A1_SRF:cell_methods = "time: mean" ;
	int SO4_A1_SRF_nacs ;
	double SO4_A2(lev, lat, lon) ;
		SO4_A2:mdims = 1 ;
		SO4_A2:units = "kg/kg" ;
		SO4_A2:long_name = "SO4_A2 concentration" ;
		SO4_A2:cell_methods = "time: mean" ;
	int SO4_A2_nacs ;
	double SO4_A2_OCW(lev, lat, lon) ;
		SO4_A2_OCW:mdims = 1 ;
		SO4_A2_OCW:units = "kg/kg" ;
		SO4_A2_OCW:long_name = "SO4_A2_OCW in cloud water" ;
		SO4_A2_OCW:cell_methods = "time: mean" ;
	int SO4_A2_OCW_nacs ;
	double SO4_A2_SRF(lat, lon) ;
		SO4_A2_SRF:units = "kg/kg" ;
		SO4_A2_SRF:long_name = "SO4_A2 in bottom layer" ;
		SO4_A2_SRF:cell_methods = "time: mean" ;
	int SO4_A2_SRF_nacs ;
	double SO4_AC(lev, lat, lon) ;
		SO4_AC:mdims = 1 ;
		SO4_AC:units = "kg/kg" ;
		SO4_AC:long_name = "SO4_AC concentration" ;
		SO4_AC:cell_methods = "time: mean" ;
	int SO4_AC_nacs ;
	double SO4_AC_OCW(lev, lat, lon) ;
		SO4_AC_OCW:mdims = 1 ;
		SO4_AC_OCW:units = "kg/kg" ;
		SO4_AC_OCW:long_name = "SO4_AC_OCW in cloud water" ;
		SO4_AC_OCW:cell_methods = "time: mean" ;
	int SO4_AC_OCW_nacs ;
	double SO4_AC_SRF(lat, lon) ;
		SO4_AC_SRF:units = "kg/kg" ;
		SO4_AC_SRF:long_name = "SO4_AC in bottom layer" ;
		SO4_AC_SRF:cell_methods = "time: mean" ;
	int SO4_AC_SRF_nacs ;
	double SO4_NA(lev, lat, lon) ;
		SO4_NA:mdims = 1 ;
		SO4_NA:units = "kg/kg" ;
		SO4_NA:long_name = "SO4_NA concentration" ;
		SO4_NA:cell_methods = "time: mean" ;
	int SO4_NA_nacs ;
	double SO4_NA_OCW(lev, lat, lon) ;
		SO4_NA_OCW:mdims = 1 ;
		SO4_NA_OCW:units = "kg/kg" ;
		SO4_NA_OCW:long_name = "SO4_NA_OCW in cloud water" ;
		SO4_NA_OCW:cell_methods = "time: mean" ;
	int SO4_NA_OCW_nacs ;
	double SO4_NA_SRF(lat, lon) ;
		SO4_NA_SRF:units = "kg/kg" ;
		SO4_NA_SRF:long_name = "SO4_NA in bottom layer" ;
		SO4_NA_SRF:cell_methods = "time: mean" ;
	int SO4_NA_SRF_nacs ;
	double SO4_PR(lev, lat, lon) ;
		SO4_PR:mdims = 1 ;
		SO4_PR:units = "kg/kg" ;
		SO4_PR:long_name = "SO4_PR concentration" ;
		SO4_PR:cell_methods = "time: mean" ;
	int SO4_PR_nacs ;
	double SO4_PR_CLXF(lat, lon) ;
		SO4_PR_CLXF:units = "molec/cm2/s" ;
		SO4_PR_CLXF:long_name = "vertically integrated external forcing for SO4_PR" ;
		SO4_PR_CLXF:cell_methods = "time: mean" ;
	int SO4_PR_CLXF_nacs ;
	double SO4_PR_CMXF(lat, lon) ;
		SO4_PR_CMXF:units = "kg/m2/s" ;
		SO4_PR_CMXF:long_name = "vertically integrated external forcing for SO4_PR" ;
		SO4_PR_CMXF:cell_methods = "time: mean" ;
	int SO4_PR_CMXF_nacs ;
	double SO4_PR_OCW(lev, lat, lon) ;
		SO4_PR_OCW:mdims = 1 ;
		SO4_PR_OCW:units = "kg/kg" ;
		SO4_PR_OCW:long_name = "SO4_PR_OCW in cloud water" ;
		SO4_PR_OCW:cell_methods = "time: mean" ;
	int SO4_PR_OCW_nacs ;
	double SO4_PR_SRF(lat, lon) ;
		SO4_PR_SRF:units = "kg/kg" ;
		SO4_PR_SRF:long_name = "SO4_PR in bottom layer" ;
		SO4_PR_SRF:cell_methods = "time: mean" ;
	int SO4_PR_SRF_nacs ;
	double SOA_A1(lev, lat, lon) ;
		SOA_A1:mdims = 1 ;
		SOA_A1:units = "kg/kg" ;
		SOA_A1:long_name = "SOA_A1 concentration" ;
		SOA_A1:cell_methods = "time: mean" ;
	int SOA_A1_nacs ;
	double SOA_A1_OCW(lev, lat, lon) ;
		SOA_A1_OCW:mdims = 1 ;
		SOA_A1_OCW:units = "kg/kg" ;
		SOA_A1_OCW:long_name = "SOA_A1_OCW in cloud water" ;
		SOA_A1_OCW:cell_methods = "time: mean" ;
	int SOA_A1_OCW_nacs ;
	double SOA_A1_SRF(lat, lon) ;
		SOA_A1_SRF:units = "kg/kg" ;
		SOA_A1_SRF:long_name = "SOA_A1 in bottom layer" ;
		SOA_A1_SRF:cell_methods = "time: mean" ;
	int SOA_A1_SRF_nacs ;
	double SOA_LV(lev, lat, lon) ;
		SOA_LV:mdims = 1 ;
		SOA_LV:units = "mol/mol" ;
		SOA_LV:long_name = "SOA_LV concentration" ;
		SOA_LV:cell_methods = "time: mean" ;
	int SOA_LV_nacs ;
	double SOA_LV_SRF(lat, lon) ;
		SOA_LV_SRF:units = "mol/mol" ;
		SOA_LV_SRF:long_name = "SOA_LV in bottom layer" ;
		SOA_LV_SRF:cell_methods = "time: mean" ;
	int SOA_LV_SRF_nacs ;
	double SOA_NA(lev, lat, lon) ;
		SOA_NA:mdims = 1 ;
		SOA_NA:units = "kg/kg" ;
		SOA_NA:long_name = "SOA_NA concentration" ;
		SOA_NA:cell_methods = "time: mean" ;
	int SOA_NA_nacs ;
	double SOA_NA_OCW(lev, lat, lon) ;
		SOA_NA_OCW:mdims = 1 ;
		SOA_NA_OCW:units = "kg/kg" ;
		SOA_NA_OCW:long_name = "SOA_NA_OCW in cloud water" ;
		SOA_NA_OCW:cell_methods = "time: mean" ;
	int SOA_NA_OCW_nacs ;
	double SOA_NA_SRF(lat, lon) ;
		SOA_NA_SRF:units = "kg/kg" ;
		SOA_NA_SRF:long_name = "SOA_NA in bottom layer" ;
		SOA_NA_SRF:cell_methods = "time: mean" ;
	int SOA_NA_SRF_nacs ;
	double SOA_SV(lev, lat, lon) ;
		SOA_SV:mdims = 1 ;
		SOA_SV:units = "mol/mol" ;
		SOA_SV:long_name = "SOA_SV concentration" ;
		SOA_SV:cell_methods = "time: mean" ;
	int SOA_SV_nacs ;
	double SOA_SV_SRF(lat, lon) ;
		SOA_SV_SRF:units = "mol/mol" ;
		SOA_SV_SRF:long_name = "SOA_SV in bottom layer" ;
		SOA_SV_SRF:cell_methods = "time: mean" ;
	int SOA_SV_SRF_nacs ;
	double SOLIN(lat, lon) ;
		SOLIN:Sampling_Sequence = "rad_lwsw" ;
		SOLIN:units = "W/m2" ;
		SOLIN:long_name = "Solar insolation" ;
		SOLIN:cell_methods = "time: mean" ;
	int SOLIN_nacs ;
	double SSAVIS(lev, lat, lon) ;
		SSAVIS:mdims = 1 ;
		SSAVIS:units = "unitless" ;
		SSAVIS:long_name = "Aerosol single scattering albedo in visible wavelength band" ;
		SSAVIS:cell_methods = "time: mean" ;
	int SSAVIS_nacs ;
	double SS_A1(lev, lat, lon) ;
		SS_A1:mdims = 1 ;
		SS_A1:units = "kg/kg" ;
		SS_A1:long_name = "SS_A1 concentration" ;
		SS_A1:cell_methods = "time: mean" ;
	int SS_A1_nacs ;
	double SS_A1_OCW(lev, lat, lon) ;
		SS_A1_OCW:mdims = 1 ;
		SS_A1_OCW:units = "kg/kg" ;
		SS_A1_OCW:long_name = "SS_A1_OCW in cloud water" ;
		SS_A1_OCW:cell_methods = "time: mean" ;
	int SS_A1_OCW_nacs ;
	double SS_A1_SRF(lat, lon) ;
		SS_A1_SRF:units = "kg/kg" ;
		SS_A1_SRF:long_name = "SS_A1 in bottom layer" ;
		SS_A1_SRF:cell_methods = "time: mean" ;
	int SS_A1_SRF_nacs ;
	double SS_A2(lev, lat, lon) ;
		SS_A2:mdims = 1 ;
		SS_A2:units = "kg/kg" ;
		SS_A2:long_name = "SS_A2 concentration" ;
		SS_A2:cell_methods = "time: mean" ;
	int SS_A2_nacs ;
	double SS_A2_OCW(lev, lat, lon) ;
		SS_A2_OCW:mdims = 1 ;
		SS_A2_OCW:units = "kg/kg" ;
		SS_A2_OCW:long_name = "SS_A2_OCW in cloud water" ;
		SS_A2_OCW:cell_methods = "time: mean" ;
	int SS_A2_OCW_nacs ;
	double SS_A2_SRF(lat, lon) ;
		SS_A2_SRF:units = "kg/kg" ;
		SS_A2_SRF:long_name = "SS_A2 in bottom layer" ;
		SS_A2_SRF:cell_methods = "time: mean" ;
	int SS_A2_SRF_nacs ;
	double SS_A3(lev, lat, lon) ;
		SS_A3:mdims = 1 ;
		SS_A3:units = "kg/kg" ;
		SS_A3:long_name = "SS_A3 concentration" ;
		SS_A3:cell_methods = "time: mean" ;
	int SS_A3_nacs ;
	double SS_A3_OCW(lev, lat, lon) ;
		SS_A3_OCW:mdims = 1 ;
		SS_A3_OCW:units = "kg/kg" ;
		SS_A3_OCW:long_name = "SS_A3_OCW in cloud water" ;
		SS_A3_OCW:cell_methods = "time: mean" ;
	int SS_A3_OCW_nacs ;
	double SS_A3_SRF(lat, lon) ;
		SS_A3_SRF:units = "kg/kg" ;
		SS_A3_SRF:long_name = "SS_A3 in bottom layer" ;
		SS_A3_SRF:cell_methods = "time: mean" ;
	int SS_A3_SRF_nacs ;
	double STEND_CLUBB(lev, lat, lon) ;
		STEND_CLUBB:mdims = 1 ;
		STEND_CLUBB:units = "k/s" ;
		STEND_CLUBB:long_name = "Temperature tendency" ;
		STEND_CLUBB:cell_methods = "time: mean" ;
	int STEND_CLUBB_nacs ;
	double SWCF(lat, lon) ;
		SWCF:Sampling_Sequence = "rad_lwsw" ;
		SWCF:units = "W/m2" ;
		SWCF:long_name = "Shortwave cloud forcing" ;
		SWCF:cell_methods = "time: mean" ;
	int SWCF_nacs ;
	double T(lev, lat, lon) ;
		T:mdims = 1 ;
		T:units = "K" ;
		T:long_name = "Temperature" ;
		T:cell_methods = "time: mean" ;
	int T_nacs ;
	double TAUBLJX(lat, lon) ;
		TAUBLJX:units = "N/m2" ;
		TAUBLJX:long_name = "Zonal      integrated drag from Beljaars SGO" ;
		TAUBLJX:cell_methods = "time: mean" ;
	int TAUBLJX_nacs ;
	double TAUBLJY(lat, lon) ;
		TAUBLJY:units = "N/m2" ;
		TAUBLJY:long_name = "Meridional integrated drag from Beljaars SGO" ;
		TAUBLJY:cell_methods = "time: mean" ;
	int TAUBLJY_nacs ;
	double TAUGWX(lat, lon) ;
		TAUGWX:units = "N/m2" ;
		TAUGWX:long_name = "Zonal gravity wave surface stress" ;
		TAUGWX:cell_methods = "time: mean" ;
	int TAUGWX_nacs ;
	double TAUGWY(lat, lon) ;
		TAUGWY:units = "N/m2" ;
		TAUGWY:long_name = "Meridional gravity wave surface stress" ;
		TAUGWY:cell_methods = "time: mean" ;
	int TAUGWY_nacs ;
	double TAUX(lat, lon) ;
		TAUX:units = "N/m2" ;
		TAUX:long_name = "Zonal surface stress" ;
		TAUX:cell_methods = "time: mean" ;
	int TAUX_nacs ;
	double TAUY(lat, lon) ;
		TAUY:units = "N/m2" ;
		TAUY:long_name = "Meridional surface stress" ;
		TAUY:cell_methods = "time: mean" ;
	int TAUY_nacs ;
	double TGCLDCWP(lat, lon) ;
		TGCLDCWP:units = "kg/m2" ;
		TGCLDCWP:long_name = "Total grid-box cloud water path (liquid and ice)" ;
		TGCLDCWP:cell_methods = "time: mean" ;
	int TGCLDCWP_nacs ;
	double TGCLDIWP(lat, lon) ;
		TGCLDIWP:units = "kg/m2" ;
		TGCLDIWP:long_name = "Total grid-box cloud ice water path" ;
		TGCLDIWP:cell_methods = "time: mean" ;
	int TGCLDIWP_nacs ;
	double TGCLDLWP(lat, lon) ;
		TGCLDLWP:units = "kg/m2" ;
		TGCLDLWP:long_name = "Total grid-box cloud liquid water path" ;
		TGCLDLWP:cell_methods = "time: mean" ;
	int TGCLDLWP_nacs ;
	double TH(ilev, lat, lon) ;
		TH:mdims = 2 ;
		TH:units = "K" ;
		TH:long_name = "Potential Temperature" ;
		TH:cell_methods = "time: mean" ;
	int TH_nacs ;
	double THLP2_CLUBB(ilev, lat, lon) ;
		THLP2_CLUBB:mdims = 2 ;
		THLP2_CLUBB:units = "K^2" ;
		THLP2_CLUBB:long_name = "Temperature Variance" ;
		THLP2_CLUBB:cell_methods = "time: mean" ;
	int THLP2_CLUBB_nacs ;
	double TMQ(lat, lon) ;
		TMQ:units = "kg/m2" ;
		TMQ:long_name = "Total (vertically integrated) precipitable water" ;
		TMQ:cell_methods = "time: mean" ;
	int TMQ_nacs ;
	double TREFHT(lat, lon) ;
		TREFHT:units = "K" ;
		TREFHT:long_name = "Reference height temperature" ;
		TREFHT:cell_methods = "time: mean" ;
	int TREFHT_nacs ;
	double TS(lat, lon) ;
		TS:units = "K" ;
		TS:long_name = "Surface temperature (radiative)" ;
		TS:cell_methods = "time: mean" ;
	int TS_nacs ;
	double TSMN(lat, lon) ;
		TSMN:units = "K" ;
		TSMN:long_name = "Minimum surface temperature over output period" ;
		TSMN:cell_methods = "time: minimum" ;
	int TSMN_nacs ;
	double TSMX(lat, lon) ;
		TSMX:units = "K" ;
		TSMX:long_name = "Maximum surface temperature over output period" ;
		TSMX:cell_methods = "time: maximum" ;
	int TSMX_nacs ;
	double U(lev, lat, lon) ;
		U:mdims = 1 ;
		U:units = "m/s" ;
		U:long_name = "Zonal wind" ;
		U:cell_methods = "time: mean" ;
	int U_nacs ;
	double U10(lat, lon) ;
		U10:units = "m/s" ;
		U10:long_name = "10m wind speed" ;
		U10:cell_methods = "time: mean" ;
	int U10_nacs ;
	double UM_CLUBB(ilev, lat, lon) ;
		UM_CLUBB:mdims = 2 ;
		UM_CLUBB:units = "m/s" ;
		UM_CLUBB:long_name = "Zonal Wind" ;
		UM_CLUBB:cell_methods = "time: mean" ;
	int UM_CLUBB_nacs ;
	double UP2_CLUBB(ilev, lat, lon) ;
		UP2_CLUBB:mdims = 2 ;
		UP2_CLUBB:units = "m2/s2" ;
		UP2_CLUBB:long_name = "Zonal Velocity Variance" ;
		UP2_CLUBB:cell_methods = "time: mean" ;
	int UP2_CLUBB_nacs ;
	double UPWP_CLUBB(ilev, lat, lon) ;
		UPWP_CLUBB:mdims = 2 ;
		UPWP_CLUBB:units = "m2/s2" ;
		UPWP_CLUBB:long_name = "Zonal Momentum Flux" ;
		UPWP_CLUBB:cell_methods = "time: mean" ;
	int UPWP_CLUBB_nacs ;
	double UTEND_CLUBB(lev, lat, lon) ;
		UTEND_CLUBB:mdims = 1 ;
		UTEND_CLUBB:units = "m/s /s" ;
		UTEND_CLUBB:long_name = "U-wind Tendency" ;
		UTEND_CLUBB:cell_methods = "time: mean" ;
	int UTEND_CLUBB_nacs ;
	double UU(lev, lat, lon) ;
		UU:mdims = 1 ;
		UU:units = "m2/s2" ;
		UU:long_name = "Zonal velocity squared" ;
		UU:cell_methods = "time: mean" ;
	int UU_nacs ;
	double UVzm(ilev, lat, zlon) ;
		UVzm:mdims = 2 ;
		UVzm:units = "M2/S2" ;
		UVzm:long_name = "Meridional Flux of Zonal Momentum: 3D zon. mean" ;
		UVzm:cell_methods = "zlon: mean time: mean" ;
	int UVzm_nacs ;
	double UWzm(ilev, lat, zlon) ;
		UWzm:mdims = 2 ;
		UWzm:units = "M2/S2" ;
		UWzm:long_name = "Vertical Flux of Zonal Momentum: 3D zon. mean" ;
		UWzm:cell_methods = "zlon: mean time: mean" ;
	int UWzm_nacs ;
	double V(lev, lat, lon) ;
		V:mdims = 1 ;
		V:units = "m/s" ;
		V:long_name = "Meridional wind" ;
		V:cell_methods = "time: mean" ;
	int V_nacs ;
	double VD01(lev, lat, lon) ;
		VD01:mdims = 1 ;
		VD01:units = "kg/kg/s" ;
		VD01:long_name = "Vertical diffusion of Q" ;
		VD01:cell_methods = "time: mean" ;
	int VD01_nacs ;
	double VM_CLUBB(ilev, lat, lon) ;
		VM_CLUBB:mdims = 2 ;
		VM_CLUBB:units = "m/s" ;
		VM_CLUBB:long_name = "Meridional Wind" ;
		VM_CLUBB:cell_methods = "time: mean" ;
	int VM_CLUBB_nacs ;
	double VP2_CLUBB(ilev, lat, lon) ;
		VP2_CLUBB:mdims = 2 ;
		VP2_CLUBB:units = "m2/s2" ;
		VP2_CLUBB:long_name = "Meridional Velocity Variance" ;
		VP2_CLUBB:cell_methods = "time: mean" ;
	int VP2_CLUBB_nacs ;
	double VPWP_CLUBB(ilev, lat, lon) ;
		VPWP_CLUBB:mdims = 2 ;
		VPWP_CLUBB:units = "m2/s2" ;
		VPWP_CLUBB:long_name = "Meridional Momentum Flux" ;
		VPWP_CLUBB:cell_methods = "time: mean" ;
	int VPWP_CLUBB_nacs ;
	double VQ(lev, lat, lon) ;
		VQ:mdims = 1 ;
		VQ:units = "m/skg/kg" ;
		VQ:long_name = "Meridional water transport" ;
		VQ:cell_methods = "time: mean" ;
	int VQ_nacs ;
	double VT(lev, lat, lon) ;
		VT:mdims = 1 ;
		VT:units = "K m/s" ;
		VT:long_name = "Meridional heat transport" ;
		VT:cell_methods = "time: mean" ;
	int VT_nacs ;
	double VTEND_CLUBB(lev, lat, lon) ;
		VTEND_CLUBB:mdims = 1 ;
		VTEND_CLUBB:units = "m/s /s" ;
		VTEND_CLUBB:long_name = "V-wind Tendency" ;
		VTEND_CLUBB:cell_methods = "time: mean" ;
	int VTEND_CLUBB_nacs ;
	double VTHzm(ilev, lat, zlon) ;
		VTHzm:mdims = 2 ;
		VTHzm:units = "MK/S" ;
		VTHzm:long_name = "Meridional Heat Flux: 3D zon. mean" ;
		VTHzm:cell_methods = "zlon: mean time: mean" ;
	int VTHzm_nacs ;
	double VU(lev, lat, lon) ;
		VU:mdims = 1 ;
		VU:units = "m2/s2" ;
		VU:long_name = "Meridional flux of zonal momentum" ;
		VU:cell_methods = "time: mean" ;
	int VU_nacs ;
	double VV(lev, lat, lon) ;
		VV:mdims = 1 ;
		VV:units = "m2/s2" ;
		VV:long_name = "Meridional velocity squared" ;
		VV:cell_methods = "time: mean" ;
	int VV_nacs ;
	double WD_A_DMS(lat, lon) ;
		WD_A_DMS:units = "kg/m2/s" ;
		WD_A_DMS:long_name = "DMS              wet deposition" ;
		WD_A_DMS:cell_methods = "time: mean" ;
	int WD_A_DMS_nacs ;
	double WD_A_H2O2(lat, lon) ;
		WD_A_H2O2:units = "kg/m2/s" ;
		WD_A_H2O2:long_name = "H2O2             wet deposition" ;
		WD_A_H2O2:cell_methods = "time: mean" ;
	int WD_A_H2O2_nacs ;
	double WD_A_H2SO4(lat, lon) ;
		WD_A_H2SO4:units = "kg/m2/s" ;
		WD_A_H2SO4:long_name = "H2SO4            wet deposition" ;
		WD_A_H2SO4:cell_methods = "time: mean" ;
	int WD_A_H2SO4_nacs ;
	double WD_A_SO2(lat, lon) ;
		WD_A_SO2:units = "kg/m2/s" ;
		WD_A_SO2:long_name = "SO2              wet deposition" ;
		WD_A_SO2:cell_methods = "time: mean" ;
	int WD_A_SO2_nacs ;
	double WD_A_SOA_LV(lat, lon) ;
		WD_A_SOA_LV:units = "kg/m2/s" ;
		WD_A_SOA_LV:long_name = "SOA_LV           wet deposition" ;
		WD_A_SOA_LV:cell_methods = "time: mean" ;
	int WD_A_SOA_LV_nacs ;
	double WD_A_SOA_SV(lat, lon) ;
		WD_A_SOA_SV:units = "kg/m2/s" ;
		WD_A_SOA_SV:long_name = "SOA_SV           wet deposition" ;
		WD_A_SOA_SV:cell_methods = "time: mean" ;
	int WD_A_SOA_SV_nacs ;
	double WD_A_isoprene(lat, lon) ;
		WD_A_isoprene:units = "kg/m2/s" ;
		WD_A_isoprene:long_name = "isoprene         wet deposition" ;
		WD_A_isoprene:cell_methods = "time: mean" ;
	int WD_A_isoprene_nacs ;
	double WD_A_monoterp(lat, lon) ;
		WD_A_monoterp:units = "kg/m2/s" ;
		WD_A_monoterp:long_name = "monoterp         wet deposition" ;
		WD_A_monoterp:cell_methods = "time: mean" ;
	int WD_A_monoterp_nacs ;
	double WD_H2O2(lat, lon) ;
		WD_H2O2:units = "kg/m2/s" ;
		WD_H2O2:long_name = "vertical integrated wet deposition flux" ;
		WD_H2O2:cell_methods = "time: mean" ;
	int WD_H2O2_nacs ;
	double WD_H2SO4(lat, lon) ;
		WD_H2SO4:units = "kg/m2/s" ;
		WD_H2SO4:long_name = "vertical integrated wet deposition flux" ;
		WD_H2SO4:cell_methods = "time: mean" ;
	int WD_H2SO4_nacs ;
	double WD_SO2(lat, lon) ;
		WD_SO2:units = "kg/m2/s" ;
		WD_SO2:long_name = "vertical integrated wet deposition flux" ;
		WD_SO2:cell_methods = "time: mean" ;
	int WD_SO2_nacs ;
	double WP2_CLUBB(ilev, lat, lon) ;
		WP2_CLUBB:mdims = 2 ;
		WP2_CLUBB:units = "m2/s2" ;
		WP2_CLUBB:long_name = "Vertical Velocity Variance" ;
		WP2_CLUBB:cell_methods = "time: mean" ;
	int WP2_CLUBB_nacs ;
	double WP3_CLUBB(ilev, lat, lon) ;
		WP3_CLUBB:mdims = 2 ;
		WP3_CLUBB:units = "m3/s3" ;
		WP3_CLUBB:long_name = "Third Moment Vertical Velocity" ;
		WP3_CLUBB:cell_methods = "time: mean" ;
	int WP3_CLUBB_nacs ;
	double WPRCP_CLUBB(ilev, lat, lon) ;
		WPRCP_CLUBB:mdims = 2 ;
		WPRCP_CLUBB:units = "W/m2" ;
		WPRCP_CLUBB:long_name = "Liquid Water Flux" ;
		WPRCP_CLUBB:cell_methods = "time: mean" ;
	int WPRCP_CLUBB_nacs ;
	double WPRTP_CLUBB(ilev, lat, lon) ;
		WPRTP_CLUBB:mdims = 2 ;
		WPRTP_CLUBB:units = "W/m2" ;
		WPRTP_CLUBB:long_name = "Moisture Flux" ;
		WPRTP_CLUBB:cell_methods = "time: mean" ;
	int WPRTP_CLUBB_nacs ;
	double WPTHLP_CLUBB(ilev, lat, lon) ;
		WPTHLP_CLUBB:mdims = 2 ;
		WPTHLP_CLUBB:units = "W/m2" ;
		WPTHLP_CLUBB:long_name = "Heat Flux" ;
		WPTHLP_CLUBB:cell_methods = "time: mean" ;
	int WPTHLP_CLUBB_nacs ;
	double WPTHVP_CLUBB(lev, lat, lon) ;
		WPTHVP_CLUBB:mdims = 1 ;
		WPTHVP_CLUBB:units = "W/m2" ;
		WPTHVP_CLUBB:long_name = "Buoyancy Flux" ;
		WPTHVP_CLUBB:cell_methods = "time: mean" ;
	int WPTHVP_CLUBB_nacs ;
	double WSUB(lev, lat, lon) ;
		WSUB:mdims = 1 ;
		WSUB:units = "m/s" ;
		WSUB:long_name = "Diagnostic sub-grid vertical velocity" ;
		WSUB:cell_methods = "time: mean" ;
	int WSUB_nacs ;
	double WTHzm(ilev, lat, zlon) ;
		WTHzm:mdims = 2 ;
		WTHzm:units = "MK/S" ;
		WTHzm:long_name = "Vertical Heat Flux: 3D zon. mean" ;
		WTHzm:cell_methods = "zlon: mean time: mean" ;
	int WTHzm_nacs ;
	double Z3(lev, lat, lon) ;
		Z3:mdims = 1 ;
		Z3:units = "m" ;
		Z3:long_name = "Geopotential Height (above sea level)" ;
		Z3:cell_methods = "time: mean" ;
	int Z3_nacs ;
	double ZM_CLUBB(ilev, lat, lon) ;
		ZM_CLUBB:mdims = 2 ;
		ZM_CLUBB:units = "m" ;
		ZM_CLUBB:long_name = "Momentum Heights" ;
		ZM_CLUBB:cell_methods = "time: mean" ;
	int ZM_CLUBB_nacs ;
	double ZT_CLUBB(ilev, lat, lon) ;
		ZT_CLUBB:mdims = 2 ;
		ZT_CLUBB:units = "m" ;
		ZT_CLUBB:long_name = "Thermodynamic Heights" ;
		ZT_CLUBB:cell_methods = "time: mean" ;
	int ZT_CLUBB_nacs ;
	double cb_BC(lat, lon) ;
		cb_BC:units = "kg/m2" ;
		cb_BC:long_name = "cb_BC column of aerosol type" ;
		cb_BC:cell_methods = "time: mean" ;
	int cb_BC_nacs ;
	double cb_BC_A(lat, lon) ;
		cb_BC_A:units = "kg/m2" ;
		cb_BC_A:long_name = "cb_BC_A in column" ;
		cb_BC_A:cell_methods = "time: mean" ;
	int cb_BC_A_nacs ;
	double cb_BC_AC(lat, lon) ;
		cb_BC_AC:units = "kg/m2" ;
		cb_BC_AC:long_name = "cb_BC_AC in column" ;
		cb_BC_AC:cell_methods = "time: mean" ;
	int cb_BC_AC_nacs ;
	double cb_BC_AC_OCW(lat, lon) ;
		cb_BC_AC_OCW:units = "kg/m2" ;
		cb_BC_AC_OCW:long_name = "cb_BC_AC_OCW column in cloud water" ;
		cb_BC_AC_OCW:cell_methods = "time: mean" ;
	int cb_BC_AC_OCW_nacs ;
	double cb_BC_AI(lat, lon) ;
		cb_BC_AI:units = "kg/m2" ;
		cb_BC_AI:long_name = "cb_BC_AI in column" ;
		cb_BC_AI:cell_methods = "time: mean" ;
	int cb_BC_AI_nacs ;
	double cb_BC_AI_OCW(lat, lon) ;
		cb_BC_AI_OCW:units = "kg/m2" ;
		cb_BC_AI_OCW:long_name = "cb_BC_AI_OCW column in cloud water" ;
		cb_BC_AI_OCW:cell_methods = "time: mean" ;
	int cb_BC_AI_OCW_nacs ;
	double cb_BC_AX(lat, lon) ;
		cb_BC_AX:units = "kg/m2" ;
		cb_BC_AX:long_name = "cb_BC_AX in column" ;
		cb_BC_AX:cell_methods = "time: mean" ;
	int cb_BC_AX_nacs ;
	double cb_BC_A_OCW(lat, lon) ;
		cb_BC_A_OCW:units = "kg/m2" ;
		cb_BC_A_OCW:long_name = "cb_BC_A_OCW column in cloud water" ;
		cb_BC_A_OCW:cell_methods = "time: mean" ;
	int cb_BC_A_OCW_nacs ;
	double cb_BC_N(lat, lon) ;
		cb_BC_N:units = "kg/m2" ;
		cb_BC_N:long_name = "cb_BC_N in column" ;
		cb_BC_N:cell_methods = "time: mean" ;
	int cb_BC_N_nacs ;
	double cb_BC_NI(lat, lon) ;
		cb_BC_NI:units = "kg/m2" ;
		cb_BC_NI:long_name = "cb_BC_NI in column" ;
		cb_BC_NI:cell_methods = "time: mean" ;
	int cb_BC_NI_nacs ;
	double cb_BC_NI_OCW(lat, lon) ;
		cb_BC_NI_OCW:units = "kg/m2" ;
		cb_BC_NI_OCW:long_name = "cb_BC_NI_OCW column in cloud water" ;
		cb_BC_NI_OCW:cell_methods = "time: mean" ;
	int cb_BC_NI_OCW_nacs ;
	double cb_BC_N_OCW(lat, lon) ;
		cb_BC_N_OCW:units = "kg/m2" ;
		cb_BC_N_OCW:long_name = "cb_BC_N_OCW column in cloud water" ;
		cb_BC_N_OCW:cell_methods = "time: mean" ;
	int cb_BC_N_OCW_nacs ;
	double cb_DMS(lat, lon) ;
		cb_DMS:units = "kg/m2" ;
		cb_DMS:long_name = "cb_DMS in column" ;
		cb_DMS:cell_methods = "time: mean" ;
	int cb_DMS_nacs ;
	double cb_DST_A2(lat, lon) ;
		cb_DST_A2:units = "kg/m2" ;
		cb_DST_A2:long_name = "cb_DST_A2 in column" ;
		cb_DST_A2:cell_methods = "time: mean" ;
	int cb_DST_A2_nacs ;
	double cb_DST_A2_OCW(lat, lon) ;
		cb_DST_A2_OCW:units = "kg/m2" ;
		cb_DST_A2_OCW:long_name = "cb_DST_A2_OCW column in cloud water" ;
		cb_DST_A2_OCW:cell_methods = "time: mean" ;
	int cb_DST_A2_OCW_nacs ;
	double cb_DST_A3(lat, lon) ;
		cb_DST_A3:units = "kg/m2" ;
		cb_DST_A3:long_name = "cb_DST_A3 in column" ;
		cb_DST_A3:cell_methods = "time: mean" ;
	int cb_DST_A3_nacs ;
	double cb_DST_A3_OCW(lat, lon) ;
		cb_DST_A3_OCW:units = "kg/m2" ;
		cb_DST_A3_OCW:long_name = "cb_DST_A3_OCW column in cloud water" ;
		cb_DST_A3_OCW:cell_methods = "time: mean" ;
	int cb_DST_A3_OCW_nacs ;
	double cb_DUST(lat, lon) ;
		cb_DUST:units = "kg/m2" ;
		cb_DUST:long_name = "cb_DUST column of aerosol type" ;
		cb_DUST:cell_methods = "time: mean" ;
	int cb_DUST_nacs ;
	double cb_H2O2(lat, lon) ;
		cb_H2O2:units = "kg/m2" ;
		cb_H2O2:long_name = "cb_H2O2 in column" ;
		cb_H2O2:cell_methods = "time: mean" ;
	int cb_H2O2_nacs ;
	double cb_H2SO4(lat, lon) ;
		cb_H2SO4:units = "kg/m2" ;
		cb_H2SO4:long_name = "cb_H2SO4 in column" ;
		cb_H2SO4:cell_methods = "time: mean" ;
	int cb_H2SO4_nacs ;
	double cb_OM(lat, lon) ;
		cb_OM:units = "kg/m2" ;
		cb_OM:long_name = "cb_OM column of aerosol type" ;
		cb_OM:cell_methods = "time: mean" ;
	int cb_OM_nacs ;
	double cb_OM_AC(lat, lon) ;
		cb_OM_AC:units = "kg/m2" ;
		cb_OM_AC:long_name = "cb_OM_AC in column" ;
		cb_OM_AC:cell_methods = "time: mean" ;
	int cb_OM_AC_nacs ;
	double cb_OM_AC_OCW(lat, lon) ;
		cb_OM_AC_OCW:units = "kg/m2" ;
		cb_OM_AC_OCW:long_name = "cb_OM_AC_OCW column in cloud water" ;
		cb_OM_AC_OCW:cell_methods = "time: mean" ;
	int cb_OM_AC_OCW_nacs ;
	double cb_OM_AI(lat, lon) ;
		cb_OM_AI:units = "kg/m2" ;
		cb_OM_AI:long_name = "cb_OM_AI in column" ;
		cb_OM_AI:cell_methods = "time: mean" ;
	int cb_OM_AI_nacs ;
	double cb_OM_AI_OCW(lat, lon) ;
		cb_OM_AI_OCW:units = "kg/m2" ;
		cb_OM_AI_OCW:long_name = "cb_OM_AI_OCW column in cloud water" ;
		cb_OM_AI_OCW:cell_methods = "time: mean" ;
	int cb_OM_AI_OCW_nacs ;
	double cb_OM_NI(lat, lon) ;
		cb_OM_NI:units = "kg/m2" ;
		cb_OM_NI:long_name = "cb_OM_NI in column" ;
		cb_OM_NI:cell_methods = "time: mean" ;
	int cb_OM_NI_nacs ;
	double cb_OM_NI_OCW(lat, lon) ;
		cb_OM_NI_OCW:units = "kg/m2" ;
		cb_OM_NI_OCW:long_name = "cb_OM_NI_OCW column in cloud water" ;
		cb_OM_NI_OCW:cell_methods = "time: mean" ;
	int cb_OM_NI_OCW_nacs ;
	double cb_SALT(lat, lon) ;
		cb_SALT:units = "kg/m2" ;
		cb_SALT:long_name = "cb_SALT column of aerosol type" ;
		cb_SALT:cell_methods = "time: mean" ;
	int cb_SALT_nacs ;
	double cb_SO2(lat, lon) ;
		cb_SO2:units = "kg/m2" ;
		cb_SO2:long_name = "cb_SO2 in column" ;
		cb_SO2:cell_methods = "time: mean" ;
	int cb_SO2_nacs ;
	double cb_SO4_A1(lat, lon) ;
		cb_SO4_A1:units = "kg/m2" ;
		cb_SO4_A1:long_name = "cb_SO4_A1 in column" ;
		cb_SO4_A1:cell_methods = "time: mean" ;
	int cb_SO4_A1_nacs ;
	double cb_SO4_A1_OCW(lat, lon) ;
		cb_SO4_A1_OCW:units = "kg/m2" ;
		cb_SO4_A1_OCW:long_name = "cb_SO4_A1_OCW column in cloud water" ;
		cb_SO4_A1_OCW:cell_methods = "time: mean" ;
	int cb_SO4_A1_OCW_nacs ;
	double cb_SO4_A2(lat, lon) ;
		cb_SO4_A2:units = "kg/m2" ;
		cb_SO4_A2:long_name = "cb_SO4_A2 in column" ;
		cb_SO4_A2:cell_methods = "time: mean" ;
	int cb_SO4_A2_nacs ;
	double cb_SO4_A2_OCW(lat, lon) ;
		cb_SO4_A2_OCW:units = "kg/m2" ;
		cb_SO4_A2_OCW:long_name = "cb_SO4_A2_OCW column in cloud water" ;
		cb_SO4_A2_OCW:cell_methods = "time: mean" ;
	int cb_SO4_A2_OCW_nacs ;
	double cb_SO4_AC(lat, lon) ;
		cb_SO4_AC:units = "kg/m2" ;
		cb_SO4_AC:long_name = "cb_SO4_AC in column" ;
		cb_SO4_AC:cell_methods = "time: mean" ;
	int cb_SO4_AC_nacs ;
	double cb_SO4_AC_OCW(lat, lon) ;
		cb_SO4_AC_OCW:units = "kg/m2" ;
		cb_SO4_AC_OCW:long_name = "cb_SO4_AC_OCW column in cloud water" ;
		cb_SO4_AC_OCW:cell_methods = "time: mean" ;
	int cb_SO4_AC_OCW_nacs ;
	double cb_SO4_NA(lat, lon) ;
		cb_SO4_NA:units = "kg/m2" ;
		cb_SO4_NA:long_name = "cb_SO4_NA in column" ;
		cb_SO4_NA:cell_methods = "time: mean" ;
	int cb_SO4_NA_nacs ;
	double cb_SO4_NA_OCW(lat, lon) ;
		cb_SO4_NA_OCW:units = "kg/m2" ;
		cb_SO4_NA_OCW:long_name = "cb_SO4_NA_OCW column in cloud water" ;
		cb_SO4_NA_OCW:cell_methods = "time: mean" ;
	int cb_SO4_NA_OCW_nacs ;
	double cb_SO4_PR(lat, lon) ;
		cb_SO4_PR:units = "kg/m2" ;
		cb_SO4_PR:long_name = "cb_SO4_PR in column" ;
		cb_SO4_PR:cell_methods = "time: mean" ;
	int cb_SO4_PR_nacs ;
	double cb_SO4_PR_OCW(lat, lon) ;
		cb_SO4_PR_OCW:units = "kg/m2" ;
		cb_SO4_PR_OCW:long_name = "cb_SO4_PR_OCW column in cloud water" ;
		cb_SO4_PR_OCW:cell_methods = "time: mean" ;
	int cb_SO4_PR_OCW_nacs ;
	double cb_SOA_A1(lat, lon) ;
		cb_SOA_A1:units = "kg/m2" ;
		cb_SOA_A1:long_name = "cb_SOA_A1 in column" ;
		cb_SOA_A1:cell_methods = "time: mean" ;
	int cb_SOA_A1_nacs ;
	double cb_SOA_A1_OCW(lat, lon) ;
		cb_SOA_A1_OCW:units = "kg/m2" ;
		cb_SOA_A1_OCW:long_name = "cb_SOA_A1_OCW column in cloud water" ;
		cb_SOA_A1_OCW:cell_methods = "time: mean" ;
	int cb_SOA_A1_OCW_nacs ;
	double cb_SOA_LV(lat, lon) ;
		cb_SOA_LV:units = "kg/m2" ;
		cb_SOA_LV:long_name = "cb_SOA_LV in column" ;
		cb_SOA_LV:cell_methods = "time: mean" ;
	int cb_SOA_LV_nacs ;
	double cb_SOA_NA(lat, lon) ;
		cb_SOA_NA:units = "kg/m2" ;
		cb_SOA_NA:long_name = "cb_SOA_NA in column" ;
		cb_SOA_NA:cell_methods = "time: mean" ;
	int cb_SOA_NA_nacs ;
	double cb_SOA_NA_OCW(lat, lon) ;
		cb_SOA_NA_OCW:units = "kg/m2" ;
		cb_SOA_NA_OCW:long_name = "cb_SOA_NA_OCW column in cloud water" ;
		cb_SOA_NA_OCW:cell_methods = "time: mean" ;
	int cb_SOA_NA_OCW_nacs ;
	double cb_SOA_SV(lat, lon) ;
		cb_SOA_SV:units = "kg/m2" ;
		cb_SOA_SV:long_name = "cb_SOA_SV in column" ;
		cb_SOA_SV:cell_methods = "time: mean" ;
	int cb_SOA_SV_nacs ;
	double cb_SS_A1(lat, lon) ;
		cb_SS_A1:units = "kg/m2" ;
		cb_SS_A1:long_name = "cb_SS_A1 in column" ;
		cb_SS_A1:cell_methods = "time: mean" ;
	int cb_SS_A1_nacs ;
	double cb_SS_A1_OCW(lat, lon) ;
		cb_SS_A1_OCW:units = "kg/m2" ;
		cb_SS_A1_OCW:long_name = "cb_SS_A1_OCW column in cloud water" ;
		cb_SS_A1_OCW:cell_methods = "time: mean" ;
	int cb_SS_A1_OCW_nacs ;
	double cb_SS_A2(lat, lon) ;
		cb_SS_A2:units = "kg/m2" ;
		cb_SS_A2:long_name = "cb_SS_A2 in column" ;
		cb_SS_A2:cell_methods = "time: mean" ;
	int cb_SS_A2_nacs ;
	double cb_SS_A2_OCW(lat, lon) ;
		cb_SS_A2_OCW:units = "kg/m2" ;
		cb_SS_A2_OCW:long_name = "cb_SS_A2_OCW column in cloud water" ;
		cb_SS_A2_OCW:cell_methods = "time: mean" ;
	int cb_SS_A2_OCW_nacs ;
	double cb_SS_A3(lat, lon) ;
		cb_SS_A3:units = "kg/m2" ;
		cb_SS_A3:long_name = "cb_SS_A3 in column" ;
		cb_SS_A3:cell_methods = "time: mean" ;
	int cb_SS_A3_nacs ;
	double cb_SS_A3_OCW(lat, lon) ;
		cb_SS_A3_OCW:units = "kg/m2" ;
		cb_SS_A3_OCW:long_name = "cb_SS_A3_OCW column in cloud water" ;
		cb_SS_A3_OCW:cell_methods = "time: mean" ;
	int cb_SS_A3_OCW_nacs ;
	double cb_SULFATE(lat, lon) ;
		cb_SULFATE:units = "kg/m2" ;
		cb_SULFATE:long_name = "cb_SULFATE column of aerosol type" ;
		cb_SULFATE:cell_methods = "time: mean" ;
	int cb_SULFATE_nacs ;
	double cb_isoprene(lat, lon) ;
		cb_isoprene:units = "kg/m2" ;
		cb_isoprene:long_name = "cb_isoprene in column" ;
		cb_isoprene:cell_methods = "time: mean" ;
	int cb_isoprene_nacs ;
	double cb_monoterp(lat, lon) ;
		cb_monoterp:units = "kg/m2" ;
		cb_monoterp:long_name = "cb_monoterp in column" ;
		cb_monoterp:cell_methods = "time: mean" ;
	int cb_monoterp_nacs ;
	double dU(lev, lat, lon) ;
		dU:mdims = 1 ;
		dU:units = "K" ;
		dU:long_name = "U dyn increm" ;
		dU:cell_methods = "time: mean" ;
	int dU_nacs ;
	double dUa(lev, lat, lon) ;
		dUa:mdims = 1 ;
		dUa:units = "K" ;
		dUa:long_name = "U adv increm" ;
		dUa:cell_methods = "time: mean" ;
	int dUa_nacs ;
	double dUazm(ilev, lat, zlon) ;
		dUazm:mdims = 2 ;
		dUazm:units = "M/S" ;
		dUazm:long_name = "Zonal-Mean U adv increm - defined on ilev" ;
		dUazm:cell_methods = "zlon: mean time: mean" ;
	int dUazm_nacs ;
	double dUf(lev, lat, lon) ;
		dUf:mdims = 1 ;
		dUf:units = "K" ;
		dUf:long_name = "U fixer incr" ;
		dUf:cell_methods = "time: mean" ;
	int dUf_nacs ;
	double dUfzm(ilev, lat, zlon) ;
		dUfzm:mdims = 2 ;
		dUfzm:units = "M/S" ;
		dUfzm:long_name = "Zonal-Mean U fixer incr - defined on ilev" ;
		dUfzm:cell_methods = "zlon: mean time: mean" ;
	int dUfzm_nacs ;
	double dUzm(ilev, lat, zlon) ;
		dUzm:mdims = 2 ;
		dUzm:units = "M/S" ;
		dUzm:long_name = "Zonal-Mean U dyn increm - defined on ilev" ;
		dUzm:cell_methods = "zlon: mean time: mean" ;
	int dUzm_nacs ;
	double dV(lev, lat, lon) ;
		dV:mdims = 1 ;
		dV:units = "K" ;
		dV:long_name = "V dyn increm" ;
		dV:cell_methods = "time: mean" ;
	int dV_nacs ;
	double dVa(lev, lat, lon) ;
		dVa:mdims = 1 ;
		dVa:units = "K" ;
		dVa:long_name = "V adv increm" ;
		dVa:cell_methods = "time: mean" ;
	int dVa_nacs ;
	double dVazm(ilev, lat, zlon) ;
		dVazm:mdims = 2 ;
		dVazm:units = "M/S" ;
		dVazm:long_name = "Zonal-Mean V adv increm - defined on ilev" ;
		dVazm:cell_methods = "zlon: mean time: mean" ;
	int dVazm_nacs ;
	double dVzm(ilev, lat, zlon) ;
		dVzm:mdims = 2 ;
		dVzm:units = "M/S" ;
		dVzm:long_name = "Zonal-Mean V dyn increm - defined on ilev" ;
		dVzm:cell_methods = "zlon: mean time: mean" ;
	int dVzm_nacs ;
	double isoprene(lev, lat, lon) ;
		isoprene:mdims = 1 ;
		isoprene:units = "mol/mol" ;
		isoprene:long_name = "isoprene concentration" ;
		isoprene:cell_methods = "time: mean" ;
	int isoprene_nacs ;
	double isoprene_SRF(lat, lon) ;
		isoprene_SRF:units = "mol/mol" ;
		isoprene_SRF:long_name = "isoprene in bottom layer" ;
		isoprene_SRF:cell_methods = "time: mean" ;
	int isoprene_SRF_nacs ;
	double mmr_BC(lev, lat, lon) ;
		mmr_BC:mdims = 1 ;
		mmr_BC:units = "kg/kg" ;
		mmr_BC:long_name = "mmr_BC mmr of aerosol type" ;
		mmr_BC:cell_methods = "time: mean" ;
	int mmr_BC_nacs ;
	double mmr_DUST(lev, lat, lon) ;
		mmr_DUST:mdims = 1 ;
		mmr_DUST:units = "kg/kg" ;
		mmr_DUST:long_name = "mmr_DUST mmr of aerosol type" ;
		mmr_DUST:cell_methods = "time: mean" ;
	int mmr_DUST_nacs ;
	double mmr_OM(lev, lat, lon) ;
		mmr_OM:mdims = 1 ;
		mmr_OM:units = "kg/kg" ;
		mmr_OM:long_name = "mmr_OM mmr of aerosol type" ;
		mmr_OM:cell_methods = "time: mean" ;
	int mmr_OM_nacs ;
	double mmr_SALT(lev, lat, lon) ;
		mmr_SALT:mdims = 1 ;
		mmr_SALT:units = "kg/kg" ;
		mmr_SALT:long_name = "mmr_SALT mmr of aerosol type" ;
		mmr_SALT:cell_methods = "time: mean" ;
	int mmr_SALT_nacs ;
	double mmr_SULFATE(lev, lat, lon) ;
		mmr_SULFATE:mdims = 1 ;
		mmr_SULFATE:units = "kg/kg" ;
		mmr_SULFATE:long_name = "mmr_SULFATE mmr of aerosol type" ;
		mmr_SULFATE:cell_methods = "time: mean" ;
	int mmr_SULFATE_nacs ;
	double monoterp(lev, lat, lon) ;
		monoterp:mdims = 1 ;
		monoterp:units = "mol/mol" ;
		monoterp:long_name = "monoterp concentration" ;
		monoterp:cell_methods = "time: mean" ;
	int monoterp_nacs ;
	double monoterp_SRF(lat, lon) ;
		monoterp_SRF:units = "mol/mol" ;
		monoterp_SRF:long_name = "monoterp in bottom layer" ;
		monoterp_SRF:cell_methods = "time: mean" ;
	int monoterp_SRF_nacs ;

// global attributes:
		:Conventions = "CF-1.0" ;
		:source = "CAM" ;
		:case = "newnoresm_precip3" ;
		:logname = "jonahks" ;
		:host = "" ;
		:initial_file = "/cluster/shared/noresm/inputdata/atm/cam/inic/fv/cami-mam3_0000-01-01_1.9x2.5_L32_c150407.nc" ;
		:topography_file = "/cluster/shared/noresm/inputdata/atm/cam/topo/fv_1.9x2.5_nc3000_Nsw084_Nrs016_Co120_Fi001_ZR_061116.nc" ;
		:model_doi_url = "https://doi.org/10.5065/D67H1H0V" ;
		:time_period_freq = "month_1" ;
}
netcdf newnoresm_precip3.cam.rh0.0001-01-06-00000 {
dimensions:
	lat = 96 ;
	zlon = 1 ;
	nbnd = 2 ;
	lon = 144 ;
	time = UNLIMITED ; // (1 currently)
	chars = 8 ;
	lev = 32 ;
	ilev = 33 ;
	isotherms_mpc = 9 ;
	slfbins = 11 ;
	mdimslen = 16 ;
	num_mdims = 4 ;
variables:
	double lat(lat) ;
		lat:_FillValue = -900. ;
		lat:long_name = "latitude" ;
		lat:units = "degrees_north" ;
	double zlon(zlon) ;
		zlon:_FillValue = -900. ;
		zlon:long_name = "longitude" ;
		zlon:units = "degrees_east" ;
		zlon:bounds = "zlon_bnds" ;
	double zlon_bnds(zlon, nbnd) ;
		zlon_bnds:long_name = "zlon bounds" ;
		zlon_bnds:units = "degrees_east" ;
	double gw(lat) ;
		gw:_FillValue = -900. ;
		gw:long_name = "latitude weights" ;
	double lon(lon) ;
		lon:_FillValue = -900. ;
		lon:long_name = "longitude" ;
		lon:units = "degrees_east" ;
	char mdimnames(num_mdims, mdimslen) ;
		mdimnames:long_name = "mdim dimension names" ;
	double time(time) ;
		time:long_name = "time" ;
		time:units = "days since 0001-01-01 00:00:00" ;
		time:calendar = "noleap" ;
		time:bounds = "time_bnds" ;
	int date(time) ;
		date:long_name = "current date (YYYYMMDD)" ;
	int datesec(time) ;
		datesec:long_name = "current seconds of current date" ;
	double time_bnds(time, nbnd) ;
		time_bnds:long_name = "time interval endpoints" ;
	char date_written(time, chars) ;
	char time_written(time, chars) ;
	int ndbase ;
		ndbase:long_name = "base day" ;
	int nsbase ;
		nsbase:long_name = "seconds of base day" ;
	int nbdate ;
		nbdate:long_name = "base date (YYYYMMDD)" ;
	int nbsec ;
		nbsec:long_name = "seconds of base date" ;
	int mdt ;
		mdt:long_name = "timestep" ;
		mdt:units = "s" ;
	int ndcur(time) ;
		ndcur:long_name = "current day (from base day)" ;
	int nscur(time) ;
		nscur:long_name = "current seconds of current day" ;
	double co2vmr(time) ;
		co2vmr:long_name = "co2 volume mixing ratio" ;
	double ch4vmr(time) ;
		ch4vmr:long_name = "ch4 volume mixing ratio" ;
	double n2ovmr(time) ;
		n2ovmr:long_name = "n2o volume mixing ratio" ;
	double f11vmr(time) ;
		f11vmr:long_name = "f11 volume mixing ratio" ;
	double f12vmr(time) ;
		f12vmr:long_name = "f12 volume mixing ratio" ;
	double sol_tsi(time) ;
		sol_tsi:long_name = "total solar irradiance" ;
		sol_tsi:units = "W/m2" ;
	int nsteph(time) ;
		nsteph:long_name = "current timestep" ;
	double ABSVIS(lat, lon) ;
		ABSVIS:units = "unitless" ;
		ABSVIS:long_name = "Aerosol absorptive optical depth at 0.442-0.625um" ;
		ABSVIS:cell_methods = "time: mean" ;
	int ABSVIS_nacs ;
	double ABSVVOLC(lat, lon) ;
		ABSVVOLC:units = "unitless" ;
		ABSVVOLC:long_name = "CMIP6 volcanic aerosol absorptive optical depth at 0.442-0.625um" ;
		ABSVVOLC:cell_methods = "time: mean" ;
	int ABSVVOLC_nacs ;
	double ACTNI(lat, lon) ;
		ACTNI:units = "m-3" ;
		ACTNI:long_name = "Average Cloud Top ice number" ;
		ACTNI:cell_methods = "time: mean" ;
	int ACTNI_nacs ;
	double ACTNL(lat, lon) ;
		ACTNL:units = "m-3" ;
		ACTNL:long_name = "Average Cloud Top droplet number" ;
		ACTNL:cell_methods = "time: mean" ;
	int ACTNL_nacs ;
	double ACTNL_B(lat, lon) ;
		ACTNL_B:units = "m-3" ;
		ACTNL_B:long_name = "Average Cloud Top   droplet number (Bennartz)" ;
		ACTNL_B:cell_methods = "time: mean" ;
	int ACTNL_B_nacs ;
	double ACTREI(lat, lon) ;
		ACTREI:units = "Micron" ;
		ACTREI:long_name = "Average Cloud Top ice effective radius" ;
		ACTREI:cell_methods = "time: mean" ;
	int ACTREI_nacs ;
	double ACTREL(lat, lon) ;
		ACTREL:units = "Micron" ;
		ACTREL:long_name = "Average Cloud Top droplet effective radius" ;
		ACTREL:cell_methods = "time: mean" ;
	int ACTREL_nacs ;
	double ADRAIN(lev, lat, lon) ;
		ADRAIN:mdims = 1 ;
		ADRAIN:units = "Micron" ;
		ADRAIN:long_name = "Average rain effective Diameter" ;
		ADRAIN:cell_methods = "time: mean" ;
	int ADRAIN_nacs ;
	double ADSNOW(lev, lat, lon) ;
		ADSNOW:mdims = 1 ;
		ADSNOW:units = "Micron" ;
		ADSNOW:long_name = "Average snow effective Diameter" ;
		ADSNOW:cell_methods = "time: mean" ;
	int ADSNOW_nacs ;
	double AEROD_v(lat, lon) ;
		AEROD_v:_FillValue = 1.e+36 ;
		AEROD_v:missing_value = 1.e+36 ;
		AEROD_v:units = "1" ;
		AEROD_v:long_name = "Total Aerosol Optical Depth in visible band" ;
		AEROD_v:cell_methods = "time: mean" ;
	int AEROD_v_nacs(lat, lon) ;
	double ANRAIN(lev, lat, lon) ;
		ANRAIN:mdims = 1 ;
		ANRAIN:units = "m-3" ;
		ANRAIN:long_name = "Average rain number conc" ;
		ANRAIN:cell_methods = "time: mean" ;
	int ANRAIN_nacs ;
	double ANSNOW(lev, lat, lon) ;
		ANSNOW:mdims = 1 ;
		ANSNOW:units = "m-3" ;
		ANSNOW:long_name = "Average snow number conc" ;
		ANSNOW:cell_methods = "time: mean" ;
	int ANSNOW_nacs ;
	double AODVVOLC(lat, lon) ;
		AODVVOLC:units = "unitless" ;
		AODVVOLC:long_name = "CMIP6 volcanic aerosol optical depth at 0.442-0.625um" ;
		AODVVOLC:cell_methods = "time: mean" ;
	int AODVVOLC_nacs ;
	double AOD_VIS(lat, lon) ;
		AOD_VIS:units = "unitless" ;
		AOD_VIS:long_name = "Aerosol optical depth at 0.442-0.625um" ;
		AOD_VIS:cell_methods = "time: mean" ;
	int AOD_VIS_nacs ;
	double AQRAIN(lev, lat, lon) ;
		AQRAIN:mdims = 1 ;
		AQRAIN:units = "kg/kg" ;
		AQRAIN:long_name = "Average rain mixing ratio" ;
		AQRAIN:cell_methods = "time: mean" ;
	int AQRAIN_nacs ;
	double AQSNOW(lev, lat, lon) ;
		AQSNOW:mdims = 1 ;
		AQSNOW:units = "kg/kg" ;
		AQSNOW:long_name = "Average snow mixing ratio" ;
		AQSNOW:cell_methods = "time: mean" ;
	int AQSNOW_nacs ;
	double AREI(lev, lat, lon) ;
		AREI:mdims = 1 ;
		AREI:units = "Micron" ;
		AREI:long_name = "Average ice effective radius" ;
		AREI:cell_methods = "time: mean" ;
	int AREI_nacs ;
	double AREL(lev, lat, lon) ;
		AREL:mdims = 1 ;
		AREL:units = "Micron" ;
		AREL:long_name = "Average droplet effective radius" ;
		AREL:cell_methods = "time: mean" ;
	int AREL_nacs ;
	double ASYMMVIS(lev, lat, lon) ;
		ASYMMVIS:mdims = 1 ;
		ASYMMVIS:units = "unitless" ;
		ASYMMVIS:long_name = "Aerosol assymetry factor in visible wavelength band" ;
		ASYMMVIS:cell_methods = "time: mean" ;
	int ASYMMVIS_nacs ;
	double AWNC(lev, lat, lon) ;
		AWNC:mdims = 1 ;
		AWNC:units = "m-3" ;
		AWNC:long_name = "Average cloud water number conc" ;
		AWNC:cell_methods = "time: mean" ;
	int AWNC_nacs ;
	double AWNI(lev, lat, lon) ;
		AWNI:mdims = 1 ;
		AWNI:units = "m-3" ;
		AWNI:long_name = "Average cloud ice number conc" ;
		AWNI:cell_methods = "time: mean" ;
	int AWNI_nacs ;
	double BC_A(lev, lat, lon) ;
		BC_A:mdims = 1 ;
		BC_A:units = "kg/kg" ;
		BC_A:long_name = "BC_A concentration" ;
		BC_A:cell_methods = "time: mean" ;
	int BC_A_nacs ;
	double BC_AC(lev, lat, lon) ;
		BC_AC:mdims = 1 ;
		BC_AC:units = "kg/kg" ;
		BC_AC:long_name = "BC_AC concentration" ;
		BC_AC:cell_methods = "time: mean" ;
	int BC_AC_nacs ;
	double BC_AC_OCW(lev, lat, lon) ;
		BC_AC_OCW:mdims = 1 ;
		BC_AC_OCW:units = "kg/kg" ;
		BC_AC_OCW:long_name = "BC_AC_OCW in cloud water" ;
		BC_AC_OCW:cell_methods = "time: mean" ;
	int BC_AC_OCW_nacs ;
	double BC_AC_SRF(lat, lon) ;
		BC_AC_SRF:units = "kg/kg" ;
		BC_AC_SRF:long_name = "BC_AC in bottom layer" ;
		BC_AC_SRF:cell_methods = "time: mean" ;
	int BC_AC_SRF_nacs ;
	double BC_AI(lev, lat, lon) ;
		BC_AI:mdims = 1 ;
		BC_AI:units = "kg/kg" ;
		BC_AI:long_name = "BC_AI concentration" ;
		BC_AI:cell_methods = "time: mean" ;
	int BC_AI_nacs ;
	double BC_AI_OCW(lev, lat, lon) ;
		BC_AI_OCW:mdims = 1 ;
		BC_AI_OCW:units = "kg/kg" ;
		BC_AI_OCW:long_name = "BC_AI_OCW in cloud water" ;
		BC_AI_OCW:cell_methods = "time: mean" ;
	int BC_AI_OCW_nacs ;
	double BC_AI_SRF(lat, lon) ;
		BC_AI_SRF:units = "kg/kg" ;
		BC_AI_SRF:long_name = "BC_AI in bottom layer" ;
		BC_AI_SRF:cell_methods = "time: mean" ;
	int BC_AI_SRF_nacs ;
	double BC_AX(lev, lat, lon) ;
		BC_AX:mdims = 1 ;
		BC_AX:units = "kg/kg" ;
		BC_AX:long_name = "BC_AX concentration" ;
		BC_AX:cell_methods = "time: mean" ;
	int BC_AX_nacs ;
	double BC_AX_CLXF(lat, lon) ;
		BC_AX_CLXF:units = "molec/cm2/s" ;
		BC_AX_CLXF:long_name = "vertically integrated external forcing for BC_AX" ;
		BC_AX_CLXF:cell_methods = "time: mean" ;
	int BC_AX_CLXF_nacs ;
	double BC_AX_CMXF(lat, lon) ;
		BC_AX_CMXF:units = "kg/m2/s" ;
		BC_AX_CMXF:long_name = "vertically integrated external forcing for BC_AX" ;
		BC_AX_CMXF:cell_methods = "time: mean" ;
	int BC_AX_CMXF_nacs ;
	double BC_AX_SRF(lat, lon) ;
		BC_AX_SRF:units = "kg/kg" ;
		BC_AX_SRF:long_name = "BC_AX in bottom layer" ;
		BC_AX_SRF:cell_methods = "time: mean" ;
	int BC_AX_SRF_nacs ;
	double BC_A_OCW(lev, lat, lon) ;
		BC_A_OCW:mdims = 1 ;
		BC_A_OCW:units = "kg/kg" ;
		BC_A_OCW:long_name = "BC_A_OCW in cloud water" ;
		BC_A_OCW:cell_methods = "time: mean" ;
	int BC_A_OCW_nacs ;
	double BC_A_SRF(lat, lon) ;
		BC_A_SRF:units = "kg/kg" ;
		BC_A_SRF:long_name = "BC_A in bottom layer" ;
		BC_A_SRF:cell_methods = "time: mean" ;
	int BC_A_SRF_nacs ;
	double BC_N(lev, lat, lon) ;
		BC_N:mdims = 1 ;
		BC_N:units = "kg/kg" ;
		BC_N:long_name = "BC_N concentration" ;
		BC_N:cell_methods = "time: mean" ;
	int BC_N_nacs ;
	double BC_NI(lev, lat, lon) ;
		BC_NI:mdims = 1 ;
		BC_NI:units = "kg/kg" ;
		BC_NI:long_name = "BC_NI concentration" ;
		BC_NI:cell_methods = "time: mean" ;
	int BC_NI_nacs ;
	double BC_NI_CLXF(lat, lon) ;
		BC_NI_CLXF:units = "molec/cm2/s" ;
		BC_NI_CLXF:long_name = "vertically integrated external forcing for BC_NI" ;
		BC_NI_CLXF:cell_methods = "time: mean" ;
	int BC_NI_CLXF_nacs ;
	double BC_NI_CMXF(lat, lon) ;
		BC_NI_CMXF:units = "kg/m2/s" ;
		BC_NI_CMXF:long_name = "vertically integrated external forcing for BC_NI" ;
		BC_NI_CMXF:cell_methods = "time: mean" ;
	int BC_NI_CMXF_nacs ;
	double BC_NI_OCW(lev, lat, lon) ;
		BC_NI_OCW:mdims = 1 ;
		BC_NI_OCW:units = "kg/kg" ;
		BC_NI_OCW:long_name = "BC_NI_OCW in cloud water" ;
		BC_NI_OCW:cell_methods = "time: mean" ;
	int BC_NI_OCW_nacs ;
	double BC_NI_SRF(lat, lon) ;
		BC_NI_SRF:units = "kg/kg" ;
		BC_NI_SRF:long_name = "BC_NI in bottom layer" ;
		BC_NI_SRF:cell_methods = "time: mean" ;
	int BC_NI_SRF_nacs ;
	double BC_N_CLXF(lat, lon) ;
		BC_N_CLXF:units = "molec/cm2/s" ;
		BC_N_CLXF:long_name = "vertically integrated external forcing for BC_N" ;
		BC_N_CLXF:cell_methods = "time: mean" ;
	int BC_N_CLXF_nacs ;
	double BC_N_CMXF(lat, lon) ;
		BC_N_CMXF:units = "kg/m2/s" ;
		BC_N_CMXF:long_name = "vertically integrated external forcing for BC_N" ;
		BC_N_CMXF:cell_methods = "time: mean" ;
	int BC_N_CMXF_nacs ;
	double BC_N_OCW(lev, lat, lon) ;
		BC_N_OCW:mdims = 1 ;
		BC_N_OCW:units = "kg/kg" ;
		BC_N_OCW:long_name = "BC_N_OCW in cloud water" ;
		BC_N_OCW:cell_methods = "time: mean" ;
	int BC_N_OCW_nacs ;
	double BC_N_SRF(lat, lon) ;
		BC_N_SRF:units = "kg/kg" ;
		BC_N_SRF:long_name = "BC_N in bottom layer" ;
		BC_N_SRF:cell_methods = "time: mean" ;
	int BC_N_SRF_nacs ;
	double BERGOXCLD_ISOTM(isotherms_mpc, lat, lon) ;
		BERGOXCLD_ISOTM:mdims = 3 ;
		BERGOXCLD_ISOTM:long_name = "Mean BERGO near isotherm * CLD_ISOTM (discard below thick cloud)" ;
		BERGOXCLD_ISOTM:cell_methods = "time: mean" ;
	int BERGOXCLD_ISOTM_nacs ;
	double BERGOXCLD_ISOTM_NONSIM(isotherms_mpc, lat, lon) ;
		BERGOXCLD_ISOTM_NONSIM:mdims = 3 ;
		BERGOXCLD_ISOTM_NONSIM:long_name = "Mean BERGO near isotherm * CLD_ISOTM_NONSIM" ;
		BERGOXCLD_ISOTM_NONSIM:cell_methods = "time: mean" ;
	int BERGOXCLD_ISOTM_NONSIM_nacs ;
	double BERGSOXCLD_ISOTM(isotherms_mpc, lat, lon) ;
		BERGSOXCLD_ISOTM:mdims = 3 ;
		BERGSOXCLD_ISOTM:long_name = "Mean BERGSO near isotherm * CLD_ISOTM (discard below thick cloud)" ;
		BERGSOXCLD_ISOTM:cell_methods = "time: mean" ;
	int BERGSOXCLD_ISOTM_nacs ;
	double BERGSOXCLD_ISOTM_NONSIM(isotherms_mpc, lat, lon) ;
		BERGSOXCLD_ISOTM_NONSIM:mdims = 3 ;
		BERGSOXCLD_ISOTM_NONSIM:long_name = "Mean BERGSO near isotherm * CLD_ISOTM_NONSIM" ;
		BERGSOXCLD_ISOTM_NONSIM:cell_methods = "time: mean" ;
	int BERGSOXCLD_ISOTM_NONSIM_nacs ;
	double BVISVOLC(lev, lat, lon) ;
		BVISVOLC:mdims = 1 ;
		BVISVOLC:units = "1/km" ;
		BVISVOLC:long_name = "CMIP6 volcanic aerosol extinction at 0.442-0.625um" ;
		BVISVOLC:cell_methods = "time: mean" ;
	int BVISVOLC_nacs ;
	double CABSVIS(lat, lon) ;
		CABSVIS:units = "unitless" ;
		CABSVIS:long_name = "Clear air aerosol absorptive optical depth" ;
		CABSVIS:cell_methods = "time: mean" ;
	int CABSVIS_nacs ;
	double CAODVIS(lat, lon) ;
		CAODVIS:units = "unitless" ;
		CAODVIS:long_name = "Clear air aerosol optical depth" ;
		CAODVIS:cell_methods = "time: mean" ;
	int CAODVIS_nacs ;
	double CCN_B(lat, lon) ;
		CCN_B:units = "m-3" ;
		CCN_B:long_name = "Average Cloud Top liquid CCN (Bennartz)" ;
		CCN_B:cell_methods = "time: mean" ;
	int CCN_B_nacs ;
	double CDNUMC(lat, lon) ;
		CDNUMC:units = "1/m2" ;
		CDNUMC:long_name = "Vertically-integrated droplet concentration" ;
		CDNUMC:cell_methods = "time: mean" ;
	int CDNUMC_nacs ;
	double CLDFREE(lat, lon) ;
		CLDFREE:units = "unitless" ;
		CLDFREE:long_name = "Cloud free fraction wrt CAODVIS and CABSVIS" ;
		CLDFREE:cell_methods = "time: mean" ;
	int CLDFREE_nacs ;
	double CLDHGH(lat, lon) ;
		CLDHGH:units = "fraction" ;
		CLDHGH:long_name = "Vertically-integrated high cloud" ;
		CLDHGH:cell_methods = "time: mean" ;
	int CLDHGH_nacs ;
	double CLDICE(lev, lat, lon) ;
		CLDICE:mdims = 1 ;
		CLDICE:units = "kg/kg" ;
		CLDICE:long_name = "Grid box averaged cloud ice amount" ;
		CLDICE:cell_methods = "time: mean" ;
	int CLDICE_nacs ;
	double CLDLIQ(lev, lat, lon) ;
		CLDLIQ:mdims = 1 ;
		CLDLIQ:units = "kg/kg" ;
		CLDLIQ:long_name = "Grid box averaged cloud liquid amount" ;
		CLDLIQ:cell_methods = "time: mean" ;
	int CLDLIQ_nacs ;
	double CLDLOW(lat, lon) ;
		CLDLOW:units = "fraction" ;
		CLDLOW:long_name = "Vertically-integrated low cloud" ;
		CLDLOW:cell_methods = "time: mean" ;
	int CLDLOW_nacs ;
	double CLDMED(lat, lon) ;
		CLDMED:units = "fraction" ;
		CLDMED:long_name = "Vertically-integrated mid-level cloud" ;
		CLDMED:cell_methods = "time: mean" ;
	int CLDMED_nacs ;
	double CLDTAU(lev, lat, lon) ;
		CLDTAU:mdims = 1 ;
		CLDTAU:long_name = "Cloud optical thickness" ;
		CLDTAU:cell_methods = "time: mean" ;
	int CLDTAU_nacs ;
	double CLDTOT(lat, lon) ;
		CLDTOT:units = "fraction" ;
		CLDTOT:long_name = "Vertically-integrated total cloud" ;
		CLDTOT:cell_methods = "time: mean" ;
	int CLDTOT_nacs ;
	double CLD_ISOTM(isotherms_mpc, lat, lon) ;
		CLD_ISOTM:mdims = 3 ;
		CLD_ISOTM:long_name = "Total cloud fraction near isotherm (discard below thick cloud)" ;
		CLD_ISOTM:cell_methods = "time: mean" ;
	int CLD_ISOTM_nacs ;
	double CLD_ISOTM_NONSIM(isotherms_mpc, lat, lon) ;
		CLD_ISOTM_NONSIM:mdims = 3 ;
		CLD_ISOTM_NONSIM:long_name = "Total cloud fraction near isotherm" ;
		CLD_ISOTM_NONSIM:cell_methods = "time: mean" ;
	int CLD_ISOTM_NONSIM_nacs ;
	double CLD_ISOTM_SLF(slfbins, isotherms_mpc, lat, lon) ;
		CLD_ISOTM_SLF:mdims = 3, 4 ;
		CLD_ISOTM_SLF:long_name = "Total cloud fraction in SLF bin near isotherm (discard below thick cloud)" ;
		CLD_ISOTM_SLF:cell_methods = "time: mean" ;
	int CLD_ISOTM_SLF_nacs ;
	double CLD_ISOTM_SLF_NONSIM(slfbins, isotherms_mpc, lat, lon) ;
		CLD_ISOTM_SLF_NONSIM:mdims = 3, 4 ;
		CLD_ISOTM_SLF_NONSIM:long_name = "Total cloud fraction in SLF bin near isotherm" ;
		CLD_ISOTM_SLF_NONSIM:cell_methods = "time: mean" ;
	int CLD_ISOTM_SLF_NONSIM_nacs ;
	double CLD_SLF(slfbins, lat, lon) ;
		CLD_SLF:mdims = 4 ;
		CLD_SLF:long_name = "Total cloud fraction in SLF bin (discard below thick cloud)" ;
		CLD_SLF:cell_methods = "time: mean" ;
	int CLD_SLF_nacs ;
	double CLD_SLF_NONSIM(slfbins, lat, lon) ;
		CLD_SLF_NONSIM:mdims = 4 ;
		CLD_SLF_NONSIM:long_name = "Total cloud fraction in SLF bin" ;
		CLD_SLF_NONSIM:cell_methods = "time: mean" ;
	int CLD_SLF_NONSIM_nacs ;
	double CLOUD(lev, lat, lon) ;
		CLOUD:mdims = 1 ;
		CLOUD:units = "fraction" ;
		CLOUD:long_name = "Cloud fraction" ;
		CLOUD:cell_methods = "time: mean" ;
	int CLOUD_nacs ;
	double CLOUDCOVER_CLUBB(ilev, lat, lon) ;
		CLOUDCOVER_CLUBB:mdims = 2 ;
		CLOUDCOVER_CLUBB:units = "fraction" ;
		CLOUDCOVER_CLUBB:long_name = "Cloud Cover" ;
		CLOUDCOVER_CLUBB:cell_methods = "time: mean" ;
	int CLOUDCOVER_CLUBB_nacs ;
	double CLOUDFRAC_CLUBB(lev, lat, lon) ;
		CLOUDFRAC_CLUBB:mdims = 1 ;
		CLOUDFRAC_CLUBB:units = "fraction" ;
		CLOUDFRAC_CLUBB:long_name = "Cloud Fraction" ;
		CLOUDFRAC_CLUBB:cell_methods = "time: mean" ;
	int CLOUDFRAC_CLUBB_nacs ;
	double CONCLD(lev, lat, lon) ;
		CONCLD:mdims = 1 ;
		CONCLD:units = "fraction" ;
		CONCLD:long_name = "Convective cloud cover" ;
		CONCLD:cell_methods = "time: mean" ;
	int CONCLD_nacs ;
	double CT_CLD_ISOTM(isotherms_mpc, lat, lon) ;
		CT_CLD_ISOTM:mdims = 3 ;
		CT_CLD_ISOTM:long_name = "Total cloudtop cloud fraction near isotherm (discard below thick cloud)" ;
		CT_CLD_ISOTM:cell_methods = "time: mean" ;
	int CT_CLD_ISOTM_nacs ;
	double CT_SLFXCLD_ISOTM(isotherms_mpc, lat, lon) ;
		CT_SLFXCLD_ISOTM:mdims = 3 ;
		CT_SLFXCLD_ISOTM:long_name = "Mean cloudtop supercooled liquid fraction near isotherm * CLD_ISOTM (discard below thick cloud)" ;
		CT_SLFXCLD_ISOTM:cell_methods = "time: mean" ;
	int CT_SLFXCLD_ISOTM_nacs ;
	double DAYFOC(lat, lon) ;
		DAYFOC:units = "unitless" ;
		DAYFOC:long_name = "Daylight fraction" ;
		DAYFOC:cell_methods = "time: mean" ;
	int DAYFOC_nacs ;
	double DCQ(lev, lat, lon) ;
		DCQ:mdims = 1 ;
		DCQ:units = "kg/kg/s" ;
		DCQ:long_name = "Q tendency due to moist processes" ;
		DCQ:cell_methods = "time: mean" ;
	int DCQ_nacs ;
	double DF_H2O2(lat, lon) ;
		DF_H2O2:units = "kg/m2/s" ;
		DF_H2O2:long_name = "dry deposition flux" ;
		DF_H2O2:cell_methods = "time: mean" ;
	int DF_H2O2_nacs ;
	double DF_H2SO4(lat, lon) ;
		DF_H2SO4:units = "kg/m2/s" ;
		DF_H2SO4:long_name = "dry deposition flux" ;
		DF_H2SO4:cell_methods = "time: mean" ;
	int DF_H2SO4_nacs ;
	double DF_SO2(lat, lon) ;
		DF_SO2:units = "kg/m2/s" ;
		DF_SO2:long_name = "dry deposition flux" ;
		DF_SO2:cell_methods = "time: mean" ;
	int DF_SO2_nacs ;
	double DMS(lev, lat, lon) ;
		DMS:mdims = 1 ;
		DMS:units = "mol/mol" ;
		DMS:long_name = "DMS concentration" ;
		DMS:cell_methods = "time: mean" ;
	int DMS_nacs ;
	double DMS_SRF(lat, lon) ;
		DMS_SRF:units = "mol/mol" ;
		DMS_SRF:long_name = "DMS in bottom layer" ;
		DMS_SRF:cell_methods = "time: mean" ;
	int DMS_SRF_nacs ;
	double DST_A2(lev, lat, lon) ;
		DST_A2:mdims = 1 ;
		DST_A2:units = "kg/kg" ;
		DST_A2:long_name = "DST_A2 concentration" ;
		DST_A2:cell_methods = "time: mean" ;
	int DST_A2_nacs ;
	double DST_A2_OCW(lev, lat, lon) ;
		DST_A2_OCW:mdims = 1 ;
		DST_A2_OCW:units = "kg/kg" ;
		DST_A2_OCW:long_name = "DST_A2_OCW in cloud water" ;
		DST_A2_OCW:cell_methods = "time: mean" ;
	int DST_A2_OCW_nacs ;
	double DST_A2_SRF(lat, lon) ;
		DST_A2_SRF:units = "kg/kg" ;
		DST_A2_SRF:long_name = "DST_A2 in bottom layer" ;
		DST_A2_SRF:cell_methods = "time: mean" ;
	int DST_A2_SRF_nacs ;
	double DST_A3(lev, lat, lon) ;
		DST_A3:mdims = 1 ;
		DST_A3:units = "kg/kg" ;
		DST_A3:long_name = "DST_A3 concentration" ;
		DST_A3:cell_methods = "time: mean" ;
	int DST_A3_nacs ;
	double DST_A3_OCW(lev, lat, lon) ;
		DST_A3_OCW:mdims = 1 ;
		DST_A3_OCW:units = "kg/kg" ;
		DST_A3_OCW:long_name = "DST_A3_OCW in cloud water" ;
		DST_A3_OCW:cell_methods = "time: mean" ;
	int DST_A3_OCW_nacs ;
	double DST_A3_SRF(lat, lon) ;
		DST_A3_SRF:units = "kg/kg" ;
		DST_A3_SRF:long_name = "DST_A3 in bottom layer" ;
		DST_A3_SRF:cell_methods = "time: mean" ;
	int DST_A3_SRF_nacs ;
	double DTCOND(lev, lat, lon) ;
		DTCOND:mdims = 1 ;
		DTCOND:units = "K/s" ;
		DTCOND:long_name = "T tendency - moist processes" ;
		DTCOND:cell_methods = "time: mean" ;
	int DTCOND_nacs ;
	double DTV(lev, lat, lon) ;
		DTV:mdims = 1 ;
		DTV:units = "K/s" ;
		DTV:long_name = "T vertical diffusion" ;
		DTV:cell_methods = "time: mean" ;
	int DTV_nacs ;
	double DTWR_H2O2(lev, lat, lon) ;
		DTWR_H2O2:mdims = 1 ;
		DTWR_H2O2:units = "kg/kg/s" ;
		DTWR_H2O2:long_name = "wet removal Neu scheme tendency" ;
		DTWR_H2O2:cell_methods = "time: mean" ;
	int DTWR_H2O2_nacs ;
	double DTWR_H2SO4(lev, lat, lon) ;
		DTWR_H2SO4:mdims = 1 ;
		DTWR_H2SO4:units = "kg/kg/s" ;
		DTWR_H2SO4:long_name = "wet removal Neu scheme tendency" ;
		DTWR_H2SO4:cell_methods = "time: mean" ;
	int DTWR_H2SO4_nacs ;
	double DTWR_SO2(lev, lat, lon) ;
		DTWR_SO2:mdims = 1 ;
		DTWR_SO2:units = "kg/kg/s" ;
		DTWR_SO2:long_name = "wet removal Neu scheme tendency" ;
		DTWR_SO2:cell_methods = "time: mean" ;
	int DTWR_SO2_nacs ;
	double EXTVIS(lev, lat, lon) ;
		EXTVIS:mdims = 1 ;
		EXTVIS:units = "1/km" ;
		EXTVIS:long_name = "Aerosol extinction" ;
		EXTVIS:cell_methods = "time: mean" ;
	int EXTVIS_nacs ;
	double FCTI(lat, lon) ;
		FCTI:units = "fraction" ;
		FCTI:long_name = "Fractional occurrence of cloud top ice" ;
		FCTI:cell_methods = "time: mean" ;
	int FCTI_nacs ;
	double FCTL(lat, lon) ;
		FCTL:units = "fraction" ;
		FCTL:long_name = "Fractional occurrence of cloud top liquid" ;
		FCTL:cell_methods = "time: mean" ;
	int FCTL_nacs ;
	double FCTL_B(lat, lon) ;
		FCTL_B:units = "fraction" ;
		FCTL_B:long_name = "Fractional occurrence of cloud top liquid (Bennartz)" ;
		FCTL_B:cell_methods = "time: mean" ;
	int FCTL_B_nacs ;
	double FICE(lev, lat, lon) ;
		FICE:mdims = 1 ;
		FICE:units = "fraction" ;
		FICE:long_name = "Fractional ice content within cloud" ;
		FICE:cell_methods = "time: mean" ;
	int FICE_nacs ;
	double FLDS(lat, lon) ;
		FLDS:Sampling_Sequence = "rad_lwsw" ;
		FLDS:units = "W/m2" ;
		FLDS:long_name = "Downwelling longwave flux at surface" ;
		FLDS:cell_methods = "time: mean" ;
	int FLDS_nacs ;
	double FLNS(lat, lon) ;
		FLNS:Sampling_Sequence = "rad_lwsw" ;
		FLNS:units = "W/m2" ;
		FLNS:long_name = "Net longwave flux at surface" ;
		FLNS:cell_methods = "time: mean" ;
	int FLNS_nacs ;
	double FLNSC(lat, lon) ;
		FLNSC:Sampling_Sequence = "rad_lwsw" ;
		FLNSC:units = "W/m2" ;
		FLNSC:long_name = "Clearsky net longwave flux at surface" ;
		FLNSC:cell_methods = "time: mean" ;
	int FLNSC_nacs ;
	double FLNT(lat, lon) ;
		FLNT:Sampling_Sequence = "rad_lwsw" ;
		FLNT:units = "W/m2" ;
		FLNT:long_name = "Net longwave flux at top of model" ;
		FLNT:cell_methods = "time: mean" ;
	int FLNT_nacs ;
	double FLNTC(lat, lon) ;
		FLNTC:Sampling_Sequence = "rad_lwsw" ;
		FLNTC:units = "W/m2" ;
		FLNTC:long_name = "Clearsky net longwave flux at top of model" ;
		FLNTC:cell_methods = "time: mean" ;
	int FLNTC_nacs ;
	double FLNTCLR(lat, lon) ;
		FLNTCLR:Sampling_Sequence = "rad_lwsw" ;
		FLNTCLR:units = "W/m2" ;
		FLNTCLR:long_name = "Clearsky ONLY points net longwave flux at top of model" ;
		FLNTCLR:cell_methods = "time: mean" ;
	int FLNTCLR_nacs ;
	double FLUT(lat, lon) ;
		FLUT:Sampling_Sequence = "rad_lwsw" ;
		FLUT:units = "W/m2" ;
		FLUT:long_name = "Upwelling longwave flux at top of model" ;
		FLUT:cell_methods = "time: mean" ;
	int FLUT_nacs ;
	double FLUTC(lat, lon) ;
		FLUTC:Sampling_Sequence = "rad_lwsw" ;
		FLUTC:units = "W/m2" ;
		FLUTC:long_name = "Clearsky upwelling longwave flux at top of model" ;
		FLUTC:cell_methods = "time: mean" ;
	int FLUTC_nacs ;
	double FREQCLR(lat, lon) ;
		FREQCLR:Sampling_Sequence = "rad_lwsw" ;
		FREQCLR:units = "Frac" ;
		FREQCLR:long_name = "Frequency of Occurrence of Clearsky" ;
		FREQCLR:cell_methods = "time: mean" ;
	int FREQCLR_nacs ;
	double FREQI(lev, lat, lon) ;
		FREQI:mdims = 1 ;
		FREQI:units = "fraction" ;
		FREQI:long_name = "Fractional occurrence of ice" ;
		FREQI:cell_methods = "time: mean" ;
	int FREQI_nacs ;
	double FREQL(lev, lat, lon) ;
		FREQL:mdims = 1 ;
		FREQL:units = "fraction" ;
		FREQL:long_name = "Fractional occurrence of liquid" ;
		FREQL:cell_methods = "time: mean" ;
	int FREQL_nacs ;
	double FREQR(lev, lat, lon) ;
		FREQR:mdims = 1 ;
		FREQR:units = "fraction" ;
		FREQR:long_name = "Fractional occurrence of rain" ;
		FREQR:cell_methods = "time: mean" ;
	int FREQR_nacs ;
	double FREQS(lev, lat, lon) ;
		FREQS:mdims = 1 ;
		FREQS:units = "fraction" ;
		FREQS:long_name = "Fractional occurrence of snow" ;
		FREQS:cell_methods = "time: mean" ;
	int FREQS_nacs ;
	double FSDS(lat, lon) ;
		FSDS:Sampling_Sequence = "rad_lwsw" ;
		FSDS:units = "W/m2" ;
		FSDS:long_name = "Downwelling solar flux at surface" ;
		FSDS:cell_methods = "time: mean" ;
	int FSDS_nacs ;
	double FSDSC(lat, lon) ;
		FSDSC:Sampling_Sequence = "rad_lwsw" ;
		FSDSC:units = "W/m2" ;
		FSDSC:long_name = "Clearsky downwelling solar flux at surface" ;
		FSDSC:cell_methods = "time: mean" ;
	int FSDSC_nacs ;
	double FSNS(lat, lon) ;
		FSNS:Sampling_Sequence = "rad_lwsw" ;
		FSNS:units = "W/m2" ;
		FSNS:long_name = "Net solar flux at surface" ;
		FSNS:cell_methods = "time: mean" ;
	int FSNS_nacs ;
	double FSNSC(lat, lon) ;
		FSNSC:Sampling_Sequence = "rad_lwsw" ;
		FSNSC:units = "W/m2" ;
		FSNSC:long_name = "Clearsky net solar flux at surface" ;
		FSNSC:cell_methods = "time: mean" ;
	int FSNSC_nacs ;
	double FSNT(lat, lon) ;
		FSNT:Sampling_Sequence = "rad_lwsw" ;
		FSNT:units = "W/m2" ;
		FSNT:long_name = "Net solar flux at top of model" ;
		FSNT:cell_methods = "time: mean" ;
	int FSNT_nacs ;
	double FSNTC(lat, lon) ;
		FSNTC:Sampling_Sequence = "rad_lwsw" ;
		FSNTC:units = "W/m2" ;
		FSNTC:long_name = "Clearsky net solar flux at top of model" ;
		FSNTC:cell_methods = "time: mean" ;
	int FSNTC_nacs ;
	double FSNTOA(lat, lon) ;
		FSNTOA:Sampling_Sequence = "rad_lwsw" ;
		FSNTOA:units = "W/m2" ;
		FSNTOA:long_name = "Net solar flux at top of atmosphere" ;
		FSNTOA:cell_methods = "time: mean" ;
	int FSNTOA_nacs ;
	double FSNTOAC(lat, lon) ;
		FSNTOAC:Sampling_Sequence = "rad_lwsw" ;
		FSNTOAC:units = "W/m2" ;
		FSNTOAC:long_name = "Clearsky net solar flux at top of atmosphere" ;
		FSNTOAC:cell_methods = "time: mean" ;
	int FSNTOAC_nacs ;
	double FSUTOA(lat, lon) ;
		FSUTOA:Sampling_Sequence = "rad_lwsw" ;
		FSUTOA:units = "W/m2" ;
		FSUTOA:long_name = "Upwelling solar flux at top of atmosphere" ;
		FSUTOA:cell_methods = "time: mean" ;
	int FSUTOA_nacs ;
	double H2O(lev, lat, lon) ;
		H2O:mdims = 1 ;
		H2O:units = "mol/mol" ;
		H2O:long_name = "water vapor concentration" ;
		H2O:cell_methods = "time: mean" ;
	int H2O_nacs ;
	double H2O2(lev, lat, lon) ;
		H2O2:mdims = 1 ;
		H2O2:units = "mol/mol" ;
		H2O2:long_name = "H2O2 concentration" ;
		H2O2:cell_methods = "time: mean" ;
	int H2O2_nacs ;
	double H2O2_SRF(lat, lon) ;
		H2O2_SRF:units = "mol/mol" ;
		H2O2_SRF:long_name = "H2O2 in bottom layer" ;
		H2O2_SRF:cell_methods = "time: mean" ;
	int H2O2_SRF_nacs ;
	double H2O_CLXF(lat, lon) ;
		H2O_CLXF:units = "molec/cm2/s" ;
		H2O_CLXF:long_name = "vertically integrated external forcing for H2O" ;
		H2O_CLXF:cell_methods = "time: mean" ;
	int H2O_CLXF_nacs ;
	double H2O_CMXF(lat, lon) ;
		H2O_CMXF:units = "kg/m2/s" ;
		H2O_CMXF:long_name = "vertically integrated external forcing for H2O" ;
		H2O_CMXF:cell_methods = "time: mean" ;
	int H2O_CMXF_nacs ;
	double H2O_SRF(lat, lon) ;
		H2O_SRF:units = "mol/mol" ;
		H2O_SRF:long_name = "water vapor in bottom layer" ;
		H2O_SRF:cell_methods = "time: mean" ;
	int H2O_SRF_nacs ;
	double H2SO4(lev, lat, lon) ;
		H2SO4:mdims = 1 ;
		H2SO4:units = "mol/mol" ;
		H2SO4:long_name = "H2SO4 concentration" ;
		H2SO4:cell_methods = "time: mean" ;
	int H2SO4_nacs ;
	double H2SO4_SRF(lat, lon) ;
		H2SO4_SRF:units = "mol/mol" ;
		H2SO4_SRF:long_name = "H2SO4 in bottom layer" ;
		H2SO4_SRF:cell_methods = "time: mean" ;
	int H2SO4_SRF_nacs ;
	double HO2_aft(lev, lat, lon) ;
		HO2_aft:mdims = 1 ;
		HO2_aft:units = "unit" ;
		HO2_aft:long_name = "HO2 invariants after adding diurnal variations" ;
		HO2_aft:cell_methods = "time: mean" ;
	int HO2_aft_nacs ;
	double HO2_bef(lev, lat, lon) ;
		HO2_bef:mdims = 1 ;
		HO2_bef:units = "unit" ;
		HO2_bef:long_name = "HO2 invariants before adding diurnal variations" ;
		HO2_bef:cell_methods = "time: mean" ;
	int HO2_bef_nacs ;
	double ICEFRAC(lat, lon) ;
		ICEFRAC:units = "fraction" ;
		ICEFRAC:long_name = "Fraction of sfc area covered by sea-ice" ;
		ICEFRAC:cell_methods = "time: mean" ;
	int ICEFRAC_nacs ;
	double ICIMR(lev, lat, lon) ;
		ICIMR:mdims = 1 ;
		ICIMR:units = "kg/kg" ;
		ICIMR:long_name = "Prognostic in-cloud ice mixing ratio" ;
		ICIMR:cell_methods = "time: mean" ;
	int ICIMR_nacs ;
	double ICWMR(lev, lat, lon) ;
		ICWMR:mdims = 1 ;
		ICWMR:units = "kg/kg" ;
		ICWMR:long_name = "Prognostic in-cloud water mixing ratio" ;
		ICWMR:cell_methods = "time: mean" ;
	int ICWMR_nacs ;
	double IWC(lev, lat, lon) ;
		IWC:mdims = 1 ;
		IWC:units = "kg/m3" ;
		IWC:long_name = "Grid box average ice water content" ;
		IWC:cell_methods = "time: mean" ;
	int IWC_nacs ;
	double LANDFRAC(lat, lon) ;
		LANDFRAC:units = "fraction" ;
		LANDFRAC:long_name = "Fraction of sfc area covered by land" ;
		LANDFRAC:cell_methods = "time: mean" ;
	int LANDFRAC_nacs ;
	double LHFLX(lat, lon) ;
		LHFLX:units = "W/m2" ;
		LHFLX:long_name = "Surface latent heat flux" ;
		LHFLX:cell_methods = "time: mean" ;
	int LHFLX_nacs ;
	double LWCF(lat, lon) ;
		LWCF:Sampling_Sequence = "rad_lwsw" ;
		LWCF:units = "W/m2" ;
		LWCF:long_name = "Longwave cloud forcing" ;
		LWCF:cell_methods = "time: mean" ;
	int LWCF_nacs ;
	double MEG_isoprene(lat, lon) ;
		MEG_isoprene:units = "kg/m2/sec" ;
		MEG_isoprene:long_name = "isoprene MEGAN emissions flux" ;
		MEG_isoprene:cell_methods = "time: mean" ;
	int MEG_isoprene_nacs ;
	double MEG_monoterp(lat, lon) ;
		MEG_monoterp:units = "kg/m2/sec" ;
		MEG_monoterp:long_name = "monoterp MEGAN emissions flux" ;
		MEG_monoterp:cell_methods = "time: mean" ;
	int MEG_monoterp_nacs ;
	double MG_SADICE(lev, lat, lon) ;
		MG_SADICE:mdims = 1 ;
		MG_SADICE:units = "cm2/cm3" ;
		MG_SADICE:long_name = "MG surface area density ice" ;
		MG_SADICE:cell_methods = "time: mean" ;
	int MG_SADICE_nacs ;
	double MG_SADLIQ(lev, lat, lon) ;
		MG_SADLIQ:mdims = 1 ;
		MG_SADLIQ:units = "cm2/cm3" ;
		MG_SADLIQ:long_name = "MG surface area density liq" ;
		MG_SADLIQ:cell_methods = "time: mean" ;
	int MG_SADLIQ_nacs ;
	double MSKtem(lat, lon) ;
		MSKtem:units = "1" ;
		MSKtem:long_name = "TEM mask" ;
		MSKtem:cell_methods = "time: mean" ;
	int MSKtem_nacs ;
	double NO3_aft(lev, lat, lon) ;
		NO3_aft:mdims = 1 ;
		NO3_aft:units = "unit" ;
		NO3_aft:long_name = "NO3 invariants after adding diurnal variations" ;
		NO3_aft:cell_methods = "time: mean" ;
	int NO3_aft_nacs ;
	double NO3_bef(lev, lat, lon) ;
		NO3_bef:mdims = 1 ;
		NO3_bef:units = "unit" ;
		NO3_bef:long_name = "NO3 invariants before adding diurnal variations" ;
		NO3_bef:cell_methods = "time: mean" ;
	int NO3_bef_nacs ;
	double NUMICE(lev, lat, lon) ;
		NUMICE:mdims = 1 ;
		NUMICE:units = "1/kg" ;
		NUMICE:long_name = "Grid box averaged cloud ice number" ;
		NUMICE:cell_methods = "time: mean" ;
	int NUMICE_nacs ;
	double NUMLIQ(lev, lat, lon) ;
		NUMLIQ:mdims = 1 ;
		NUMLIQ:units = "1/kg" ;
		NUMLIQ:long_name = "Grid box averaged cloud liquid number" ;
		NUMLIQ:cell_methods = "time: mean" ;
	int NUMLIQ_nacs ;
	double NUMRAI(lev, lat, lon) ;
		NUMRAI:mdims = 1 ;
		NUMRAI:units = "1/kg" ;
		NUMRAI:long_name = "Grid box averaged rain number" ;
		NUMRAI:cell_methods = "time: mean" ;
	int NUMRAI_nacs ;
	double NUMSNO(lev, lat, lon) ;
		NUMSNO:mdims = 1 ;
		NUMSNO:units = "1/kg" ;
		NUMSNO:long_name = "Grid box averaged snow number" ;
		NUMSNO:cell_methods = "time: mean" ;
	int NUMSNO_nacs ;
	double N_AER(lev, lat, lon) ;
		N_AER:mdims = 1 ;
		N_AER:units = "unitless" ;
		N_AER:long_name = "Aerosol number concentration" ;
		N_AER:cell_methods = "time: mean" ;
	int N_AER_nacs ;
	double OCNFRAC(lat, lon) ;
		OCNFRAC:units = "fraction" ;
		OCNFRAC:long_name = "Fraction of sfc area covered by ocean" ;
		OCNFRAC:cell_methods = "time: mean" ;
	int OCNFRAC_nacs ;
	double OH_aft(lev, lat, lon) ;
		OH_aft:mdims = 1 ;
		OH_aft:units = "unit" ;
		OH_aft:long_name = "OH invariants after adding diurnal variations" ;
		OH_aft:cell_methods = "time: mean" ;
	int OH_aft_nacs ;
	double OH_bef(lev, lat, lon) ;
		OH_bef:mdims = 1 ;
		OH_bef:units = "unit" ;
		OH_bef:long_name = "OH invariants before adding diurnal variations" ;
		OH_bef:cell_methods = "time: mean" ;
	int OH_bef_nacs ;
	double OMEGA(lev, lat, lon) ;
		OMEGA:mdims = 1 ;
		OMEGA:units = "Pa/s" ;
		OMEGA:long_name = "Vertical velocity (pressure)" ;
		OMEGA:cell_methods = "time: mean" ;
	int OMEGA_nacs ;
	double OMEGAT(lev, lat, lon) ;
		OMEGAT:mdims = 1 ;
		OMEGAT:units = "K Pa/s" ;
		OMEGAT:long_name = "Vertical heat flux" ;
		OMEGAT:cell_methods = "time: mean" ;
	int OMEGAT_nacs ;
	double OM_AC(lev, lat, lon) ;
		OM_AC:mdims = 1 ;
		OM_AC:units = "kg/kg" ;
		OM_AC:long_name = "OM_AC concentration" ;
		OM_AC:cell_methods = "time: mean" ;
	int OM_AC_nacs ;
	double OM_AC_OCW(lev, lat, lon) ;
		OM_AC_OCW:mdims = 1 ;
		OM_AC_OCW:units = "kg/kg" ;
		OM_AC_OCW:long_name = "OM_AC_OCW in cloud water" ;
		OM_AC_OCW:cell_methods = "time: mean" ;
	int OM_AC_OCW_nacs ;
	double OM_AC_SRF(lat, lon) ;
		OM_AC_SRF:units = "kg/kg" ;
		OM_AC_SRF:long_name = "OM_AC in bottom layer" ;
		OM_AC_SRF:cell_methods = "time: mean" ;
	int OM_AC_SRF_nacs ;
	double OM_AI(lev, lat, lon) ;
		OM_AI:mdims = 1 ;
		OM_AI:units = "kg/kg" ;
		OM_AI:long_name = "OM_AI concentration" ;
		OM_AI:cell_methods = "time: mean" ;
	int OM_AI_nacs ;
	double OM_AI_OCW(lev, lat, lon) ;
		OM_AI_OCW:mdims = 1 ;
		OM_AI_OCW:units = "kg/kg" ;
		OM_AI_OCW:long_name = "OM_AI_OCW in cloud water" ;
		OM_AI_OCW:cell_methods = "time: mean" ;
	int OM_AI_OCW_nacs ;
	double OM_AI_SRF(lat, lon) ;
		OM_AI_SRF:units = "kg/kg" ;
		OM_AI_SRF:long_name = "OM_AI in bottom layer" ;
		OM_AI_SRF:cell_methods = "time: mean" ;
	int OM_AI_SRF_nacs ;
	double OM_NI(lev, lat, lon) ;
		OM_NI:mdims = 1 ;
		OM_NI:units = "kg/kg" ;
		OM_NI:long_name = "OM_NI concentration" ;
		OM_NI:cell_methods = "time: mean" ;
	int OM_NI_nacs ;
	double OM_NI_CLXF(lat, lon) ;
		OM_NI_CLXF:units = "molec/cm2/s" ;
		OM_NI_CLXF:long_name = "vertically integrated external forcing for OM_NI" ;
		OM_NI_CLXF:cell_methods = "time: mean" ;
	int OM_NI_CLXF_nacs ;
	double OM_NI_CMXF(lat, lon) ;
		OM_NI_CMXF:units = "kg/m2/s" ;
		OM_NI_CMXF:long_name = "vertically integrated external forcing for OM_NI" ;
		OM_NI_CMXF:cell_methods = "time: mean" ;
	int OM_NI_CMXF_nacs ;
	double OM_NI_OCW(lev, lat, lon) ;
		OM_NI_OCW:mdims = 1 ;
		OM_NI_OCW:units = "kg/kg" ;
		OM_NI_OCW:long_name = "OM_NI_OCW in cloud water" ;
		OM_NI_OCW:cell_methods = "time: mean" ;
	int OM_NI_OCW_nacs ;
	double OM_NI_SRF(lat, lon) ;
		OM_NI_SRF:units = "kg/kg" ;
		OM_NI_SRF:long_name = "OM_NI in bottom layer" ;
		OM_NI_SRF:cell_methods = "time: mean" ;
	int OM_NI_SRF_nacs ;
	double PBLH(lat, lon) ;
		PBLH:units = "m" ;
		PBLH:long_name = "PBL height" ;
		PBLH:cell_methods = "time: mean" ;
	int PBLH_nacs ;
	double PHIS(lat, lon) ;
		PHIS:units = "m2/s2" ;
		PHIS:long_name = "Surface geopotential" ;
	int PHIS_nacs ;
	double PRECC(lat, lon) ;
		PRECC:units = "m/s" ;
		PRECC:long_name = "Convective precipitation rate (liq + ice)" ;
		PRECC:cell_methods = "time: mean" ;
	int PRECC_nacs ;
	double PRECL(lat, lon) ;
		PRECL:units = "m/s" ;
		PRECL:long_name = "Large-scale (stable) precipitation rate (liq + ice)" ;
		PRECL:cell_methods = "time: mean" ;
	int PRECL_nacs ;
	double PRECSC(lat, lon) ;
		PRECSC:units = "m/s" ;
		PRECSC:long_name = "Convective snow rate (water equivalent)" ;
		PRECSC:cell_methods = "time: mean" ;
	int PRECSC_nacs ;
	double PRECSL(lat, lon) ;
		PRECSL:units = "m/s" ;
		PRECSL:long_name = "Large-scale (stable) snow rate (water equivalent)" ;
		PRECSL:cell_methods = "time: mean" ;
	int PRECSL_nacs ;
	double PS(lat, lon) ;
		PS:units = "Pa" ;
		PS:long_name = "Surface pressure" ;
		PS:cell_methods = "time: mean" ;
	int PS_nacs ;
	double PSL(lat, lon) ;
		PSL:units = "Pa" ;
		PSL:long_name = "Sea level pressure" ;
		PSL:cell_methods = "time: mean" ;
	int PSL_nacs ;
	double Q(lev, lat, lon) ;
		Q:mdims = 1 ;
		Q:units = "kg/kg" ;
		Q:long_name = "Specific humidity" ;
		Q:cell_methods = "time: mean" ;
	int Q_nacs ;
	double QFLX(lat, lon) ;
		QFLX:units = "kg/m2/s" ;
		QFLX:long_name = "Surface water flux" ;
		QFLX:cell_methods = "time: mean" ;
	int QFLX_nacs ;
	double QREFHT(lat, lon) ;
		QREFHT:units = "kg/kg" ;
		QREFHT:long_name = "Reference height humidity" ;
		QREFHT:cell_methods = "time: mean" ;
	int QREFHT_nacs ;
	double QRL(lev, lat, lon) ;
		QRL:mdims = 1 ;
		QRL:Sampling_Sequence = "rad_lwsw" ;
		QRL:units = "K/s" ;
		QRL:long_name = "Longwave heating rate" ;
		QRL:cell_methods = "time: mean" ;
	int QRL_nacs ;
	double QRS(lev, lat, lon) ;
		QRS:mdims = 1 ;
		QRS:Sampling_Sequence = "rad_lwsw" ;
		QRS:units = "K/s" ;
		QRS:long_name = "Solar heating rate" ;
		QRS:cell_methods = "time: mean" ;
	int QRS_nacs ;
	double QT(lev, lat, lon) ;
		QT:mdims = 1 ;
		QT:units = "kg/kg" ;
		QT:long_name = "Total water mixing ratio" ;
		QT:cell_methods = "time: mean" ;
	int QT_nacs ;
	double RAINQM(lev, lat, lon) ;
		RAINQM:mdims = 1 ;
		RAINQM:units = "kg/kg" ;
		RAINQM:long_name = "Grid box averaged rain amount" ;
		RAINQM:cell_methods = "time: mean" ;
	int RAINQM_nacs ;
	double RCMINLAYER_CLUBB(ilev, lat, lon) ;
		RCMINLAYER_CLUBB:mdims = 2 ;
		RCMINLAYER_CLUBB:units = "g/kg" ;
		RCMINLAYER_CLUBB:long_name = "Cloud Water in Layer" ;
		RCMINLAYER_CLUBB:cell_methods = "time: mean" ;
	int RCMINLAYER_CLUBB_nacs ;
	double RCMTEND_CLUBB(lev, lat, lon) ;
		RCMTEND_CLUBB:mdims = 1 ;
		RCMTEND_CLUBB:units = "g/kg /s" ;
		RCMTEND_CLUBB:long_name = "Cloud Liquid Water Tendency" ;
		RCMTEND_CLUBB:cell_methods = "time: mean" ;
	int RCMTEND_CLUBB_nacs ;
	double RCM_CLUBB(ilev, lat, lon) ;
		RCM_CLUBB:mdims = 2 ;
		RCM_CLUBB:units = "g/kg" ;
		RCM_CLUBB:long_name = "Cloud Water Mixing Ratio" ;
		RCM_CLUBB:cell_methods = "time: mean" ;
	int RCM_CLUBB_nacs ;
	double RELH(lev, lat, lon) ;
		RELH:mdims = 1 ;
		RELH:units = "unitless" ;
		RELH:long_name = "Fictive relative humidity" ;
		RELH:cell_methods = "time: mean" ;
	int RELH_nacs ;
	double RELHUM(lev, lat, lon) ;
		RELHUM:mdims = 1 ;
		RELHUM:units = "percent" ;
		RELHUM:long_name = "Relative humidity" ;
		RELHUM:cell_methods = "time: mean" ;
	int RELHUM_nacs ;
	double RELVAR(lev, lat, lon) ;
		RELVAR:mdims = 1 ;
		RELVAR:units = "-" ;
		RELVAR:long_name = "Relative cloud water variance" ;
		RELVAR:cell_methods = "time: mean" ;
	int RELVAR_nacs ;
	double RHO_CLUBB(ilev, lat, lon) ;
		RHO_CLUBB:mdims = 2 ;
		RHO_CLUBB:units = "kg/m3" ;
		RHO_CLUBB:long_name = "Air Density" ;
		RHO_CLUBB:cell_methods = "time: mean" ;
	int RHO_CLUBB_nacs ;
	double RIMTEND_CLUBB(lev, lat, lon) ;
		RIMTEND_CLUBB:mdims = 1 ;
		RIMTEND_CLUBB:units = "g/kg /s" ;
		RIMTEND_CLUBB:long_name = "Cloud Ice Tendency" ;
		RIMTEND_CLUBB:cell_methods = "time: mean" ;
	int RIMTEND_CLUBB_nacs ;
	double RTP2_CLUBB(ilev, lat, lon) ;
		RTP2_CLUBB:mdims = 2 ;
		RTP2_CLUBB:units = "g^2/kg^2" ;
		RTP2_CLUBB:long_name = "Moisture Variance" ;
		RTP2_CLUBB:cell_methods = "time: mean" ;
	int RTP2_CLUBB_nacs ;
	double RTPTHLP_CLUBB(ilev, lat, lon) ;
		RTPTHLP_CLUBB:mdims = 2 ;
		RTPTHLP_CLUBB:units = "K g/kg" ;
		RTPTHLP_CLUBB:long_name = "Temp. Moist. Covariance" ;
		RTPTHLP_CLUBB:cell_methods = "time: mean" ;
	int RTPTHLP_CLUBB_nacs ;
	double RVMTEND_CLUBB(lev, lat, lon) ;
		RVMTEND_CLUBB:mdims = 1 ;
		RVMTEND_CLUBB:units = "g/kg /s" ;
		RVMTEND_CLUBB:long_name = "Water vapor tendency" ;
		RVMTEND_CLUBB:cell_methods = "time: mean" ;
	int RVMTEND_CLUBB_nacs ;
	double SADICEXCLD_ISOTM(isotherms_mpc, lat, lon) ;
		SADICEXCLD_ISOTM:mdims = 3 ;
		SADICEXCLD_ISOTM:long_name = "Mean ice surface area density near isotherm * CLD_ISOTM (discard below thick cloud)" ;
		SADICEXCLD_ISOTM:cell_methods = "time: mean" ;
	int SADICEXCLD_ISOTM_nacs ;
	double SADICEXCLD_ISOTM_NONSIM(isotherms_mpc, lat, lon) ;
		SADICEXCLD_ISOTM_NONSIM:mdims = 3 ;
		SADICEXCLD_ISOTM_NONSIM:long_name = "Mean ice surface area density near isotherm * CLD_ISOTM_NONSIM" ;
		SADICEXCLD_ISOTM_NONSIM:cell_methods = "time: mean" ;
	int SADICEXCLD_ISOTM_NONSIM_nacs ;
	double SADLIQXCLD_ISOTM(isotherms_mpc, lat, lon) ;
		SADLIQXCLD_ISOTM:mdims = 3 ;
		SADLIQXCLD_ISOTM:long_name = "Mean droplet surface area density near isotherm * CLD_ISOTM (discard below thick cloud)" ;
		SADLIQXCLD_ISOTM:cell_methods = "time: mean" ;
	int SADLIQXCLD_ISOTM_nacs ;
	double SADLIQXCLD_ISOTM_NONSIM(isotherms_mpc, lat, lon) ;
		SADLIQXCLD_ISOTM_NONSIM:mdims = 3 ;
		SADLIQXCLD_ISOTM_NONSIM:long_name = "Mean droplet surface area density near isotherm * CLD_ISOTM_NONSIM" ;
		SADLIQXCLD_ISOTM_NONSIM:cell_methods = "time: mean" ;
	int SADLIQXCLD_ISOTM_NONSIM_nacs ;
	double SFBC_A(lat, lon) ;
		SFBC_A:units = "kg/m2/s" ;
		SFBC_A:long_name = "BC_A surface flux" ;
		SFBC_A:cell_methods = "time: mean" ;
	int SFBC_A_nacs ;
	double SFBC_AC(lat, lon) ;
		SFBC_AC:units = "kg/m2/s" ;
		SFBC_AC:long_name = "BC_AC surface flux" ;
		SFBC_AC:cell_methods = "time: mean" ;
	int SFBC_AC_nacs ;
	double SFBC_AI(lat, lon) ;
		SFBC_AI:units = "kg/m2/s" ;
		SFBC_AI:long_name = "BC_AI surface flux" ;
		SFBC_AI:cell_methods = "time: mean" ;
	int SFBC_AI_nacs ;
	double SFBC_AX(lat, lon) ;
		SFBC_AX:units = "kg/m2/s" ;
		SFBC_AX:long_name = "BC_AX surface flux" ;
		SFBC_AX:cell_methods = "time: mean" ;
	int SFBC_AX_nacs ;
	double SFBC_N(lat, lon) ;
		SFBC_N:units = "kg/m2/s" ;
		SFBC_N:long_name = "BC_N surface flux" ;
		SFBC_N:cell_methods = "time: mean" ;
	int SFBC_N_nacs ;
	double SFBC_NI(lat, lon) ;
		SFBC_NI:units = "kg/m2/s" ;
		SFBC_NI:long_name = "BC_NI surface flux" ;
		SFBC_NI:cell_methods = "time: mean" ;
	int SFBC_NI_nacs ;
	double SFDMS(lat, lon) ;
		SFDMS:units = "kg/m2/s" ;
		SFDMS:long_name = "DMS surface flux" ;
		SFDMS:cell_methods = "time: mean" ;
	int SFDMS_nacs ;
	double SFDST_A2(lat, lon) ;
		SFDST_A2:units = "kg/m2/s" ;
		SFDST_A2:long_name = "DST_A2 surface flux" ;
		SFDST_A2:cell_methods = "time: mean" ;
	int SFDST_A2_nacs ;
	double SFDST_A3(lat, lon) ;
		SFDST_A3:units = "kg/m2/s" ;
		SFDST_A3:long_name = "DST_A3 surface flux" ;
		SFDST_A3:cell_methods = "time: mean" ;
	int SFDST_A3_nacs ;
	double SFH2O2(lat, lon) ;
		SFH2O2:units = "kg/m2/s" ;
		SFH2O2:long_name = "H2O2 surface flux" ;
		SFH2O2:cell_methods = "time: mean" ;
	int SFH2O2_nacs ;
	double SFH2SO4(lat, lon) ;
		SFH2SO4:units = "kg/m2/s" ;
		SFH2SO4:long_name = "H2SO4 surface flux" ;
		SFH2SO4:cell_methods = "time: mean" ;
	int SFH2SO4_nacs ;
	double SFOM_AC(lat, lon) ;
		SFOM_AC:units = "kg/m2/s" ;
		SFOM_AC:long_name = "OM_AC surface flux" ;
		SFOM_AC:cell_methods = "time: mean" ;
	int SFOM_AC_nacs ;
	double SFOM_AI(lat, lon) ;
		SFOM_AI:units = "kg/m2/s" ;
		SFOM_AI:long_name = "OM_AI surface flux" ;
		SFOM_AI:cell_methods = "time: mean" ;
	int SFOM_AI_nacs ;
	double SFOM_NI(lat, lon) ;
		SFOM_NI:units = "kg/m2/s" ;
		SFOM_NI:long_name = "OM_NI surface flux" ;
		SFOM_NI:cell_methods = "time: mean" ;
	int SFOM_NI_nacs ;
	double SFSO2(lat, lon) ;
		SFSO2:units = "kg/m2/s" ;
		SFSO2:long_name = "SO2 surface flux" ;
		SFSO2:cell_methods = "time: mean" ;
	int SFSO2_nacs ;
	double SFSO4_A1(lat, lon) ;
		SFSO4_A1:units = "kg/m2/s" ;
		SFSO4_A1:long_name = "SO4_A1 surface flux" ;
		SFSO4_A1:cell_methods = "time: mean" ;
	int SFSO4_A1_nacs ;
	double SFSO4_A2(lat, lon) ;
		SFSO4_A2:units = "kg/m2/s" ;
		SFSO4_A2:long_name = "SO4_A2 surface flux" ;
		SFSO4_A2:cell_methods = "time: mean" ;
	int SFSO4_A2_nacs ;
	double SFSO4_AC(lat, lon) ;
		SFSO4_AC:units = "kg/m2/s" ;
		SFSO4_AC:long_name = "SO4_AC surface flux" ;
		SFSO4_AC:cell_methods = "time: mean" ;
	int SFSO4_AC_nacs ;
	double SFSO4_NA(lat, lon) ;
		SFSO4_NA:units = "kg/m2/s" ;
		SFSO4_NA:long_name = "SO4_NA surface flux" ;
		SFSO4_NA:cell_methods = "time: mean" ;
	int SFSO4_NA_nacs ;
	double SFSO4_PR(lat, lon) ;
		SFSO4_PR:units = "kg/m2/s" ;
		SFSO4_PR:long_name = "SO4_PR surface flux" ;
		SFSO4_PR:cell_methods = "time: mean" ;
	int SFSO4_PR_nacs ;
	double SFSOA_A1(lat, lon) ;
		SFSOA_A1:units = "kg/m2/s" ;
		SFSOA_A1:long_name = "SOA_A1 surface flux" ;
		SFSOA_A1:cell_methods = "time: mean" ;
	int SFSOA_A1_nacs ;
	double SFSOA_LV(lat, lon) ;
		SFSOA_LV:units = "kg/m2/s" ;
		SFSOA_LV:long_name = "SOA_LV surface flux" ;
		SFSOA_LV:cell_methods = "time: mean" ;
	int SFSOA_LV_nacs ;
	double SFSOA_NA(lat, lon) ;
		SFSOA_NA:units = "kg/m2/s" ;
		SFSOA_NA:long_name = "SOA_NA surface flux" ;
		SFSOA_NA:cell_methods = "time: mean" ;
	int SFSOA_NA_nacs ;
	double SFSOA_SV(lat, lon) ;
		SFSOA_SV:units = "kg/m2/s" ;
		SFSOA_SV:long_name = "SOA_SV surface flux" ;
		SFSOA_SV:cell_methods = "time: mean" ;
	int SFSOA_SV_nacs ;
	double SFSS_A1(lat, lon) ;
		SFSS_A1:units = "kg/m2/s" ;
		SFSS_A1:long_name = "SS_A1 surface flux" ;
		SFSS_A1:cell_methods = "time: mean" ;
	int SFSS_A1_nacs ;
	double SFSS_A2(lat, lon) ;
		SFSS_A2:units = "kg/m2/s" ;
		SFSS_A2:long_name = "SS_A2 surface flux" ;
		SFSS_A2:cell_methods = "time: mean" ;
	int SFSS_A2_nacs ;
	double SFSS_A3(lat, lon) ;
		SFSS_A3:units = "kg/m2/s" ;
		SFSS_A3:long_name = "SS_A3 surface flux" ;
		SFSS_A3:cell_methods = "time: mean" ;
	int SFSS_A3_nacs ;
	double SFisoprene(lat, lon) ;
		SFisoprene:units = "kg/m2/s" ;
		SFisoprene:long_name = "isoprene surface flux" ;
		SFisoprene:cell_methods = "time: mean" ;
	int SFisoprene_nacs ;
	double SFmonoterp(lat, lon) ;
		SFmonoterp:units = "kg/m2/s" ;
		SFmonoterp:long_name = "monoterp surface flux" ;
		SFmonoterp:cell_methods = "time: mean" ;
	int SFmonoterp_nacs ;
	double SHFLX(lat, lon) ;
		SHFLX:units = "W/m2" ;
		SHFLX:long_name = "Surface sensible heat flux" ;
		SHFLX:cell_methods = "time: mean" ;
	int SHFLX_nacs ;
	double SL(lev, lat, lon) ;
		SL:mdims = 1 ;
		SL:units = "J/kg" ;
		SL:long_name = "Liquid water static energy" ;
		SL:cell_methods = "time: mean" ;
	int SL_nacs ;
	double SLFXCLD_ISOTM(isotherms_mpc, lat, lon) ;
		SLFXCLD_ISOTM:mdims = 3 ;
		SLFXCLD_ISOTM:long_name = "Mean supercooled liquid fraction near isotherm * CLD_ISOTM (discard below thick cloud)" ;
		SLFXCLD_ISOTM:cell_methods = "time: mean" ;
	int SLFXCLD_ISOTM_nacs ;
	double SLFXCLD_ISOTM_NONSIM(isotherms_mpc, lat, lon) ;
		SLFXCLD_ISOTM_NONSIM:mdims = 3 ;
		SLFXCLD_ISOTM_NONSIM:long_name = "Mean supercooled liquid fraction near isotherm * CLD_ISOTM_NONSIM" ;
		SLFXCLD_ISOTM_NONSIM:cell_methods = "time: mean" ;
	int SLFXCLD_ISOTM_NONSIM_nacs ;
	double SNOWHICE(lat, lon) ;
		SNOWHICE:units = "m" ;
		SNOWHICE:long_name = "Snow depth over ice" ;
		SNOWHICE:cell_methods = "time: mean" ;
	int SNOWHICE_nacs ;
	double SNOWHLND(lat, lon) ;
		SNOWHLND:units = "m" ;
		SNOWHLND:long_name = "Water equivalent snow depth" ;
		SNOWHLND:cell_methods = "time: mean" ;
	int SNOWHLND_nacs ;
	double SNOWQM(lev, lat, lon) ;
		SNOWQM:mdims = 1 ;
		SNOWQM:units = "kg/kg" ;
		SNOWQM:long_name = "Grid box averaged snow amount" ;
		SNOWQM:cell_methods = "time: mean" ;
	int SNOWQM_nacs ;
	double SO2(lev, lat, lon) ;
		SO2:mdims = 1 ;
		SO2:units = "mol/mol" ;
		SO2:long_name = "SO2 concentration" ;
		SO2:cell_methods = "time: mean" ;
	int SO2_nacs ;
	double SO2_CLXF(lat, lon) ;
		SO2_CLXF:units = "molec/cm2/s" ;
		SO2_CLXF:long_name = "vertically integrated external forcing for SO2" ;
		SO2_CLXF:cell_methods = "time: mean" ;
	int SO2_CLXF_nacs ;
	double SO2_CMXF(lat, lon) ;
		SO2_CMXF:units = "kg/m2/s" ;
		SO2_CMXF:long_name = "vertically integrated external forcing for SO2" ;
		SO2_CMXF:cell_methods = "time: mean" ;
	int SO2_CMXF_nacs ;
	double SO2_SRF(lat, lon) ;
		SO2_SRF:units = "mol/mol" ;
		SO2_SRF:long_name = "SO2 in bottom layer" ;
		SO2_SRF:cell_methods = "time: mean" ;
	int SO2_SRF_nacs ;
	double SO4_A1(lev, lat, lon) ;
		SO4_A1:mdims = 1 ;
		SO4_A1:units = "kg/kg" ;
		SO4_A1:long_name = "SO4_A1 concentration" ;
		SO4_A1:cell_methods = "time: mean" ;
	int SO4_A1_nacs ;
	double SO4_A1_OCW(lev, lat, lon) ;
		SO4_A1_OCW:mdims = 1 ;
		SO4_A1_OCW:units = "kg/kg" ;
		SO4_A1_OCW:long_name = "SO4_A1_OCW in cloud water" ;
		SO4_A1_OCW:cell_methods = "time: mean" ;
	int SO4_A1_OCW_nacs ;
	double SO4_A1_SRF(lat, lon) ;
		SO4_A1_SRF:units = "kg/kg" ;
		SO4_A1_SRF:long_name = "SO4_A1 in bottom layer" ;
		SO4_A1_SRF:cell_methods = "time: mean" ;
	int SO4_A1_SRF_nacs ;
	double SO4_A2(lev, lat, lon) ;
		SO4_A2:mdims = 1 ;
		SO4_A2:units = "kg/kg" ;
		SO4_A2:long_name = "SO4_A2 concentration" ;
		SO4_A2:cell_methods = "time: mean" ;
	int SO4_A2_nacs ;
	double SO4_A2_OCW(lev, lat, lon) ;
		SO4_A2_OCW:mdims = 1 ;
		SO4_A2_OCW:units = "kg/kg" ;
		SO4_A2_OCW:long_name = "SO4_A2_OCW in cloud water" ;
		SO4_A2_OCW:cell_methods = "time: mean" ;
	int SO4_A2_OCW_nacs ;
	double SO4_A2_SRF(lat, lon) ;
		SO4_A2_SRF:units = "kg/kg" ;
		SO4_A2_SRF:long_name = "SO4_A2 in bottom layer" ;
		SO4_A2_SRF:cell_methods = "time: mean" ;
	int SO4_A2_SRF_nacs ;
	double SO4_AC(lev, lat, lon) ;
		SO4_AC:mdims = 1 ;
		SO4_AC:units = "kg/kg" ;
		SO4_AC:long_name = "SO4_AC concentration" ;
		SO4_AC:cell_methods = "time: mean" ;
	int SO4_AC_nacs ;
	double SO4_AC_OCW(lev, lat, lon) ;
		SO4_AC_OCW:mdims = 1 ;
		SO4_AC_OCW:units = "kg/kg" ;
		SO4_AC_OCW:long_name = "SO4_AC_OCW in cloud water" ;
		SO4_AC_OCW:cell_methods = "time: mean" ;
	int SO4_AC_OCW_nacs ;
	double SO4_AC_SRF(lat, lon) ;
		SO4_AC_SRF:units = "kg/kg" ;
		SO4_AC_SRF:long_name = "SO4_AC in bottom layer" ;
		SO4_AC_SRF:cell_methods = "time: mean" ;
	int SO4_AC_SRF_nacs ;
	double SO4_NA(lev, lat, lon) ;
		SO4_NA:mdims = 1 ;
		SO4_NA:units = "kg/kg" ;
		SO4_NA:long_name = "SO4_NA concentration" ;
		SO4_NA:cell_methods = "time: mean" ;
	int SO4_NA_nacs ;
	double SO4_NA_OCW(lev, lat, lon) ;
		SO4_NA_OCW:mdims = 1 ;
		SO4_NA_OCW:units = "kg/kg" ;
		SO4_NA_OCW:long_name = "SO4_NA_OCW in cloud water" ;
		SO4_NA_OCW:cell_methods = "time: mean" ;
	int SO4_NA_OCW_nacs ;
	double SO4_NA_SRF(lat, lon) ;
		SO4_NA_SRF:units = "kg/kg" ;
		SO4_NA_SRF:long_name = "SO4_NA in bottom layer" ;
		SO4_NA_SRF:cell_methods = "time: mean" ;
	int SO4_NA_SRF_nacs ;
	double SO4_PR(lev, lat, lon) ;
		SO4_PR:mdims = 1 ;
		SO4_PR:units = "kg/kg" ;
		SO4_PR:long_name = "SO4_PR concentration" ;
		SO4_PR:cell_methods = "time: mean" ;
	int SO4_PR_nacs ;
	double SO4_PR_CLXF(lat, lon) ;
		SO4_PR_CLXF:units = "molec/cm2/s" ;
		SO4_PR_CLXF:long_name = "vertically integrated external forcing for SO4_PR" ;
		SO4_PR_CLXF:cell_methods = "time: mean" ;
	int SO4_PR_CLXF_nacs ;
	double SO4_PR_CMXF(lat, lon) ;
		SO4_PR_CMXF:units = "kg/m2/s" ;
		SO4_PR_CMXF:long_name = "vertically integrated external forcing for SO4_PR" ;
		SO4_PR_CMXF:cell_methods = "time: mean" ;
	int SO4_PR_CMXF_nacs ;
	double SO4_PR_OCW(lev, lat, lon) ;
		SO4_PR_OCW:mdims = 1 ;
		SO4_PR_OCW:units = "kg/kg" ;
		SO4_PR_OCW:long_name = "SO4_PR_OCW in cloud water" ;
		SO4_PR_OCW:cell_methods = "time: mean" ;
	int SO4_PR_OCW_nacs ;
	double SO4_PR_SRF(lat, lon) ;
		SO4_PR_SRF:units = "kg/kg" ;
		SO4_PR_SRF:long_name = "SO4_PR in bottom layer" ;
		SO4_PR_SRF:cell_methods = "time: mean" ;
	int SO4_PR_SRF_nacs ;
	double SOA_A1(lev, lat, lon) ;
		SOA_A1:mdims = 1 ;
		SOA_A1:units = "kg/kg" ;
		SOA_A1:long_name = "SOA_A1 concentration" ;
		SOA_A1:cell_methods = "time: mean" ;
	int SOA_A1_nacs ;
	double SOA_A1_OCW(lev, lat, lon) ;
		SOA_A1_OCW:mdims = 1 ;
		SOA_A1_OCW:units = "kg/kg" ;
		SOA_A1_OCW:long_name = "SOA_A1_OCW in cloud water" ;
		SOA_A1_OCW:cell_methods = "time: mean" ;
	int SOA_A1_OCW_nacs ;
	double SOA_A1_SRF(lat, lon) ;
		SOA_A1_SRF:units = "kg/kg" ;
		SOA_A1_SRF:long_name = "SOA_A1 in bottom layer" ;
		SOA_A1_SRF:cell_methods = "time: mean" ;
	int SOA_A1_SRF_nacs ;
	double SOA_LV(lev, lat, lon) ;
		SOA_LV:mdims = 1 ;
		SOA_LV:units = "mol/mol" ;
		SOA_LV:long_name = "SOA_LV concentration" ;
		SOA_LV:cell_methods = "time: mean" ;
	int SOA_LV_nacs ;
	double SOA_LV_SRF(lat, lon) ;
		SOA_LV_SRF:units = "mol/mol" ;
		SOA_LV_SRF:long_name = "SOA_LV in bottom layer" ;
		SOA_LV_SRF:cell_methods = "time: mean" ;
	int SOA_LV_SRF_nacs ;
	double SOA_NA(lev, lat, lon) ;
		SOA_NA:mdims = 1 ;
		SOA_NA:units = "kg/kg" ;
		SOA_NA:long_name = "SOA_NA concentration" ;
		SOA_NA:cell_methods = "time: mean" ;
	int SOA_NA_nacs ;
	double SOA_NA_OCW(lev, lat, lon) ;
		SOA_NA_OCW:mdims = 1 ;
		SOA_NA_OCW:units = "kg/kg" ;
		SOA_NA_OCW:long_name = "SOA_NA_OCW in cloud water" ;
		SOA_NA_OCW:cell_methods = "time: mean" ;
	int SOA_NA_OCW_nacs ;
	double SOA_NA_SRF(lat, lon) ;
		SOA_NA_SRF:units = "kg/kg" ;
		SOA_NA_SRF:long_name = "SOA_NA in bottom layer" ;
		SOA_NA_SRF:cell_methods = "time: mean" ;
	int SOA_NA_SRF_nacs ;
	double SOA_SV(lev, lat, lon) ;
		SOA_SV:mdims = 1 ;
		SOA_SV:units = "mol/mol" ;
		SOA_SV:long_name = "SOA_SV concentration" ;
		SOA_SV:cell_methods = "time: mean" ;
	int SOA_SV_nacs ;
	double SOA_SV_SRF(lat, lon) ;
		SOA_SV_SRF:units = "mol/mol" ;
		SOA_SV_SRF:long_name = "SOA_SV in bottom layer" ;
		SOA_SV_SRF:cell_methods = "time: mean" ;
	int SOA_SV_SRF_nacs ;
	double SOLIN(lat, lon) ;
		SOLIN:Sampling_Sequence = "rad_lwsw" ;
		SOLIN:units = "W/m2" ;
		SOLIN:long_name = "Solar insolation" ;
		SOLIN:cell_methods = "time: mean" ;
	int SOLIN_nacs ;
	double SSAVIS(lev, lat, lon) ;
		SSAVIS:mdims = 1 ;
		SSAVIS:units = "unitless" ;
		SSAVIS:long_name = "Aerosol single scattering albedo in visible wavelength band" ;
		SSAVIS:cell_methods = "time: mean" ;
	int SSAVIS_nacs ;
	double SS_A1(lev, lat, lon) ;
		SS_A1:mdims = 1 ;
		SS_A1:units = "kg/kg" ;
		SS_A1:long_name = "SS_A1 concentration" ;
		SS_A1:cell_methods = "time: mean" ;
	int SS_A1_nacs ;
	double SS_A1_OCW(lev, lat, lon) ;
		SS_A1_OCW:mdims = 1 ;
		SS_A1_OCW:units = "kg/kg" ;
		SS_A1_OCW:long_name = "SS_A1_OCW in cloud water" ;
		SS_A1_OCW:cell_methods = "time: mean" ;
	int SS_A1_OCW_nacs ;
	double SS_A1_SRF(lat, lon) ;
		SS_A1_SRF:units = "kg/kg" ;
		SS_A1_SRF:long_name = "SS_A1 in bottom layer" ;
		SS_A1_SRF:cell_methods = "time: mean" ;
	int SS_A1_SRF_nacs ;
	double SS_A2(lev, lat, lon) ;
		SS_A2:mdims = 1 ;
		SS_A2:units = "kg/kg" ;
		SS_A2:long_name = "SS_A2 concentration" ;
		SS_A2:cell_methods = "time: mean" ;
	int SS_A2_nacs ;
	double SS_A2_OCW(lev, lat, lon) ;
		SS_A2_OCW:mdims = 1 ;
		SS_A2_OCW:units = "kg/kg" ;
		SS_A2_OCW:long_name = "SS_A2_OCW in cloud water" ;
		SS_A2_OCW:cell_methods = "time: mean" ;
	int SS_A2_OCW_nacs ;
	double SS_A2_SRF(lat, lon) ;
		SS_A2_SRF:units = "kg/kg" ;
		SS_A2_SRF:long_name = "SS_A2 in bottom layer" ;
		SS_A2_SRF:cell_methods = "time: mean" ;
	int SS_A2_SRF_nacs ;
	double SS_A3(lev, lat, lon) ;
		SS_A3:mdims = 1 ;
		SS_A3:units = "kg/kg" ;
		SS_A3:long_name = "SS_A3 concentration" ;
		SS_A3:cell_methods = "time: mean" ;
	int SS_A3_nacs ;
	double SS_A3_OCW(lev, lat, lon) ;
		SS_A3_OCW:mdims = 1 ;
		SS_A3_OCW:units = "kg/kg" ;
		SS_A3_OCW:long_name = "SS_A3_OCW in cloud water" ;
		SS_A3_OCW:cell_methods = "time: mean" ;
	int SS_A3_OCW_nacs ;
	double SS_A3_SRF(lat, lon) ;
		SS_A3_SRF:units = "kg/kg" ;
		SS_A3_SRF:long_name = "SS_A3 in bottom layer" ;
		SS_A3_SRF:cell_methods = "time: mean" ;
	int SS_A3_SRF_nacs ;
	double STEND_CLUBB(lev, lat, lon) ;
		STEND_CLUBB:mdims = 1 ;
		STEND_CLUBB:units = "k/s" ;
		STEND_CLUBB:long_name = "Temperature tendency" ;
		STEND_CLUBB:cell_methods = "time: mean" ;
	int STEND_CLUBB_nacs ;
	double SWCF(lat, lon) ;
		SWCF:Sampling_Sequence = "rad_lwsw" ;
		SWCF:units = "W/m2" ;
		SWCF:long_name = "Shortwave cloud forcing" ;
		SWCF:cell_methods = "time: mean" ;
	int SWCF_nacs ;
	double T(lev, lat, lon) ;
		T:mdims = 1 ;
		T:units = "K" ;
		T:long_name = "Temperature" ;
		T:cell_methods = "time: mean" ;
	int T_nacs ;
	double TAUBLJX(lat, lon) ;
		TAUBLJX:units = "N/m2" ;
		TAUBLJX:long_name = "Zonal      integrated drag from Beljaars SGO" ;
		TAUBLJX:cell_methods = "time: mean" ;
	int TAUBLJX_nacs ;
	double TAUBLJY(lat, lon) ;
		TAUBLJY:units = "N/m2" ;
		TAUBLJY:long_name = "Meridional integrated drag from Beljaars SGO" ;
		TAUBLJY:cell_methods = "time: mean" ;
	int TAUBLJY_nacs ;
	double TAUGWX(lat, lon) ;
		TAUGWX:units = "N/m2" ;
		TAUGWX:long_name = "Zonal gravity wave surface stress" ;
		TAUGWX:cell_methods = "time: mean" ;
	int TAUGWX_nacs ;
	double TAUGWY(lat, lon) ;
		TAUGWY:units = "N/m2" ;
		TAUGWY:long_name = "Meridional gravity wave surface stress" ;
		TAUGWY:cell_methods = "time: mean" ;
	int TAUGWY_nacs ;
	double TAUX(lat, lon) ;
		TAUX:units = "N/m2" ;
		TAUX:long_name = "Zonal surface stress" ;
		TAUX:cell_methods = "time: mean" ;
	int TAUX_nacs ;
	double TAUY(lat, lon) ;
		TAUY:units = "N/m2" ;
		TAUY:long_name = "Meridional surface stress" ;
		TAUY:cell_methods = "time: mean" ;
	int TAUY_nacs ;
	double TGCLDCWP(lat, lon) ;
		TGCLDCWP:units = "kg/m2" ;
		TGCLDCWP:long_name = "Total grid-box cloud water path (liquid and ice)" ;
		TGCLDCWP:cell_methods = "time: mean" ;
	int TGCLDCWP_nacs ;
	double TGCLDIWP(lat, lon) ;
		TGCLDIWP:units = "kg/m2" ;
		TGCLDIWP:long_name = "Total grid-box cloud ice water path" ;
		TGCLDIWP:cell_methods = "time: mean" ;
	int TGCLDIWP_nacs ;
	double TGCLDLWP(lat, lon) ;
		TGCLDLWP:units = "kg/m2" ;
		TGCLDLWP:long_name = "Total grid-box cloud liquid water path" ;
		TGCLDLWP:cell_methods = "time: mean" ;
	int TGCLDLWP_nacs ;
	double TH(ilev, lat, lon) ;
		TH:mdims = 2 ;
		TH:units = "K" ;
		TH:long_name = "Potential Temperature" ;
		TH:cell_methods = "time: mean" ;
	int TH_nacs ;
	double THLP2_CLUBB(ilev, lat, lon) ;
		THLP2_CLUBB:mdims = 2 ;
		THLP2_CLUBB:units = "K^2" ;
		THLP2_CLUBB:long_name = "Temperature Variance" ;
		THLP2_CLUBB:cell_methods = "time: mean" ;
	int THLP2_CLUBB_nacs ;
	double TMQ(lat, lon) ;
		TMQ:units = "kg/m2" ;
		TMQ:long_name = "Total (vertically integrated) precipitable water" ;
		TMQ:cell_methods = "time: mean" ;
	int TMQ_nacs ;
	double TREFHT(lat, lon) ;
		TREFHT:units = "K" ;
		TREFHT:long_name = "Reference height temperature" ;
		TREFHT:cell_methods = "time: mean" ;
	int TREFHT_nacs ;
	double TS(lat, lon) ;
		TS:units = "K" ;
		TS:long_name = "Surface temperature (radiative)" ;
		TS:cell_methods = "time: mean" ;
	int TS_nacs ;
	double TSMN(lat, lon) ;
		TSMN:units = "K" ;
		TSMN:long_name = "Minimum surface temperature over output period" ;
		TSMN:cell_methods = "time: minimum" ;
	int TSMN_nacs ;
	double TSMX(lat, lon) ;
		TSMX:units = "K" ;
		TSMX:long_name = "Maximum surface temperature over output period" ;
		TSMX:cell_methods = "time: maximum" ;
	int TSMX_nacs ;
	double U(lev, lat, lon) ;
		U:mdims = 1 ;
		U:units = "m/s" ;
		U:long_name = "Zonal wind" ;
		U:cell_methods = "time: mean" ;
	int U_nacs ;
	double U10(lat, lon) ;
		U10:units = "m/s" ;
		U10:long_name = "10m wind speed" ;
		U10:cell_methods = "time: mean" ;
	int U10_nacs ;
	double UM_CLUBB(ilev, lat, lon) ;
		UM_CLUBB:mdims = 2 ;
		UM_CLUBB:units = "m/s" ;
		UM_CLUBB:long_name = "Zonal Wind" ;
		UM_CLUBB:cell_methods = "time: mean" ;
	int UM_CLUBB_nacs ;
	double UP2_CLUBB(ilev, lat, lon) ;
		UP2_CLUBB:mdims = 2 ;
		UP2_CLUBB:units = "m2/s2" ;
		UP2_CLUBB:long_name = "Zonal Velocity Variance" ;
		UP2_CLUBB:cell_methods = "time: mean" ;
	int UP2_CLUBB_nacs ;
	double UPWP_CLUBB(ilev, lat, lon) ;
		UPWP_CLUBB:mdims = 2 ;
		UPWP_CLUBB:units = "m2/s2" ;
		UPWP_CLUBB:long_name = "Zonal Momentum Flux" ;
		UPWP_CLUBB:cell_methods = "time: mean" ;
	int UPWP_CLUBB_nacs ;
	double UTEND_CLUBB(lev, lat, lon) ;
		UTEND_CLUBB:mdims = 1 ;
		UTEND_CLUBB:units = "m/s /s" ;
		UTEND_CLUBB:long_name = "U-wind Tendency" ;
		UTEND_CLUBB:cell_methods = "time: mean" ;
	int UTEND_CLUBB_nacs ;
	double UU(lev, lat, lon) ;
		UU:mdims = 1 ;
		UU:units = "m2/s2" ;
		UU:long_name = "Zonal velocity squared" ;
		UU:cell_methods = "time: mean" ;
	int UU_nacs ;
	double UVzm(ilev, lat, zlon) ;
		UVzm:mdims = 2 ;
		UVzm:units = "M2/S2" ;
		UVzm:long_name = "Meridional Flux of Zonal Momentum: 3D zon. mean" ;
		UVzm:cell_methods = "zlon: mean time: mean" ;
	int UVzm_nacs ;
	double UWzm(ilev, lat, zlon) ;
		UWzm:mdims = 2 ;
		UWzm:units = "M2/S2" ;
		UWzm:long_name = "Vertical Flux of Zonal Momentum: 3D zon. mean" ;
		UWzm:cell_methods = "zlon: mean time: mean" ;
	int UWzm_nacs ;
	double V(lev, lat, lon) ;
		V:mdims = 1 ;
		V:units = "m/s" ;
		V:long_name = "Meridional wind" ;
		V:cell_methods = "time: mean" ;
	int V_nacs ;
	double VD01(lev, lat, lon) ;
		VD01:mdims = 1 ;
		VD01:units = "kg/kg/s" ;
		VD01:long_name = "Vertical diffusion of Q" ;
		VD01:cell_methods = "time: mean" ;
	int VD01_nacs ;
	double VM_CLUBB(ilev, lat, lon) ;
		VM_CLUBB:mdims = 2 ;
		VM_CLUBB:units = "m/s" ;
		VM_CLUBB:long_name = "Meridional Wind" ;
		VM_CLUBB:cell_methods = "time: mean" ;
	int VM_CLUBB_nacs ;
	double VP2_CLUBB(ilev, lat, lon) ;
		VP2_CLUBB:mdims = 2 ;
		VP2_CLUBB:units = "m2/s2" ;
		VP2_CLUBB:long_name = "Meridional Velocity Variance" ;
		VP2_CLUBB:cell_methods = "time: mean" ;
	int VP2_CLUBB_nacs ;
	double VPWP_CLUBB(ilev, lat, lon) ;
		VPWP_CLUBB:mdims = 2 ;
		VPWP_CLUBB:units = "m2/s2" ;
		VPWP_CLUBB:long_name = "Meridional Momentum Flux" ;
		VPWP_CLUBB:cell_methods = "time: mean" ;
	int VPWP_CLUBB_nacs ;
	double VQ(lev, lat, lon) ;
		VQ:mdims = 1 ;
		VQ:units = "m/skg/kg" ;
		VQ:long_name = "Meridional water transport" ;
		VQ:cell_methods = "time: mean" ;
	int VQ_nacs ;
	double VT(lev, lat, lon) ;
		VT:mdims = 1 ;
		VT:units = "K m/s" ;
		VT:long_name = "Meridional heat transport" ;
		VT:cell_methods = "time: mean" ;
	int VT_nacs ;
	double VTEND_CLUBB(lev, lat, lon) ;
		VTEND_CLUBB:mdims = 1 ;
		VTEND_CLUBB:units = "m/s /s" ;
		VTEND_CLUBB:long_name = "V-wind Tendency" ;
		VTEND_CLUBB:cell_methods = "time: mean" ;
	int VTEND_CLUBB_nacs ;
	double VTHzm(ilev, lat, zlon) ;
		VTHzm:mdims = 2 ;
		VTHzm:units = "MK/S" ;
		VTHzm:long_name = "Meridional Heat Flux: 3D zon. mean" ;
		VTHzm:cell_methods = "zlon: mean time: mean" ;
	int VTHzm_nacs ;
	double VU(lev, lat, lon) ;
		VU:mdims = 1 ;
		VU:units = "m2/s2" ;
		VU:long_name = "Meridional flux of zonal momentum" ;
		VU:cell_methods = "time: mean" ;
	int VU_nacs ;
	double VV(lev, lat, lon) ;
		VV:mdims = 1 ;
		VV:units = "m2/s2" ;
		VV:long_name = "Meridional velocity squared" ;
		VV:cell_methods = "time: mean" ;
	int VV_nacs ;
	double WD_A_DMS(lat, lon) ;
		WD_A_DMS:units = "kg/m2/s" ;
		WD_A_DMS:long_name = "DMS              wet deposition" ;
		WD_A_DMS:cell_methods = "time: mean" ;
	int WD_A_DMS_nacs ;
	double WD_A_H2O2(lat, lon) ;
		WD_A_H2O2:units = "kg/m2/s" ;
		WD_A_H2O2:long_name = "H2O2             wet deposition" ;
		WD_A_H2O2:cell_methods = "time: mean" ;
	int WD_A_H2O2_nacs ;
	double WD_A_H2SO4(lat, lon) ;
		WD_A_H2SO4:units = "kg/m2/s" ;
		WD_A_H2SO4:long_name = "H2SO4            wet deposition" ;
		WD_A_H2SO4:cell_methods = "time: mean" ;
	int WD_A_H2SO4_nacs ;
	double WD_A_SO2(lat, lon) ;
		WD_A_SO2:units = "kg/m2/s" ;
		WD_A_SO2:long_name = "SO2              wet deposition" ;
		WD_A_SO2:cell_methods = "time: mean" ;
	int WD_A_SO2_nacs ;
	double WD_A_SOA_LV(lat, lon) ;
		WD_A_SOA_LV:units = "kg/m2/s" ;
		WD_A_SOA_LV:long_name = "SOA_LV           wet deposition" ;
		WD_A_SOA_LV:cell_methods = "time: mean" ;
	int WD_A_SOA_LV_nacs ;
	double WD_A_SOA_SV(lat, lon) ;
		WD_A_SOA_SV:units = "kg/m2/s" ;
		WD_A_SOA_SV:long_name = "SOA_SV           wet deposition" ;
		WD_A_SOA_SV:cell_methods = "time: mean" ;
	int WD_A_SOA_SV_nacs ;
	double WD_A_isoprene(lat, lon) ;
		WD_A_isoprene:units = "kg/m2/s" ;
		WD_A_isoprene:long_name = "isoprene         wet deposition" ;
		WD_A_isoprene:cell_methods = "time: mean" ;
	int WD_A_isoprene_nacs ;
	double WD_A_monoterp(lat, lon) ;
		WD_A_monoterp:units = "kg/m2/s" ;
		WD_A_monoterp:long_name = "monoterp         wet deposition" ;
		WD_A_monoterp:cell_methods = "time: mean" ;
	int WD_A_monoterp_nacs ;
	double WD_H2O2(lat, lon) ;
		WD_H2O2:units = "kg/m2/s" ;
		WD_H2O2:long_name = "vertical integrated wet deposition flux" ;
		WD_H2O2:cell_methods = "time: mean" ;
	int WD_H2O2_nacs ;
	double WD_H2SO4(lat, lon) ;
		WD_H2SO4:units = "kg/m2/s" ;
		WD_H2SO4:long_name = "vertical integrated wet deposition flux" ;
		WD_H2SO4:cell_methods = "time: mean" ;
	int WD_H2SO4_nacs ;
	double WD_SO2(lat, lon) ;
		WD_SO2:units = "kg/m2/s" ;
		WD_SO2:long_name = "vertical integrated wet deposition flux" ;
		WD_SO2:cell_methods = "time: mean" ;
	int WD_SO2_nacs ;
	double WP2_CLUBB(ilev, lat, lon) ;
		WP2_CLUBB:mdims = 2 ;
		WP2_CLUBB:units = "m2/s2" ;
		WP2_CLUBB:long_name = "Vertical Velocity Variance" ;
		WP2_CLUBB:cell_methods = "time: mean" ;
	int WP2_CLUBB_nacs ;
	double WP3_CLUBB(ilev, lat, lon) ;
		WP3_CLUBB:mdims = 2 ;
		WP3_CLUBB:units = "m3/s3" ;
		WP3_CLUBB:long_name = "Third Moment Vertical Velocity" ;
		WP3_CLUBB:cell_methods = "time: mean" ;
	int WP3_CLUBB_nacs ;
	double WPRCP_CLUBB(ilev, lat, lon) ;
		WPRCP_CLUBB:mdims = 2 ;
		WPRCP_CLUBB:units = "W/m2" ;
		WPRCP_CLUBB:long_name = "Liquid Water Flux" ;
		WPRCP_CLUBB:cell_methods = "time: mean" ;
	int WPRCP_CLUBB_nacs ;
	double WPRTP_CLUBB(ilev, lat, lon) ;
		WPRTP_CLUBB:mdims = 2 ;
		WPRTP_CLUBB:units = "W/m2" ;
		WPRTP_CLUBB:long_name = "Moisture Flux" ;
		WPRTP_CLUBB:cell_methods = "time: mean" ;
	int WPRTP_CLUBB_nacs ;
	double WPTHLP_CLUBB(ilev, lat, lon) ;
		WPTHLP_CLUBB:mdims = 2 ;
		WPTHLP_CLUBB:units = "W/m2" ;
		WPTHLP_CLUBB:long_name = "Heat Flux" ;
		WPTHLP_CLUBB:cell_methods = "time: mean" ;
	int WPTHLP_CLUBB_nacs ;
	double WPTHVP_CLUBB(lev, lat, lon) ;
		WPTHVP_CLUBB:mdims = 1 ;
		WPTHVP_CLUBB:units = "W/m2" ;
		WPTHVP_CLUBB:long_name = "Buoyancy Flux" ;
		WPTHVP_CLUBB:cell_methods = "time: mean" ;
	int WPTHVP_CLUBB_nacs ;
	double WSUB(lev, lat, lon) ;
		WSUB:mdims = 1 ;
		WSUB:units = "m/s" ;
		WSUB:long_name = "Diagnostic sub-grid vertical velocity" ;
		WSUB:cell_methods = "time: mean" ;
	int WSUB_nacs ;
	double WTHzm(ilev, lat, zlon) ;
		WTHzm:mdims = 2 ;
		WTHzm:units = "MK/S" ;
		WTHzm:long_name = "Vertical Heat Flux: 3D zon. mean" ;
		WTHzm:cell_methods = "zlon: mean time: mean" ;
	int WTHzm_nacs ;
	double Z3(lev, lat, lon) ;
		Z3:mdims = 1 ;
		Z3:units = "m" ;
		Z3:long_name = "Geopotential Height (above sea level)" ;
		Z3:cell_methods = "time: mean" ;
	int Z3_nacs ;
	double ZM_CLUBB(ilev, lat, lon) ;
		ZM_CLUBB:mdims = 2 ;
		ZM_CLUBB:units = "m" ;
		ZM_CLUBB:long_name = "Momentum Heights" ;
		ZM_CLUBB:cell_methods = "time: mean" ;
	int ZM_CLUBB_nacs ;
	double ZT_CLUBB(ilev, lat, lon) ;
		ZT_CLUBB:mdims = 2 ;
		ZT_CLUBB:units = "m" ;
		ZT_CLUBB:long_name = "Thermodynamic Heights" ;
		ZT_CLUBB:cell_methods = "time: mean" ;
	int ZT_CLUBB_nacs ;
	double cb_BC(lat, lon) ;
		cb_BC:units = "kg/m2" ;
		cb_BC:long_name = "cb_BC column of aerosol type" ;
		cb_BC:cell_methods = "time: mean" ;
	int cb_BC_nacs ;
	double cb_BC_A(lat, lon) ;
		cb_BC_A:units = "kg/m2" ;
		cb_BC_A:long_name = "cb_BC_A in column" ;
		cb_BC_A:cell_methods = "time: mean" ;
	int cb_BC_A_nacs ;
	double cb_BC_AC(lat, lon) ;
		cb_BC_AC:units = "kg/m2" ;
		cb_BC_AC:long_name = "cb_BC_AC in column" ;
		cb_BC_AC:cell_methods = "time: mean" ;
	int cb_BC_AC_nacs ;
	double cb_BC_AC_OCW(lat, lon) ;
		cb_BC_AC_OCW:units = "kg/m2" ;
		cb_BC_AC_OCW:long_name = "cb_BC_AC_OCW column in cloud water" ;
		cb_BC_AC_OCW:cell_methods = "time: mean" ;
	int cb_BC_AC_OCW_nacs ;
	double cb_BC_AI(lat, lon) ;
		cb_BC_AI:units = "kg/m2" ;
		cb_BC_AI:long_name = "cb_BC_AI in column" ;
		cb_BC_AI:cell_methods = "time: mean" ;
	int cb_BC_AI_nacs ;
	double cb_BC_AI_OCW(lat, lon) ;
		cb_BC_AI_OCW:units = "kg/m2" ;
		cb_BC_AI_OCW:long_name = "cb_BC_AI_OCW column in cloud water" ;
		cb_BC_AI_OCW:cell_methods = "time: mean" ;
	int cb_BC_AI_OCW_nacs ;
	double cb_BC_AX(lat, lon) ;
		cb_BC_AX:units = "kg/m2" ;
		cb_BC_AX:long_name = "cb_BC_AX in column" ;
		cb_BC_AX:cell_methods = "time: mean" ;
	int cb_BC_AX_nacs ;
	double cb_BC_A_OCW(lat, lon) ;
		cb_BC_A_OCW:units = "kg/m2" ;
		cb_BC_A_OCW:long_name = "cb_BC_A_OCW column in cloud water" ;
		cb_BC_A_OCW:cell_methods = "time: mean" ;
	int cb_BC_A_OCW_nacs ;
	double cb_BC_N(lat, lon) ;
		cb_BC_N:units = "kg/m2" ;
		cb_BC_N:long_name = "cb_BC_N in column" ;
		cb_BC_N:cell_methods = "time: mean" ;
	int cb_BC_N_nacs ;
	double cb_BC_NI(lat, lon) ;
		cb_BC_NI:units = "kg/m2" ;
		cb_BC_NI:long_name = "cb_BC_NI in column" ;
		cb_BC_NI:cell_methods = "time: mean" ;
	int cb_BC_NI_nacs ;
	double cb_BC_NI_OCW(lat, lon) ;
		cb_BC_NI_OCW:units = "kg/m2" ;
		cb_BC_NI_OCW:long_name = "cb_BC_NI_OCW column in cloud water" ;
		cb_BC_NI_OCW:cell_methods = "time: mean" ;
	int cb_BC_NI_OCW_nacs ;
	double cb_BC_N_OCW(lat, lon) ;
		cb_BC_N_OCW:units = "kg/m2" ;
		cb_BC_N_OCW:long_name = "cb_BC_N_OCW column in cloud water" ;
		cb_BC_N_OCW:cell_methods = "time: mean" ;
	int cb_BC_N_OCW_nacs ;
	double cb_DMS(lat, lon) ;
		cb_DMS:units = "kg/m2" ;
		cb_DMS:long_name = "cb_DMS in column" ;
		cb_DMS:cell_methods = "time: mean" ;
	int cb_DMS_nacs ;
	double cb_DST_A2(lat, lon) ;
		cb_DST_A2:units = "kg/m2" ;
		cb_DST_A2:long_name = "cb_DST_A2 in column" ;
		cb_DST_A2:cell_methods = "time: mean" ;
	int cb_DST_A2_nacs ;
	double cb_DST_A2_OCW(lat, lon) ;
		cb_DST_A2_OCW:units = "kg/m2" ;
		cb_DST_A2_OCW:long_name = "cb_DST_A2_OCW column in cloud water" ;
		cb_DST_A2_OCW:cell_methods = "time: mean" ;
	int cb_DST_A2_OCW_nacs ;
	double cb_DST_A3(lat, lon) ;
		cb_DST_A3:units = "kg/m2" ;
		cb_DST_A3:long_name = "cb_DST_A3 in column" ;
		cb_DST_A3:cell_methods = "time: mean" ;
	int cb_DST_A3_nacs ;
	double cb_DST_A3_OCW(lat, lon) ;
		cb_DST_A3_OCW:units = "kg/m2" ;
		cb_DST_A3_OCW:long_name = "cb_DST_A3_OCW column in cloud water" ;
		cb_DST_A3_OCW:cell_methods = "time: mean" ;
	int cb_DST_A3_OCW_nacs ;
	double cb_DUST(lat, lon) ;
		cb_DUST:units = "kg/m2" ;
		cb_DUST:long_name = "cb_DUST column of aerosol type" ;
		cb_DUST:cell_methods = "time: mean" ;
	int cb_DUST_nacs ;
	double cb_H2O2(lat, lon) ;
		cb_H2O2:units = "kg/m2" ;
		cb_H2O2:long_name = "cb_H2O2 in column" ;
		cb_H2O2:cell_methods = "time: mean" ;
	int cb_H2O2_nacs ;
	double cb_H2SO4(lat, lon) ;
		cb_H2SO4:units = "kg/m2" ;
		cb_H2SO4:long_name = "cb_H2SO4 in column" ;
		cb_H2SO4:cell_methods = "time: mean" ;
	int cb_H2SO4_nacs ;
	double cb_OM(lat, lon) ;
		cb_OM:units = "kg/m2" ;
		cb_OM:long_name = "cb_OM column of aerosol type" ;
		cb_OM:cell_methods = "time: mean" ;
	int cb_OM_nacs ;
	double cb_OM_AC(lat, lon) ;
		cb_OM_AC:units = "kg/m2" ;
		cb_OM_AC:long_name = "cb_OM_AC in column" ;
		cb_OM_AC:cell_methods = "time: mean" ;
	int cb_OM_AC_nacs ;
	double cb_OM_AC_OCW(lat, lon) ;
		cb_OM_AC_OCW:units = "kg/m2" ;
		cb_OM_AC_OCW:long_name = "cb_OM_AC_OCW column in cloud water" ;
		cb_OM_AC_OCW:cell_methods = "time: mean" ;
	int cb_OM_AC_OCW_nacs ;
	double cb_OM_AI(lat, lon) ;
		cb_OM_AI:units = "kg/m2" ;
		cb_OM_AI:long_name = "cb_OM_AI in column" ;
		cb_OM_AI:cell_methods = "time: mean" ;
	int cb_OM_AI_nacs ;
	double cb_OM_AI_OCW(lat, lon) ;
		cb_OM_AI_OCW:units = "kg/m2" ;
		cb_OM_AI_OCW:long_name = "cb_OM_AI_OCW column in cloud water" ;
		cb_OM_AI_OCW:cell_methods = "time: mean" ;
	int cb_OM_AI_OCW_nacs ;
	double cb_OM_NI(lat, lon) ;
		cb_OM_NI:units = "kg/m2" ;
		cb_OM_NI:long_name = "cb_OM_NI in column" ;
		cb_OM_NI:cell_methods = "time: mean" ;
	int cb_OM_NI_nacs ;
	double cb_OM_NI_OCW(lat, lon) ;
		cb_OM_NI_OCW:units = "kg/m2" ;
		cb_OM_NI_OCW:long_name = "cb_OM_NI_OCW column in cloud water" ;
		cb_OM_NI_OCW:cell_methods = "time: mean" ;
	int cb_OM_NI_OCW_nacs ;
	double cb_SALT(lat, lon) ;
		cb_SALT:units = "kg/m2" ;
		cb_SALT:long_name = "cb_SALT column of aerosol type" ;
		cb_SALT:cell_methods = "time: mean" ;
	int cb_SALT_nacs ;
	double cb_SO2(lat, lon) ;
		cb_SO2:units = "kg/m2" ;
		cb_SO2:long_name = "cb_SO2 in column" ;
		cb_SO2:cell_methods = "time: mean" ;
	int cb_SO2_nacs ;
	double cb_SO4_A1(lat, lon) ;
		cb_SO4_A1:units = "kg/m2" ;
		cb_SO4_A1:long_name = "cb_SO4_A1 in column" ;
		cb_SO4_A1:cell_methods = "time: mean" ;
	int cb_SO4_A1_nacs ;
	double cb_SO4_A1_OCW(lat, lon) ;
		cb_SO4_A1_OCW:units = "kg/m2" ;
		cb_SO4_A1_OCW:long_name = "cb_SO4_A1_OCW column in cloud water" ;
		cb_SO4_A1_OCW:cell_methods = "time: mean" ;
	int cb_SO4_A1_OCW_nacs ;
	double cb_SO4_A2(lat, lon) ;
		cb_SO4_A2:units = "kg/m2" ;
		cb_SO4_A2:long_name = "cb_SO4_A2 in column" ;
		cb_SO4_A2:cell_methods = "time: mean" ;
	int cb_SO4_A2_nacs ;
	double cb_SO4_A2_OCW(lat, lon) ;
		cb_SO4_A2_OCW:units = "kg/m2" ;
		cb_SO4_A2_OCW:long_name = "cb_SO4_A2_OCW column in cloud water" ;
		cb_SO4_A2_OCW:cell_methods = "time: mean" ;
	int cb_SO4_A2_OCW_nacs ;
	double cb_SO4_AC(lat, lon) ;
		cb_SO4_AC:units = "kg/m2" ;
		cb_SO4_AC:long_name = "cb_SO4_AC in column" ;
		cb_SO4_AC:cell_methods = "time: mean" ;
	int cb_SO4_AC_nacs ;
	double cb_SO4_AC_OCW(lat, lon) ;
		cb_SO4_AC_OCW:units = "kg/m2" ;
		cb_SO4_AC_OCW:long_name = "cb_SO4_AC_OCW column in cloud water" ;
		cb_SO4_AC_OCW:cell_methods = "time: mean" ;
	int cb_SO4_AC_OCW_nacs ;
	double cb_SO4_NA(lat, lon) ;
		cb_SO4_NA:units = "kg/m2" ;
		cb_SO4_NA:long_name = "cb_SO4_NA in column" ;
		cb_SO4_NA:cell_methods = "time: mean" ;
	int cb_SO4_NA_nacs ;
	double cb_SO4_NA_OCW(lat, lon) ;
		cb_SO4_NA_OCW:units = "kg/m2" ;
		cb_SO4_NA_OCW:long_name = "cb_SO4_NA_OCW column in cloud water" ;
		cb_SO4_NA_OCW:cell_methods = "time: mean" ;
	int cb_SO4_NA_OCW_nacs ;
	double cb_SO4_PR(lat, lon) ;
		cb_SO4_PR:units = "kg/m2" ;
		cb_SO4_PR:long_name = "cb_SO4_PR in column" ;
		cb_SO4_PR:cell_methods = "time: mean" ;
	int cb_SO4_PR_nacs ;
	double cb_SO4_PR_OCW(lat, lon) ;
		cb_SO4_PR_OCW:units = "kg/m2" ;
		cb_SO4_PR_OCW:long_name = "cb_SO4_PR_OCW column in cloud water" ;
		cb_SO4_PR_OCW:cell_methods = "time: mean" ;
	int cb_SO4_PR_OCW_nacs ;
	double cb_SOA_A1(lat, lon) ;
		cb_SOA_A1:units = "kg/m2" ;
		cb_SOA_A1:long_name = "cb_SOA_A1 in column" ;
		cb_SOA_A1:cell_methods = "time: mean" ;
	int cb_SOA_A1_nacs ;
	double cb_SOA_A1_OCW(lat, lon) ;
		cb_SOA_A1_OCW:units = "kg/m2" ;
		cb_SOA_A1_OCW:long_name = "cb_SOA_A1_OCW column in cloud water" ;
		cb_SOA_A1_OCW:cell_methods = "time: mean" ;
	int cb_SOA_A1_OCW_nacs ;
	double cb_SOA_LV(lat, lon) ;
		cb_SOA_LV:units = "kg/m2" ;
		cb_SOA_LV:long_name = "cb_SOA_LV in column" ;
		cb_SOA_LV:cell_methods = "time: mean" ;
	int cb_SOA_LV_nacs ;
	double cb_SOA_NA(lat, lon) ;
		cb_SOA_NA:units = "kg/m2" ;
		cb_SOA_NA:long_name = "cb_SOA_NA in column" ;
		cb_SOA_NA:cell_methods = "time: mean" ;
	int cb_SOA_NA_nacs ;
	double cb_SOA_NA_OCW(lat, lon) ;
		cb_SOA_NA_OCW:units = "kg/m2" ;
		cb_SOA_NA_OCW:long_name = "cb_SOA_NA_OCW column in cloud water" ;
		cb_SOA_NA_OCW:cell_methods = "time: mean" ;
	int cb_SOA_NA_OCW_nacs ;
	double cb_SOA_SV(lat, lon) ;
		cb_SOA_SV:units = "kg/m2" ;
		cb_SOA_SV:long_name = "cb_SOA_SV in column" ;
		cb_SOA_SV:cell_methods = "time: mean" ;
	int cb_SOA_SV_nacs ;
	double cb_SS_A1(lat, lon) ;
		cb_SS_A1:units = "kg/m2" ;
		cb_SS_A1:long_name = "cb_SS_A1 in column" ;
		cb_SS_A1:cell_methods = "time: mean" ;
	int cb_SS_A1_nacs ;
	double cb_SS_A1_OCW(lat, lon) ;
		cb_SS_A1_OCW:units = "kg/m2" ;
		cb_SS_A1_OCW:long_name = "cb_SS_A1_OCW column in cloud water" ;
		cb_SS_A1_OCW:cell_methods = "time: mean" ;
	int cb_SS_A1_OCW_nacs ;
	double cb_SS_A2(lat, lon) ;
		cb_SS_A2:units = "kg/m2" ;
		cb_SS_A2:long_name = "cb_SS_A2 in column" ;
		cb_SS_A2:cell_methods = "time: mean" ;
	int cb_SS_A2_nacs ;
	double cb_SS_A2_OCW(lat, lon) ;
		cb_SS_A2_OCW:units = "kg/m2" ;
		cb_SS_A2_OCW:long_name = "cb_SS_A2_OCW column in cloud water" ;
		cb_SS_A2_OCW:cell_methods = "time: mean" ;
	int cb_SS_A2_OCW_nacs ;
	double cb_SS_A3(lat, lon) ;
		cb_SS_A3:units = "kg/m2" ;
		cb_SS_A3:long_name = "cb_SS_A3 in column" ;
		cb_SS_A3:cell_methods = "time: mean" ;
	int cb_SS_A3_nacs ;
	double cb_SS_A3_OCW(lat, lon) ;
		cb_SS_A3_OCW:units = "kg/m2" ;
		cb_SS_A3_OCW:long_name = "cb_SS_A3_OCW column in cloud water" ;
		cb_SS_A3_OCW:cell_methods = "time: mean" ;
	int cb_SS_A3_OCW_nacs ;
	double cb_SULFATE(lat, lon) ;
		cb_SULFATE:units = "kg/m2" ;
		cb_SULFATE:long_name = "cb_SULFATE column of aerosol type" ;
		cb_SULFATE:cell_methods = "time: mean" ;
	int cb_SULFATE_nacs ;
	double cb_isoprene(lat, lon) ;
		cb_isoprene:units = "kg/m2" ;
		cb_isoprene:long_name = "cb_isoprene in column" ;
		cb_isoprene:cell_methods = "time: mean" ;
	int cb_isoprene_nacs ;
	double cb_monoterp(lat, lon) ;
		cb_monoterp:units = "kg/m2" ;
		cb_monoterp:long_name = "cb_monoterp in column" ;
		cb_monoterp:cell_methods = "time: mean" ;
	int cb_monoterp_nacs ;
	double dU(lev, lat, lon) ;
		dU:mdims = 1 ;
		dU:units = "K" ;
		dU:long_name = "U dyn increm" ;
		dU:cell_methods = "time: mean" ;
	int dU_nacs ;
	double dUa(lev, lat, lon) ;
		dUa:mdims = 1 ;
		dUa:units = "K" ;
		dUa:long_name = "U adv increm" ;
		dUa:cell_methods = "time: mean" ;
	int dUa_nacs ;
	double dUazm(ilev, lat, zlon) ;
		dUazm:mdims = 2 ;
		dUazm:units = "M/S" ;
		dUazm:long_name = "Zonal-Mean U adv increm - defined on ilev" ;
		dUazm:cell_methods = "zlon: mean time: mean" ;
	int dUazm_nacs ;
	double dUf(lev, lat, lon) ;
		dUf:mdims = 1 ;
		dUf:units = "K" ;
		dUf:long_name = "U fixer incr" ;
		dUf:cell_methods = "time: mean" ;
	int dUf_nacs ;
	double dUfzm(ilev, lat, zlon) ;
		dUfzm:mdims = 2 ;
		dUfzm:units = "M/S" ;
		dUfzm:long_name = "Zonal-Mean U fixer incr - defined on ilev" ;
		dUfzm:cell_methods = "zlon: mean time: mean" ;
	int dUfzm_nacs ;
	double dUzm(ilev, lat, zlon) ;
		dUzm:mdims = 2 ;
		dUzm:units = "M/S" ;
		dUzm:long_name = "Zonal-Mean U dyn increm - defined on ilev" ;
		dUzm:cell_methods = "zlon: mean time: mean" ;
	int dUzm_nacs ;
	double dV(lev, lat, lon) ;
		dV:mdims = 1 ;
		dV:units = "K" ;
		dV:long_name = "V dyn increm" ;
		dV:cell_methods = "time: mean" ;
	int dV_nacs ;
	double dVa(lev, lat, lon) ;
		dVa:mdims = 1 ;
		dVa:units = "K" ;
		dVa:long_name = "V adv increm" ;
		dVa:cell_methods = "time: mean" ;
	int dVa_nacs ;
	double dVazm(ilev, lat, zlon) ;
		dVazm:mdims = 2 ;
		dVazm:units = "M/S" ;
		dVazm:long_name = "Zonal-Mean V adv increm - defined on ilev" ;
		dVazm:cell_methods = "zlon: mean time: mean" ;
	int dVazm_nacs ;
	double dVzm(ilev, lat, zlon) ;
		dVzm:mdims = 2 ;
		dVzm:units = "M/S" ;
		dVzm:long_name = "Zonal-Mean V dyn increm - defined on ilev" ;
		dVzm:cell_methods = "zlon: mean time: mean" ;
	int dVzm_nacs ;
	double isoprene(lev, lat, lon) ;
		isoprene:mdims = 1 ;
		isoprene:units = "mol/mol" ;
		isoprene:long_name = "isoprene concentration" ;
		isoprene:cell_methods = "time: mean" ;
	int isoprene_nacs ;
	double isoprene_SRF(lat, lon) ;
		isoprene_SRF:units = "mol/mol" ;
		isoprene_SRF:long_name = "isoprene in bottom layer" ;
		isoprene_SRF:cell_methods = "time: mean" ;
	int isoprene_SRF_nacs ;
	double mmr_BC(lev, lat, lon) ;
		mmr_BC:mdims = 1 ;
		mmr_BC:units = "kg/kg" ;
		mmr_BC:long_name = "mmr_BC mmr of aerosol type" ;
		mmr_BC:cell_methods = "time: mean" ;
	int mmr_BC_nacs ;
	double mmr_DUST(lev, lat, lon) ;
		mmr_DUST:mdims = 1 ;
		mmr_DUST:units = "kg/kg" ;
		mmr_DUST:long_name = "mmr_DUST mmr of aerosol type" ;
		mmr_DUST:cell_methods = "time: mean" ;
	int mmr_DUST_nacs ;
	double mmr_OM(lev, lat, lon) ;
		mmr_OM:mdims = 1 ;
		mmr_OM:units = "kg/kg" ;
		mmr_OM:long_name = "mmr_OM mmr of aerosol type" ;
		mmr_OM:cell_methods = "time: mean" ;
	int mmr_OM_nacs ;
	double mmr_SALT(lev, lat, lon) ;
		mmr_SALT:mdims = 1 ;
		mmr_SALT:units = "kg/kg" ;
		mmr_SALT:long_name = "mmr_SALT mmr of aerosol type" ;
		mmr_SALT:cell_methods = "time: mean" ;
	int mmr_SALT_nacs ;
	double mmr_SULFATE(lev, lat, lon) ;
		mmr_SULFATE:mdims = 1 ;
		mmr_SULFATE:units = "kg/kg" ;
		mmr_SULFATE:long_name = "mmr_SULFATE mmr of aerosol type" ;
		mmr_SULFATE:cell_methods = "time: mean" ;
	int mmr_SULFATE_nacs ;
	double monoterp(lev, lat, lon) ;
		monoterp:mdims = 1 ;
		monoterp:units = "mol/mol" ;
		monoterp:long_name = "monoterp concentration" ;
		monoterp:cell_methods = "time: mean" ;
	int monoterp_nacs ;
	double monoterp_SRF(lat, lon) ;
		monoterp_SRF:units = "mol/mol" ;
		monoterp_SRF:long_name = "monoterp in bottom layer" ;
		monoterp_SRF:cell_methods = "time: mean" ;
	int monoterp_SRF_nacs ;

// global attributes:
		:Conventions = "CF-1.0" ;
		:source = "CAM" ;
		:case = "newnoresm_precip3" ;
		:logname = "jonahks" ;
		:host = "" ;
		:initial_file = "/cluster/shared/noresm/inputdata/atm/cam/inic/fv/cami-mam3_0000-01-01_1.9x2.5_L32_c150407.nc" ;
		:topography_file = "/cluster/shared/noresm/inputdata/atm/cam/topo/fv_1.9x2.5_nc3000_Nsw084_Nrs016_Co120_Fi001_ZR_061116.nc" ;
		:model_doi_url = "https://doi.org/10.5065/D67H1H0V" ;
		:time_period_freq = "month_1" ;
}
